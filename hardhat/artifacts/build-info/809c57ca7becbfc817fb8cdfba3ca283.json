{"id":"809c57ca7becbfc817fb8cdfba3ca283","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@1inch/solidity-utils/contracts/libraries/AddressArray.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @title Library that implements address array on mapping, stores array length at 0 index.\nlibrary AddressArray {\n    error IndexOutOfBounds();\n    error PopFromEmptyArray();\n    error OutputArrayTooSmall();\n\n    /// @dev Data struct containing raw mapping.\n    struct Data {\n        mapping(uint256 => uint256) _raw;\n    }\n\n    /// @dev Length of array.\n    function length(Data storage self) internal view returns (uint256) {\n        return self._raw[0] >> 160;\n    }\n\n    /// @dev Returns data item from `self` storage at `i`.\n    function at(Data storage self, uint256 i) internal view returns (address) {\n        return address(uint160(self._raw[i]));\n    }\n\n    /// @dev Returns list of addresses from storage `self`.\n    function get(Data storage self) internal view returns (address[] memory arr) {\n        uint256 lengthAndFirst = self._raw[0];\n        arr = new address[](lengthAndFirst >> 160);\n        _get(self, arr, lengthAndFirst);\n    }\n\n    /// @dev Puts list of addresses from `self` storage into `output` array.\n    function get(Data storage self, address[] memory output) internal view returns (address[] memory) {\n        return _get(self, output, self._raw[0]);\n    }\n\n    function _get(\n        Data storage self,\n        address[] memory output,\n        uint256 lengthAndFirst\n    ) private view returns (address[] memory) {\n        uint256 len = lengthAndFirst >> 160;\n        if (len > output.length) revert OutputArrayTooSmall();\n        if (len > 0) {\n            output[0] = address(uint160(lengthAndFirst));\n            unchecked {\n                for (uint256 i = 1; i < len; i++) {\n                    output[i] = address(uint160(self._raw[i]));\n                }\n            }\n        }\n        return output;\n    }\n\n    /// @dev Array push back `account` operation on storage `self`.\n    function push(Data storage self, address account) internal returns (uint256) {\n        unchecked {\n            uint256 lengthAndFirst = self._raw[0];\n            uint256 len = lengthAndFirst >> 160;\n            if (len == 0) {\n                self._raw[0] = (1 << 160) + uint160(account);\n            } else {\n                self._raw[0] = lengthAndFirst + (1 << 160);\n                self._raw[len] = uint160(account);\n            }\n            return len + 1;\n        }\n    }\n\n    /// @dev Array pop back operation for storage `self`.\n    function pop(Data storage self) internal {\n        unchecked {\n            uint256 lengthAndFirst = self._raw[0];\n            uint256 len = lengthAndFirst >> 160;\n            if (len == 0) revert PopFromEmptyArray();\n            self._raw[len - 1] = 0;\n            if (len > 1) {\n                self._raw[0] = lengthAndFirst - (1 << 160);\n            }\n        }\n    }\n\n    /// @dev Set element for storage `self` at `index` to `account`.\n    function set(\n        Data storage self,\n        uint256 index,\n        address account\n    ) internal {\n        uint256 len = length(self);\n        if (index >= len) revert IndexOutOfBounds();\n\n        if (index == 0) {\n            self._raw[0] = (len << 160) | uint160(account);\n        } else {\n            self._raw[index] = uint160(account);\n        }\n    }\n}\n"},"@1inch/solidity-utils/contracts/libraries/AddressSet.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./AddressArray.sol\";\n\n/** @title Library that is using AddressArray library for AddressArray.Data\n * and allows Set operations on address storage data:\n * 1. add\n * 2. remove\n * 3. contains\n */\nlibrary AddressSet {\n    using AddressArray for AddressArray.Data;\n\n    /** @dev Data struct from AddressArray.Data items\n     * and lookup mapping address => index in data array.\n     */\n    struct Data {\n        AddressArray.Data items;\n        mapping(address => uint256) lookup;\n    }\n\n    /// @dev Length of data storage.\n    function length(Data storage s) internal view returns (uint256) {\n        return s.items.length();\n    }\n\n    /// @dev Returns data item from `s` storage at `index`.\n    function at(Data storage s, uint256 index) internal view returns (address) {\n        return s.items.at(index);\n    }\n\n    /// @dev Returns true if storage `s` has `item`.\n    function contains(Data storage s, address item) internal view returns (bool) {\n        return s.lookup[item] != 0;\n    }\n\n    /// @dev Adds `item` into storage `s` and returns true if successful.\n    function add(Data storage s, address item) internal returns (bool) {\n        if (s.lookup[item] > 0) {\n            return false;\n        }\n        s.lookup[item] = s.items.push(item);\n        return true;\n    }\n\n    /// @dev Removes `item` from storage `s` and returns true if successful.\n    function remove(Data storage s, address item) internal returns (bool) {\n        uint256 index = s.lookup[item];\n        if (index == 0) {\n            return false;\n        }\n        if (index < s.items.length()) {\n            unchecked {\n                address lastItem = s.items.at(s.items.length() - 1);\n                s.items.set(index - 1, lastItem);\n                s.lookup[lastItem] = index;\n            }\n        }\n        s.items.pop();\n        delete s.lookup[item];\n        return true;\n    }\n}\n"},"@1inch/token-plugins/contracts/ERC20Plugins.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { IERC20, ERC20 } from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport { AddressSet, AddressArray } from \"@1inch/solidity-utils/contracts/libraries/AddressSet.sol\";\n\nimport { IERC20Plugins } from \"./interfaces/IERC20Plugins.sol\";\nimport { IPlugin } from \"./interfaces/IPlugin.sol\";\nimport { ReentrancyGuardExt, ReentrancyGuardLib } from \"./libs/ReentrancyGuard.sol\";\n\n/**\n * @title ERC20Plugins\n * @dev A base implementation of token contract to hold and manage plugins of an ERC20 token with a limited number of plugins per account.\n * Each plugin is a contract that implements IPlugin interface (and/or derived from plugin).\n */\nabstract contract ERC20Plugins is ERC20, IERC20Plugins, ReentrancyGuardExt {\n    using AddressSet for AddressSet.Data;\n    using AddressArray for AddressArray.Data;\n    using ReentrancyGuardLib for ReentrancyGuardLib.Data;\n\n    error PluginAlreadyAdded();\n    error PluginNotFound();\n    error InvalidPluginAddress();\n    error InvalidTokenInPlugin();\n    error PluginsLimitReachedForAccount();\n    error ZeroPluginsLimit();\n\n    /// @dev Limit of plugins per account\n    uint256 public immutable pluginsCountLimit;\n    /// @dev Gas limit for a single plugin call\n    uint256 public immutable pluginsCallGasLimit;\n\n    ReentrancyGuardLib.Data private _guard;\n    mapping(address => AddressSet.Data) private _plugins;\n\n    /**\n     * @dev Constructor that sets the limit of plugins per account and the gas limit for a plugin call.\n     * @param pluginsLimit_ The limit of plugins per account.\n     * @param pluginCallGasLimit_ The gas limit for a plugin call. Intended to prevent gas bomb attacks\n     */\n    constructor(uint256 pluginsLimit_, uint256 pluginCallGasLimit_) {\n        if (pluginsLimit_ == 0) revert ZeroPluginsLimit();\n        pluginsCountLimit = pluginsLimit_;\n        pluginsCallGasLimit = pluginCallGasLimit_;\n        _guard.init();\n    }\n\n    /**\n     * @dev Returns whether an account has a specific plugin.\n     * @param account The address of the account.\n     * @param plugin The address of the plugin.\n     * @return bool A boolean indicating whether the account has the specified plugin.\n     */\n    function hasPlugin(address account, address plugin) public view virtual returns(bool) {\n        return _plugins[account].contains(plugin);\n    }\n\n    /**\n     * @dev Returns the number of plugins registered for an account.\n     * @param account The address of the account.\n     * @return uint256 A number of plugins registered for the account.\n     */\n    function pluginsCount(address account) public view virtual returns(uint256) {\n        return _plugins[account].length();\n    }\n\n    /**\n     * @dev Returns the address of a plugin at a specified index for a given account .\n     * @param account The address of the account.\n     * @param index The index of the plugin to retrieve.\n     * @return plugin The address of the plugin.\n     */\n    function pluginAt(address account, uint256 index) public view virtual returns(address) {\n        return _plugins[account].at(index);\n    }\n\n    /**\n     * @dev Returns an array of all plugins owned by a given account.\n     * @param account The address of the account to query.\n     * @return plugins An array of plugin addresses.\n     */\n    function plugins(address account) public view virtual returns(address[] memory) {\n        return _plugins[account].items.get();\n    }\n\n\n    /**\n     * @dev Returns the balance of a given account.\n     * @param account The address of the account.\n     * @return balance The account balance.\n     */\n    function balanceOf(address account) public nonReentrantView(_guard) view override(IERC20, ERC20) virtual returns(uint256) {\n        return super.balanceOf(account);\n    }\n\n    /**\n     * @dev Returns the balance of a given account if a specified plugin is added or zero.\n     * @param plugin The address of the plugin to query.\n     * @param account The address of the account to query.\n     * @return balance The account balance if the specified plugin is added and zero otherwise.\n     */\n    function pluginBalanceOf(address plugin, address account) public nonReentrantView(_guard) view virtual returns(uint256) {\n        if (hasPlugin(account, plugin)) {\n            return super.balanceOf(account);\n        }\n        return 0;\n    }\n\n    /**\n     * @dev Adds a new plugin for the calling account.\n     * @param plugin The address of the plugin to add.\n     */\n    function addPlugin(address plugin) public virtual {\n        _addPlugin(msg.sender, plugin);\n    }\n\n    /**\n     * @dev Removes a plugin for the calling account.\n     * @param plugin The address of the plugin to remove.\n     */\n    function removePlugin(address plugin) public virtual {\n        _removePlugin(msg.sender, plugin);\n    }\n\n    /**\n     * @dev Removes all plugins for the calling account.\n     */\n    function removeAllPlugins() public virtual {\n        _removeAllPlugins(msg.sender);\n    }\n\n    function _addPlugin(address account, address plugin) internal virtual {\n        if (plugin == address(0)) revert InvalidPluginAddress();\n        if (IPlugin(plugin).token() != IERC20Plugins(address(this))) revert InvalidTokenInPlugin();\n        if (!_plugins[account].add(plugin)) revert PluginAlreadyAdded();\n        if (_plugins[account].length() > pluginsCountLimit) revert PluginsLimitReachedForAccount();\n\n        emit PluginAdded(account, plugin);\n        uint256 balance = balanceOf(account);\n        if (balance > 0) {\n            _updateBalances(plugin, address(0), account, balance);\n        }\n    }\n\n    function _removePlugin(address account, address plugin) internal virtual {\n        if (!_plugins[account].remove(plugin)) revert PluginNotFound();\n\n        emit PluginRemoved(account, plugin);\n        uint256 balance = balanceOf(account);\n        if (balance > 0) {\n            _updateBalances(plugin, account, address(0), balance);\n        }\n    }\n\n    function _removeAllPlugins(address account) internal virtual {\n        address[] memory items = _plugins[account].items.get();\n        uint256 balance = balanceOf(account);\n        unchecked {\n            for (uint256 i = items.length; i > 0; i--) {\n                _plugins[account].remove(items[i - 1]);\n                emit PluginRemoved(account, items[i - 1]);\n                if (balance > 0) {\n                    _updateBalances(items[i - 1], account, address(0), balance);\n                }\n            }\n        }\n    }\n\n    /// @notice Assembly implementation of the gas limited call to avoid return gas bomb,\n    // moreover call to a destructed plugin would also revert even inside try-catch block in Solidity 0.8.17\n    /// @dev try IPlugin(plugin).updateBalances{gas: _PLUGIN_CALL_GAS_LIMIT}(from, to, amount) {} catch {}\n    function _updateBalances(address plugin, address from, address to, uint256 amount) private {\n        bytes4 selector = IPlugin.updateBalances.selector;\n        uint256 gasLimit = pluginsCallGasLimit;\n        assembly (\"memory-safe\") { // solhint-disable-line no-inline-assembly\n            let ptr := mload(0x40)\n            mstore(ptr, selector)\n            mstore(add(ptr, 0x04), from)\n            mstore(add(ptr, 0x24), to)\n            mstore(add(ptr, 0x44), amount)\n\n            let gasLeft := gas()\n            if iszero(call(gasLimit, plugin, 0, ptr, 0x64, 0, 0)) {\n                if lt(div(mul(gasLeft, 63), 64), gasLimit) {\n                    returndatacopy(ptr, 0, returndatasize())\n                    revert(ptr, returndatasize())\n                }\n            }\n        }\n    }\n\n    // ERC20 Overrides\n\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal nonReentrant(_guard) override virtual {\n        super._afterTokenTransfer(from, to, amount);\n\n        unchecked {\n            if (amount > 0 && from != to) {\n                address[] memory a = _plugins[from].items.get();\n                address[] memory b = _plugins[to].items.get();\n                uint256 aLength = a.length;\n                uint256 bLength = b.length;\n\n                for (uint256 i = 0; i < aLength; i++) {\n                    address plugin = a[i];\n\n                    uint256 j;\n                    for (j = 0; j < bLength; j++) {\n                        if (plugin == b[j]) {\n                            // Both parties are participating of the same plugin\n                            _updateBalances(plugin, from, to, amount);\n                            b[j] = address(0);\n                            break;\n                        }\n                    }\n\n                    if (j == bLength) {\n                        // Sender is participating in a plugin, but receiver is not\n                        _updateBalances(plugin, from, address(0), amount);\n                    }\n                }\n\n                for (uint256 j = 0; j < bLength; j++) {\n                    address plugin = b[j];\n                    if (plugin != address(0)) {\n                        // Receiver is participating in a plugin, but sender is not\n                        _updateBalances(plugin, address(0), to, amount);\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ninterface IERC20Plugins is IERC20 {\n    event PluginAdded(address account, address plugin);\n    event PluginRemoved(address account, address plugin);\n\n    function pluginsCountLimit() external view returns(uint256);\n    function pluginsCallGasLimit() external view returns(uint256);\n    function hasPlugin(address account, address plugin) external view returns(bool);\n    function pluginsCount(address account) external view returns(uint256);\n    function pluginAt(address account, uint256 index) external view returns(address);\n    function plugins(address account) external view returns(address[] memory);\n    function pluginBalanceOf(address plugin, address account) external view returns(uint256);\n\n    function addPlugin(address plugin) external;\n    function removePlugin(address plugin) external;\n    function removeAllPlugins() external;\n}\n"},"@1inch/token-plugins/contracts/interfaces/IPlugin.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { IERC20Plugins } from \"./IERC20Plugins.sol\";\n\ninterface IPlugin {\n    function token() external view returns(IERC20Plugins);\n    function updateBalances(address from, address to, uint256 amount) external;\n}\n"},"@1inch/token-plugins/contracts/libs/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @title ReentrancyGuardLib\n * @dev Library that provides reentrancy protection for functions.\n */\nlibrary ReentrancyGuardLib {\n\n    /// @dev Emit when reentrancy detected\n    error ReentrantCall();\n\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    /// @dev Struct to hold the current status of the contract.\n    struct Data {\n        uint256 _status;\n    }\n\n    /**\n     * @dev Initializes the struct with the current status set to not entered.\n     * @param self The storage reference to the struct.\n     */\n    function init(Data storage self) internal {\n        self._status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Sets the status to entered if it is not already entered, otherwise reverts.\n     * @param self The storage reference to the struct.\n     */\n    function enter(Data storage self) internal {\n        if (self._status == _ENTERED) revert ReentrantCall();\n        self._status = _ENTERED;\n    }\n\n    /**\n     * @dev Resets the status to not entered.\n     * @param self The storage reference to the struct.\n     */\n    function exit(Data storage self) internal {\n        self._status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Checks the current status of the contract to ensure that it is not already entered.\n     * @param self The storage reference to the struct.\n     * @return Whether or not the contract is currently entered.\n     */\n    function check(Data storage self) internal view returns (bool) {\n        return self._status == _ENTERED;\n    }\n}\n\n/**\n * @title ReentrancyGuardExt\n * @dev Contract that uses the ReentrancyGuardLib to provide reentrancy protection.\n */\ncontract ReentrancyGuardExt {\n    using ReentrancyGuardLib for ReentrancyGuardLib.Data;\n\n    /**\n     * @dev Modifier that ensures a function can only be called once in the same block.\n     * @param self The storage reference to the struct.\n     */\n    modifier nonReentrant(ReentrancyGuardLib.Data storage self) {\n        self.enter();\n        _;\n        self.exit();\n    }\n\n    /**\n     * @dev Modifier that ensures a function can only be called once in the same block in view mode.\n     * @param self The storage reference to the struct.\n     */\n    modifier nonReentrantView(ReentrancyGuardLib.Data storage self) {\n        if (self.check()) revert ReentrancyGuardLib.ReentrantCall();\n        _;\n    }\n}\n"},"@1inch/token-plugins/contracts/Plugin.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { IPlugin } from \"./interfaces/IPlugin.sol\";\nimport { IERC20Plugins } from \"./interfaces/IERC20Plugins.sol\";\n\n\n/// @dev ERC20 extension enabling external smart contract based plugins to track balances of those users who opted-in to these plugins.\n/// Could be useful for farming / DAO voting and every case where you need to track user's balances without moving tokens to another contract.\nabstract contract Plugin is IPlugin {\n    error AccessDenied();\n\n    IERC20Plugins public immutable token;\n\n    /// @dev Throws an error if the caller is not the token contract\n    modifier onlyToken {\n        if (msg.sender != address(token)) revert AccessDenied();\n        _;\n    }\n\n    /// @dev Creates a new plugin contract, initialized with a reference to the parent token contract.\n    /// @param token_ The address of the token contract\n    constructor(IERC20Plugins token_) {\n        token = token_;\n    }\n\n    /// @dev Updates the balances of two addresses in the plugin as a result of any balance changes.\n    /// Only the Token contract is allowed to call this function.\n    /// @param from The address from which tokens were transferred\n    /// @param to The address to which tokens were transferred\n    /// @param amount The amount of tokens transferred\n    function updateBalances(address from, address to, uint256 amount) external onlyToken {\n        _updateBalances(from, to, amount);\n    }\n\n    /// @dev Updates the balances of two addresses in the plugin as a result of any balance changes.\n    /// Only the Token contract is allowed to call this function.\n    /// @param from The address from which tokens were transferred\n    /// @param to The address to which tokens were transferred\n    /// @param amount The amount of tokens transferred\n    function _updateBalances(address from, address to, uint256 amount) internal virtual;\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/CompanyStock.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { IERC20, ERC20 } from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport { ERC20Plugins } from \"@1inch/token-plugins/contracts/ERC20Plugins.sol\";\nimport { ICompanyStock } from \"./interfaces/ICompanyStock.sol\";\n\n/// @title CompanyStock\n/// @dev CompanyStock is a specialized version of an ERC20 token with additional functionalities that acts as the stock in the company.\ncontract CompanyStock is ICompanyStock, ERC20Plugins {\n  error NotOwnerPlugin();\n\n  /// @notice The address of the owner plugin.\n  address public immutable ownerPlugin;\n\n  /// @dev Throws if called by any account other than the ownerPlugin.\n  modifier onlyOwnerPlugin() {\n    if (msg.sender != ownerPlugin) revert NotOwnerPlugin();\n    _;\n  }\n\n  /// @param name_ The name of the token.\n  /// @param symbol_ The symbol of the token.\n  /// @param maxUserPlugins_ The maximum number of user plugins.\n  /// @param pluginCallGasLimit_ The gas limit for plugin calls.\n  constructor(\n    string memory name_,\n    string memory symbol_,\n    uint256 maxUserPlugins_,\n    uint256 pluginCallGasLimit_\n  ) ERC20(name_, symbol_) ERC20Plugins(maxUserPlugins_, pluginCallGasLimit_) {\n    ownerPlugin = msg.sender;\n  }\n\n  /// @notice Mint tokens.\n  /// @dev Only callable by the owner plugin.\n  /// @param account The address to mint tokens to.\n  /// @param amount The amount of tokens to mint.\n  function mint(address account, uint256 amount) external onlyOwnerPlugin {\n    _mint(account, amount);\n  }\n\n  /// @notice Burn tokens.\n  /// @dev Only callable by the owner plugin.\n  /// @param account The address to burn tokens from.\n  /// @param amount The amount of tokens to burn.\n  function burn(address account, uint256 amount) external onlyOwnerPlugin {\n    _burn(account, amount);\n  }\n}\n"},"contracts/DividendDispatcherPlugin.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { IERC20, ERC20 } from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport { Plugin } from \"@1inch/token-plugins/contracts/Plugin.sol\";\nimport { IERC20Plugins } from \"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol\";\nimport { IDividendDispatcherPlugin } from \"./interfaces/IDividendDispatcherPlugin.sol\";\n\ncontract DividendDispatcherPlugin is IDividendDispatcherPlugin, Plugin, ERC20 {\n  error ApproveDisabled();\n  error TransferDisabled();\n\n  mapping(address => uint256) public ledger;\n  mapping(address => bool) public users;\n\n  constructor(string memory name_, string memory symbol_, IERC20Plugins token_) ERC20(name_, symbol_) Plugin(token_) {}\n\n  function payDividend(uint256 value) public virtual {\n    uint256 balance = IERC20Plugins(token).pluginBalanceOf(address(this), msg.sender);\n  }\n\n  function _updateBalances(address from, address to, uint256 amount) internal override {\n    users[to] = true;\n    // Update info\n    ledger[from] = ledger[from] - amount;\n    ledger[to] = ledger[to] + amount;\n  }\n\n  // ERC20 overrides\n  function transfer(address /* to */, uint256 /* amount */) public pure override(IERC20, ERC20) returns (bool) {\n    revert TransferDisabled();\n  }\n\n  function transferFrom(address /* from */, address /* to */, uint256 /* amount */) public pure override(IERC20, ERC20) returns (bool) {\n    revert TransferDisabled();\n  }\n\n  function approve(address /* spender */, uint256 /* amount */) public pure override(ERC20, IERC20) returns (bool) {\n    revert ApproveDisabled();\n  }\n\n  function increaseAllowance(address /* spender */, uint256 /* addedValue */) public pure override returns (bool) {\n    revert ApproveDisabled();\n  }\n\n  function decreaseAllowance(address /* spender */, uint256 /* subtractedValue */) public pure override returns (bool) {\n    revert ApproveDisabled();\n  }\n}\n"},"contracts/interfaces/ICompanyStock.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { IERC20Plugins } from \"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol\";\n\ninterface ICompanyStock is IERC20Plugins {\n    function mint(address account, uint256 amount) external; // onlyOwner\n    function burn(address account, uint256 amount) external; // onlyOwner\n}\n"},"contracts/interfaces/IDividendDispatcherPlugin.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { IPlugin } from \"@1inch/token-plugins/contracts/interfaces/IPlugin.sol\";\n\ninterface IDividendDispatcherPlugin is IPlugin, IERC20 {\n  function payDividend(uint256 value) external;\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":1000000},"viaIR":true,"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/DividendDispatcherPlugin.sol:19:24:\n   |\n19 |   function payDividend(uint256 value) public virtual {\n   |                        ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":767,"file":"contracts/DividendDispatcherPlugin.sol","start":754},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/DividendDispatcherPlugin.sol:20:5:\n   |\n20 |     uint256 balance = IERC20Plugins(token).pluginBalanceOf(address(this), msg.sender);\n   |     ^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":805,"file":"contracts/DividendDispatcherPlugin.sol","start":790},"type":"Warning"}],"sources":{"@1inch/solidity-utils/contracts/libraries/AddressArray.sol":{"ast":{"absolutePath":"@1inch/solidity-utils/contracts/libraries/AddressArray.sol","exportedSymbols":{"AddressArray":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressArray","contractDependencies":[],"contractKind":"library","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"58:93:0","text":"@title Library that implements address array on mapping, stores array length at 0 index."},"fullyImplemented":true,"id":378,"linearizedBaseContracts":[378],"name":"AddressArray","nameLocation":"159:12:0","nodeType":"ContractDefinition","nodes":[{"errorSelector":"4e23d035","id":4,"name":"IndexOutOfBounds","nameLocation":"184:16:0","nodeType":"ErrorDefinition","parameters":{"id":3,"nodeType":"ParameterList","parameters":[],"src":"200:2:0"},"src":"178:25:0"},{"errorSelector":"06a2af9e","id":6,"name":"PopFromEmptyArray","nameLocation":"214:17:0","nodeType":"ErrorDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[],"src":"231:2:0"},"src":"208:26:0"},{"errorSelector":"f9a99b25","id":8,"name":"OutputArrayTooSmall","nameLocation":"245:19:0","nodeType":"ErrorDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"264:2:0"},"src":"239:28:0"},{"canonicalName":"AddressArray.Data","id":13,"members":[{"constant":false,"id":12,"mutability":"mutable","name":"_raw","nameLocation":"372:4:0","nodeType":"VariableDeclaration","scope":13,"src":"344:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":11,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9,"name":"uint256","nodeType":"ElementaryTypeName","src":"352:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"344:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10,"name":"uint256","nodeType":"ElementaryTypeName","src":"363:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Data","nameLocation":"329:4:0","nodeType":"StructDefinition","scope":378,"src":"322:61:0","visibility":"public"},{"body":{"id":29,"nodeType":"Block","src":"486:43:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":22,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"503:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":23,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"508:4:0","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":12,"src":"503:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":25,"indexExpression":{"hexValue":"30","id":24,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"503:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"519:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"503:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":21,"id":28,"nodeType":"Return","src":"496:26:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"389:25:0","text":"@dev Length of array."},"id":30,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"428:6:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17,"mutability":"mutable","name":"self","nameLocation":"448:4:0","nodeType":"VariableDeclaration","scope":30,"src":"435:17:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data"},"typeName":{"id":16,"nodeType":"UserDefinedTypeName","pathNode":{"id":15,"name":"Data","nameLocations":["435:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":13,"src":"435:4:0"},"referencedDeclaration":13,"src":"435:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data"}},"visibility":"internal"}],"src":"434:19:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":30,"src":"477:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19,"name":"uint256","nodeType":"ElementaryTypeName","src":"477:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"476:9:0"},"scope":378,"src":"419:110:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":52,"nodeType":"Block","src":"668:54:0","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":45,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"701:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":46,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"706:4:0","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":12,"src":"701:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":48,"indexExpression":{"id":47,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"711:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"701:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":44,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"693:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":43,"name":"uint160","nodeType":"ElementaryTypeName","src":"693:7:0","typeDescriptions":{}}},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"693:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":42,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"685:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":41,"name":"address","nodeType":"ElementaryTypeName","src":"685:7:0","typeDescriptions":{}}},"id":50,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"685:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":40,"id":51,"nodeType":"Return","src":"678:37:0"}]},"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"535:54:0","text":"@dev Returns data item from `self` storage at `i`."},"id":53,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"603:2:0","nodeType":"FunctionDefinition","parameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"self","nameLocation":"619:4:0","nodeType":"VariableDeclaration","scope":53,"src":"606:17:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data"},"typeName":{"id":33,"nodeType":"UserDefinedTypeName","pathNode":{"id":32,"name":"Data","nameLocations":["606:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":13,"src":"606:4:0"},"referencedDeclaration":13,"src":"606:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"i","nameLocation":"633:1:0","nodeType":"VariableDeclaration","scope":53,"src":"625:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35,"name":"uint256","nodeType":"ElementaryTypeName","src":"625:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"605:30:0"},"returnParameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":53,"src":"659:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"658:9:0"},"scope":378,"src":"594:128:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":86,"nodeType":"Block","src":"865:147:0","statements":[{"assignments":[64],"declarations":[{"constant":false,"id":64,"mutability":"mutable","name":"lengthAndFirst","nameLocation":"883:14:0","nodeType":"VariableDeclaration","scope":86,"src":"875:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":63,"name":"uint256","nodeType":"ElementaryTypeName","src":"875:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":69,"initialValue":{"baseExpression":{"expression":{"id":65,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"900:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":66,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"905:4:0","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":12,"src":"900:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":68,"indexExpression":{"hexValue":"30","id":67,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"910:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"900:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"875:37:0"},{"expression":{"id":78,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":70,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"922:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":76,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":74,"name":"lengthAndFirst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"942:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"960:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"942:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":73,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"928:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":72,"nodeType":"ArrayTypeName","src":"932:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":77,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"928:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"922:42:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":79,"nodeType":"ExpressionStatement","src":"922:42:0"},{"expression":{"arguments":[{"id":81,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"979:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},{"id":82,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"985:3:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":83,"name":"lengthAndFirst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"990:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data storage pointer"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":80,"name":"_get","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"974:4:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$13_storage_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct AddressArray.Data storage pointer,address[] memory,uint256) view returns (address[] memory)"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"974:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":85,"nodeType":"ExpressionStatement","src":"974:31:0"}]},"documentation":{"id":54,"nodeType":"StructuredDocumentation","src":"728:55:0","text":"@dev Returns list of addresses from storage `self`."},"id":87,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"797:3:0","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"self","nameLocation":"814:4:0","nodeType":"VariableDeclaration","scope":87,"src":"801:17:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data"},"typeName":{"id":56,"nodeType":"UserDefinedTypeName","pathNode":{"id":55,"name":"Data","nameLocations":["801:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":13,"src":"801:4:0"},"referencedDeclaration":13,"src":"801:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data"}},"visibility":"internal"}],"src":"800:19:0"},"returnParameters":{"id":62,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"arr","nameLocation":"860:3:0","nodeType":"VariableDeclaration","scope":87,"src":"843:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":59,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":60,"nodeType":"ArrayTypeName","src":"843:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"842:22:0"},"scope":378,"src":"788:224:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":109,"nodeType":"Block","src":"1193:56:0","statements":[{"expression":{"arguments":[{"id":101,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"1215:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},{"id":102,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"1221:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"baseExpression":{"expression":{"id":103,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"1229:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1234:4:0","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":12,"src":"1229:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":106,"indexExpression":{"hexValue":"30","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1239:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1229:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data storage pointer"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":100,"name":"_get","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"1210:4:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$13_storage_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct AddressArray.Data storage pointer,address[] memory,uint256) view returns (address[] memory)"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1210:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":99,"id":108,"nodeType":"Return","src":"1203:39:0"}]},"documentation":{"id":88,"nodeType":"StructuredDocumentation","src":"1018:72:0","text":"@dev Puts list of addresses from `self` storage into `output` array."},"id":110,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"1104:3:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"self","nameLocation":"1121:4:0","nodeType":"VariableDeclaration","scope":110,"src":"1108:17:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data"},"typeName":{"id":90,"nodeType":"UserDefinedTypeName","pathNode":{"id":89,"name":"Data","nameLocations":["1108:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":13,"src":"1108:4:0"},"referencedDeclaration":13,"src":"1108:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data"}},"visibility":"internal"},{"constant":false,"id":94,"mutability":"mutable","name":"output","nameLocation":"1144:6:0","nodeType":"VariableDeclaration","scope":110,"src":"1127:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":93,"nodeType":"ArrayTypeName","src":"1127:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1107:44:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":110,"src":"1175:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"1175:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":97,"nodeType":"ArrayTypeName","src":"1175:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1174:18:0"},"scope":378,"src":"1095:154:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":185,"nodeType":"Block","src":"1407:401:0","statements":[{"assignments":[125],"declarations":[{"constant":false,"id":125,"mutability":"mutable","name":"len","nameLocation":"1425:3:0","nodeType":"VariableDeclaration","scope":185,"src":"1417:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":124,"name":"uint256","nodeType":"ElementaryTypeName","src":"1417:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":129,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":126,"name":"lengthAndFirst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"1431:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1449:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1431:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1417:35:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":130,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"1466:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":131,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"1472:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1479:6:0","memberName":"length","nodeType":"MemberAccess","src":"1472:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1466:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":137,"nodeType":"IfStatement","src":"1462:53:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":134,"name":"OutputArrayTooSmall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1494:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1494:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":136,"nodeType":"RevertStatement","src":"1487:28:0"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":138,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"1529:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1535:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1529:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"1525:254:0","trueBody":{"id":181,"nodeType":"Block","src":"1538:241:0","statements":[{"expression":{"id":151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":141,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"1552:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":143,"indexExpression":{"hexValue":"30","id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1559:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1552:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":148,"name":"lengthAndFirst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"1580:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1572:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":146,"name":"uint160","nodeType":"ElementaryTypeName","src":"1572:7:0","typeDescriptions":{}}},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1572:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1564:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":144,"name":"address","nodeType":"ElementaryTypeName","src":"1564:7:0","typeDescriptions":{}}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1552:44:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":152,"nodeType":"ExpressionStatement","src":"1552:44:0"},{"id":180,"nodeType":"UncheckedBlock","src":"1610:159:0","statements":[{"body":{"id":178,"nodeType":"Block","src":"1672:83:0","statements":[{"expression":{"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":163,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"1694:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":165,"indexExpression":{"id":164,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"1701:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1694:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":170,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"1722:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":171,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1727:4:0","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":12,"src":"1722:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":173,"indexExpression":{"id":172,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"1732:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1722:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1714:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":168,"name":"uint160","nodeType":"ElementaryTypeName","src":"1714:7:0","typeDescriptions":{}}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1714:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1706:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1706:7:0","typeDescriptions":{}}},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1706:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1694:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":177,"nodeType":"ExpressionStatement","src":"1694:42:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":157,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"1658:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":158,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"1662:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1658:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":179,"initializationExpression":{"assignments":[154],"declarations":[{"constant":false,"id":154,"mutability":"mutable","name":"i","nameLocation":"1651:1:0","nodeType":"VariableDeclaration","scope":179,"src":"1643:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1643:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":156,"initialValue":{"hexValue":"31","id":155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1655:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"1643:13:0"},"loopExpression":{"expression":{"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1667:3:0","subExpression":{"id":160,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"1667:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":162,"nodeType":"ExpressionStatement","src":"1667:3:0"},"nodeType":"ForStatement","src":"1638:117:0"}]}]}},{"expression":{"id":183,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"1795:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":123,"id":184,"nodeType":"Return","src":"1788:13:0"}]},"id":186,"implemented":true,"kind":"function","modifiers":[],"name":"_get","nameLocation":"1264:4:0","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"self","nameLocation":"1291:4:0","nodeType":"VariableDeclaration","scope":186,"src":"1278:17:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data"},"typeName":{"id":112,"nodeType":"UserDefinedTypeName","pathNode":{"id":111,"name":"Data","nameLocations":["1278:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":13,"src":"1278:4:0"},"referencedDeclaration":13,"src":"1278:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"output","nameLocation":"1322:6:0","nodeType":"VariableDeclaration","scope":186,"src":"1305:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":114,"name":"address","nodeType":"ElementaryTypeName","src":"1305:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":115,"nodeType":"ArrayTypeName","src":"1305:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":118,"mutability":"mutable","name":"lengthAndFirst","nameLocation":"1346:14:0","nodeType":"VariableDeclaration","scope":186,"src":"1338:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":117,"name":"uint256","nodeType":"ElementaryTypeName","src":"1338:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1268:98:0"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":186,"src":"1389:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"1389:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":121,"nodeType":"ArrayTypeName","src":"1389:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1388:18:0"},"scope":378,"src":"1255:553:0","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":261,"nodeType":"Block","src":"1959:401:0","statements":[{"id":260,"nodeType":"UncheckedBlock","src":"1969:385:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"lengthAndFirst","nameLocation":"2001:14:0","nodeType":"VariableDeclaration","scope":260,"src":"1993:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"1993:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":203,"initialValue":{"baseExpression":{"expression":{"id":199,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"2018:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":200,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2023:4:0","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":12,"src":"2018:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":202,"indexExpression":{"hexValue":"30","id":201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2028:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2018:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1993:37:0"},{"assignments":[205],"declarations":[{"constant":false,"id":205,"mutability":"mutable","name":"len","nameLocation":"2052:3:0","nodeType":"VariableDeclaration","scope":260,"src":"2044:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"2044:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":209,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":206,"name":"lengthAndFirst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"2058:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2076:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2058:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2044:35:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":210,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"2097:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2104:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2097:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":254,"nodeType":"Block","src":"2190:126:0","statements":[{"expression":{"id":241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":230,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"2208:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2213:4:0","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":12,"src":"2208:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":234,"indexExpression":{"hexValue":"30","id":232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2218:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2208:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":235,"name":"lengthAndFirst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"2223:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"},"id":238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2246:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2241:8:0","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}}],"id":239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2240:10:0","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}},"src":"2223:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2208:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":242,"nodeType":"ExpressionStatement","src":"2208:42:0"},{"expression":{"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":243,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"2268:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2273:4:0","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":12,"src":"2268:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":247,"indexExpression":{"id":245,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"2278:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2268:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":250,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2293:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2285:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":248,"name":"uint160","nodeType":"ElementaryTypeName","src":"2285:7:0","typeDescriptions":{}}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2285:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"2268:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":253,"nodeType":"ExpressionStatement","src":"2268:33:0"}]},"id":255,"nodeType":"IfStatement","src":"2093:223:0","trueBody":{"id":229,"nodeType":"Block","src":"2107:77:0","statements":[{"expression":{"id":227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":213,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"2125:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2130:4:0","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":12,"src":"2125:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":217,"indexExpression":{"hexValue":"30","id":215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2135:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2125:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint168","typeString":"uint168"},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"},"id":220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2146:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2141:8:0","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}}],"id":221,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2140:10:0","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":224,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2153:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":222,"name":"uint160","nodeType":"ElementaryTypeName","src":"2153:7:0","typeDescriptions":{}}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2153:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"2140:29:0","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"2125:44:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":228,"nodeType":"ExpressionStatement","src":"2125:44:0"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":256,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"2336:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2342:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2336:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":196,"id":259,"nodeType":"Return","src":"2329:14:0"}]}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"1814:63:0","text":"@dev Array push back `account` operation on storage `self`."},"id":262,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"1891:4:0","nodeType":"FunctionDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"self","nameLocation":"1909:4:0","nodeType":"VariableDeclaration","scope":262,"src":"1896:17:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data"},"typeName":{"id":189,"nodeType":"UserDefinedTypeName","pathNode":{"id":188,"name":"Data","nameLocations":["1896:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":13,"src":"1896:4:0"},"referencedDeclaration":13,"src":"1896:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data"}},"visibility":"internal"},{"constant":false,"id":192,"mutability":"mutable","name":"account","nameLocation":"1923:7:0","nodeType":"VariableDeclaration","scope":262,"src":"1915:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"1915:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1895:36:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":262,"src":"1950:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"1950:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1949:9:0"},"scope":378,"src":"1882:478:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":318,"nodeType":"Block","src":"2465:328:0","statements":[{"id":317,"nodeType":"UncheckedBlock","src":"2475:312:0","statements":[{"assignments":[270],"declarations":[{"constant":false,"id":270,"mutability":"mutable","name":"lengthAndFirst","nameLocation":"2507:14:0","nodeType":"VariableDeclaration","scope":317,"src":"2499:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"2499:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":275,"initialValue":{"baseExpression":{"expression":{"id":271,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"2524:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2529:4:0","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":12,"src":"2524:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":274,"indexExpression":{"hexValue":"30","id":273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2534:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2524:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2499:37:0"},{"assignments":[277],"declarations":[{"constant":false,"id":277,"mutability":"mutable","name":"len","nameLocation":"2558:3:0","nodeType":"VariableDeclaration","scope":317,"src":"2550:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":281,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":278,"name":"lengthAndFirst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"2564:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2582:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2564:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2550:35:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":282,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"2603:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2610:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2603:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":288,"nodeType":"IfStatement","src":"2599:40:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":285,"name":"PopFromEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"2620:17:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2620:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":287,"nodeType":"RevertStatement","src":"2613:26:0"}},{"expression":{"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":289,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"2653:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2658:4:0","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":12,"src":"2653:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":295,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":291,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"2663:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2669:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2663:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2653:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2674:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2653:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":298,"nodeType":"ExpressionStatement","src":"2653:22:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":299,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"2693:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2693:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":316,"nodeType":"IfStatement","src":"2689:88:0","trueBody":{"id":315,"nodeType":"Block","src":"2702:75:0","statements":[{"expression":{"id":313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":302,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"2720:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2725:4:0","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":12,"src":"2720:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":306,"indexExpression":{"hexValue":"30","id":304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2730:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2720:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":307,"name":"lengthAndFirst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"2735:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"},"id":310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2753:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2758:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2753:8:0","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}}],"id":311,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2752:10:0","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}},"src":"2735:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2720:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":314,"nodeType":"ExpressionStatement","src":"2720:42:0"}]}}]}]},"documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"2366:53:0","text":"@dev Array pop back operation for storage `self`."},"id":319,"implemented":true,"kind":"function","modifiers":[],"name":"pop","nameLocation":"2433:3:0","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"self","nameLocation":"2450:4:0","nodeType":"VariableDeclaration","scope":319,"src":"2437:17:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data"},"typeName":{"id":265,"nodeType":"UserDefinedTypeName","pathNode":{"id":264,"name":"Data","nameLocations":["2437:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":13,"src":"2437:4:0"},"referencedDeclaration":13,"src":"2437:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data"}},"visibility":"internal"}],"src":"2436:19:0"},"returnParameters":{"id":268,"nodeType":"ParameterList","parameters":[],"src":"2465:0:0"},"scope":378,"src":"2424:369:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":376,"nodeType":"Block","src":"2971:259:0","statements":[{"assignments":[331],"declarations":[{"constant":false,"id":331,"mutability":"mutable","name":"len","nameLocation":"2989:3:0","nodeType":"VariableDeclaration","scope":376,"src":"2981:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"2981:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":335,"initialValue":{"arguments":[{"id":333,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"3002:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}],"id":332,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2995:6:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$13_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct AddressArray.Data storage pointer) view returns (uint256)"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2981:26:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":336,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"3021:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":337,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"3030:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3021:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":342,"nodeType":"IfStatement","src":"3017:43:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":339,"name":"IndexOutOfBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"3042:16:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3042:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":341,"nodeType":"RevertStatement","src":"3035:25:0"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":343,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"3075:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3084:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3075:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":374,"nodeType":"Block","src":"3164:60:0","statements":[{"expression":{"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":363,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"3178:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3183:4:0","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":12,"src":"3178:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":367,"indexExpression":{"id":365,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"3188:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3178:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":370,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3205:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3197:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":368,"name":"uint160","nodeType":"ElementaryTypeName","src":"3197:7:0","typeDescriptions":{}}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3197:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"3178:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":373,"nodeType":"ExpressionStatement","src":"3178:35:0"}]},"id":375,"nodeType":"IfStatement","src":"3071:153:0","trueBody":{"id":362,"nodeType":"Block","src":"3087:71:0","statements":[{"expression":{"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":346,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"3101:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data storage pointer"}},"id":349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3106:4:0","memberName":"_raw","nodeType":"MemberAccess","referencedDeclaration":12,"src":"3101:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":350,"indexExpression":{"hexValue":"30","id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3111:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3101:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":351,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"3117:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3124:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"3117:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3116:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":357,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3139:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3131:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":355,"name":"uint160","nodeType":"ElementaryTypeName","src":"3131:7:0","typeDescriptions":{}}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3131:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"3116:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3101:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":361,"nodeType":"ExpressionStatement","src":"3101:46:0"}]}}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"2799:64:0","text":"@dev Set element for storage `self` at `index` to `account`."},"id":377,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"2877:3:0","nodeType":"FunctionDefinition","parameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"self","nameLocation":"2903:4:0","nodeType":"VariableDeclaration","scope":377,"src":"2890:17:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data"},"typeName":{"id":322,"nodeType":"UserDefinedTypeName","pathNode":{"id":321,"name":"Data","nameLocations":["2890:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":13,"src":"2890:4:0"},"referencedDeclaration":13,"src":"2890:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data"}},"visibility":"internal"},{"constant":false,"id":325,"mutability":"mutable","name":"index","nameLocation":"2925:5:0","nodeType":"VariableDeclaration","scope":377,"src":"2917:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":324,"name":"uint256","nodeType":"ElementaryTypeName","src":"2917:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":327,"mutability":"mutable","name":"account","nameLocation":"2948:7:0","nodeType":"VariableDeclaration","scope":377,"src":"2940:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":326,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2880:81:0"},"returnParameters":{"id":329,"nodeType":"ParameterList","parameters":[],"src":"2971:0:0"},"scope":378,"src":"2868:362:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":379,"src":"151:3081:0","usedErrors":[4,6,8]}],"src":"33:3200:0"},"id":0},"@1inch/solidity-utils/contracts/libraries/AddressSet.sol":{"ast":{"absolutePath":"@1inch/solidity-utils/contracts/libraries/AddressSet.sol","exportedSymbols":{"AddressArray":[378],"AddressSet":[565]},"id":566,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:1"},{"absolutePath":"@1inch/solidity-utils/contracts/libraries/AddressArray.sol","file":"./AddressArray.sol","id":381,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":566,"sourceUnit":379,"src":"58:28:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"AddressSet","contractDependencies":[],"contractKind":"library","documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"88:171:1","text":"@title Library that is using AddressArray library for AddressArray.Data\n and allows Set operations on address storage data:\n 1. add\n 2. remove\n 3. contains"},"fullyImplemented":true,"id":565,"linearizedBaseContracts":[565],"name":"AddressSet","nameLocation":"268:10:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":386,"libraryName":{"id":383,"name":"AddressArray","nameLocations":["291:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"291:12:1"},"nodeType":"UsingForDirective","src":"285:41:1","typeName":{"id":385,"nodeType":"UserDefinedTypeName","pathNode":{"id":384,"name":"AddressArray.Data","nameLocations":["308:12:1","321:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":13,"src":"308:17:1"},"referencedDeclaration":13,"src":"308:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data"}}},{"canonicalName":"AddressSet.Data","id":394,"members":[{"constant":false,"id":389,"mutability":"mutable","name":"items","nameLocation":"492:5:1","nodeType":"VariableDeclaration","scope":394,"src":"474:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data"},"typeName":{"id":388,"nodeType":"UserDefinedTypeName","pathNode":{"id":387,"name":"AddressArray.Data","nameLocations":["474:12:1","487:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":13,"src":"474:17:1"},"referencedDeclaration":13,"src":"474:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"lookup","nameLocation":"535:6:1","nodeType":"VariableDeclaration","scope":394,"src":"507:34:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":392,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"515:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"507:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"526:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Data","nameLocation":"459:4:1","nodeType":"StructDefinition","scope":565,"src":"452:96:1","visibility":"public"},{"body":{"id":408,"nodeType":"Block","src":"655:40:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":403,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"672:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"674:5:1","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":389,"src":"672:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage","typeString":"struct AddressArray.Data storage ref"}},"id":405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"680:6:1","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":30,"src":"672:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$13_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Data_$13_storage_ptr_$","typeString":"function (struct AddressArray.Data storage pointer) view returns (uint256)"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":402,"id":407,"nodeType":"Return","src":"665:23:1"}]},"documentation":{"id":395,"nodeType":"StructuredDocumentation","src":"554:32:1","text":"@dev Length of data storage."},"id":409,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"600:6:1","nodeType":"FunctionDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"s","nameLocation":"620:1:1","nodeType":"VariableDeclaration","scope":409,"src":"607:14:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data"},"typeName":{"id":397,"nodeType":"UserDefinedTypeName","pathNode":{"id":396,"name":"Data","nameLocations":["607:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":394,"src":"607:4:1"},"referencedDeclaration":394,"src":"607:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data"}},"visibility":"internal"}],"src":"606:16:1"},"returnParameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"646:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":400,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:1"},"scope":565,"src":"591:104:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"836:41:1","statements":[{"expression":{"arguments":[{"id":423,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"864:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":420,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"853:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"855:5:1","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":389,"src":"853:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage","typeString":"struct AddressArray.Data storage ref"}},"id":422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"861:2:1","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":53,"src":"853:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$13_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_Data_$13_storage_ptr_$","typeString":"function (struct AddressArray.Data storage pointer,uint256) view returns (address)"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"853:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":419,"id":425,"nodeType":"Return","src":"846:24:1"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"701:55:1","text":"@dev Returns data item from `s` storage at `index`."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"770:2:1","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"s","nameLocation":"786:1:1","nodeType":"VariableDeclaration","scope":427,"src":"773:14:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data"},"typeName":{"id":412,"nodeType":"UserDefinedTypeName","pathNode":{"id":411,"name":"Data","nameLocations":["773:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":394,"src":"773:4:1"},"referencedDeclaration":394,"src":"773:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"index","nameLocation":"797:5:1","nodeType":"VariableDeclaration","scope":427,"src":"789:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"789:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"772:31:1"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"827:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"827:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"826:9:1"},"scope":565,"src":"761:116:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":445,"nodeType":"Block","src":"1013:43:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":438,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"1030:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1032:6:1","memberName":"lookup","nodeType":"MemberAccess","referencedDeclaration":393,"src":"1030:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":441,"indexExpression":{"id":440,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"1039:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1030:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1048:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1030:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":437,"id":444,"nodeType":"Return","src":"1023:26:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"883:48:1","text":"@dev Returns true if storage `s` has `item`."},"id":446,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"945:8:1","nodeType":"FunctionDefinition","parameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"s","nameLocation":"967:1:1","nodeType":"VariableDeclaration","scope":446,"src":"954:14:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data"},"typeName":{"id":430,"nodeType":"UserDefinedTypeName","pathNode":{"id":429,"name":"Data","nameLocations":["954:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":394,"src":"954:4:1"},"referencedDeclaration":394,"src":"954:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data"}},"visibility":"internal"},{"constant":false,"id":433,"mutability":"mutable","name":"item","nameLocation":"978:4:1","nodeType":"VariableDeclaration","scope":446,"src":"970:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"970:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"953:30:1"},"returnParameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":446,"src":"1007:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":435,"name":"bool","nodeType":"ElementaryTypeName","src":"1007:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1006:6:1"},"scope":565,"src":"936:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":481,"nodeType":"Block","src":"1203:143:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":457,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"1217:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1219:6:1","memberName":"lookup","nodeType":"MemberAccess","referencedDeclaration":393,"src":"1217:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":460,"indexExpression":{"id":459,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"1226:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1217:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1234:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1217:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":466,"nodeType":"IfStatement","src":"1213:61:1","trueBody":{"id":465,"nodeType":"Block","src":"1237:37:1","statements":[{"expression":{"hexValue":"66616c7365","id":463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1258:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":456,"id":464,"nodeType":"Return","src":"1251:12:1"}]}},{"expression":{"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":467,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"1283:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1285:6:1","memberName":"lookup","nodeType":"MemberAccess","referencedDeclaration":393,"src":"1283:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":471,"indexExpression":{"id":469,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"1292:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1283:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":475,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"1313:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":472,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"1300:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1302:5:1","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":389,"src":"1300:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage","typeString":"struct AddressArray.Data storage ref"}},"id":474,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1308:4:1","memberName":"push","nodeType":"MemberAccess","referencedDeclaration":262,"src":"1300:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Data_$13_storage_ptr_$_t_address_$returns$_t_uint256_$attached_to$_t_struct$_Data_$13_storage_ptr_$","typeString":"function (struct AddressArray.Data storage pointer,address) returns (uint256)"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1300:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1283:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":478,"nodeType":"ExpressionStatement","src":"1283:35:1"},{"expression":{"hexValue":"74727565","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1335:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":456,"id":480,"nodeType":"Return","src":"1328:11:1"}]},"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"1062:69:1","text":"@dev Adds `item` into storage `s` and returns true if successful."},"id":482,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"1145:3:1","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"s","nameLocation":"1162:1:1","nodeType":"VariableDeclaration","scope":482,"src":"1149:14:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data"},"typeName":{"id":449,"nodeType":"UserDefinedTypeName","pathNode":{"id":448,"name":"Data","nameLocations":["1149:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":394,"src":"1149:4:1"},"referencedDeclaration":394,"src":"1149:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"item","nameLocation":"1173:4:1","nodeType":"VariableDeclaration","scope":482,"src":"1165:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":451,"name":"address","nodeType":"ElementaryTypeName","src":"1165:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1148:30:1"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"1197:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":454,"name":"bool","nodeType":"ElementaryTypeName","src":"1197:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1196:6:1"},"scope":565,"src":"1136:210:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":563,"nodeType":"Block","src":"1499:435:1","statements":[{"assignments":[494],"declarations":[{"constant":false,"id":494,"mutability":"mutable","name":"index","nameLocation":"1517:5:1","nodeType":"VariableDeclaration","scope":563,"src":"1509:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"1509:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":499,"initialValue":{"baseExpression":{"expression":{"id":495,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"1525:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1527:6:1","memberName":"lookup","nodeType":"MemberAccess","referencedDeclaration":393,"src":"1525:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":498,"indexExpression":{"id":497,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"1534:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1525:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1509:30:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":500,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"1553:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1562:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1553:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"IfStatement","src":"1549:53:1","trueBody":{"id":505,"nodeType":"Block","src":"1565:37:1","statements":[{"expression":{"hexValue":"66616c7365","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1586:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":492,"id":504,"nodeType":"Return","src":"1579:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":507,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"1615:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":508,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"1623:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1625:5:1","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":389,"src":"1623:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage","typeString":"struct AddressArray.Data storage ref"}},"id":510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1631:6:1","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":30,"src":"1623:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$13_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Data_$13_storage_ptr_$","typeString":"function (struct AddressArray.Data storage pointer) view returns (uint256)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1623:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1615:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":547,"nodeType":"IfStatement","src":"1611:242:1","trueBody":{"id":546,"nodeType":"Block","src":"1641:212:1","statements":[{"id":545,"nodeType":"UncheckedBlock","src":"1655:188:1","statements":[{"assignments":[514],"declarations":[{"constant":false,"id":514,"mutability":"mutable","name":"lastItem","nameLocation":"1691:8:1","nodeType":"VariableDeclaration","scope":545,"src":"1683:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":513,"name":"address","nodeType":"ElementaryTypeName","src":"1683:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":525,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":518,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"1713:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1715:5:1","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":389,"src":"1713:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage","typeString":"struct AddressArray.Data storage ref"}},"id":520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1721:6:1","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":30,"src":"1713:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$13_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Data_$13_storage_ptr_$","typeString":"function (struct AddressArray.Data storage pointer) view returns (uint256)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1713:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1732:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1713:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":515,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"1702:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1704:5:1","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":389,"src":"1702:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage","typeString":"struct AddressArray.Data storage ref"}},"id":517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1710:2:1","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":53,"src":"1702:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$13_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_Data_$13_storage_ptr_$","typeString":"function (struct AddressArray.Data storage pointer,uint256) view returns (address)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1702:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1683:51:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":531,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"1764:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1772:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1764:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":534,"name":"lastItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"1775:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":526,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"1752:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":529,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1754:5:1","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":389,"src":"1752:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage","typeString":"struct AddressArray.Data storage ref"}},"id":530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1760:3:1","memberName":"set","nodeType":"MemberAccess","referencedDeclaration":377,"src":"1752:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Data_$13_storage_ptr_$_t_uint256_$_t_address_$returns$__$attached_to$_t_struct$_Data_$13_storage_ptr_$","typeString":"function (struct AddressArray.Data storage pointer,uint256,address)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1752:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":536,"nodeType":"ExpressionStatement","src":"1752:32:1"},{"expression":{"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":537,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"1802:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":540,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1804:6:1","memberName":"lookup","nodeType":"MemberAccess","referencedDeclaration":393,"src":"1802:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":541,"indexExpression":{"id":539,"name":"lastItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"1811:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1802:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":542,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"1823:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1802:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":544,"nodeType":"ExpressionStatement","src":"1802:26:1"}]}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":548,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"1862:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1864:5:1","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":389,"src":"1862:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage","typeString":"struct AddressArray.Data storage ref"}},"id":552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1870:3:1","memberName":"pop","nodeType":"MemberAccess","referencedDeclaration":319,"src":"1862:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Data_$13_storage_ptr_$returns$__$attached_to$_t_struct$_Data_$13_storage_ptr_$","typeString":"function (struct AddressArray.Data storage pointer)"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":554,"nodeType":"ExpressionStatement","src":"1862:13:1"},{"expression":{"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1885:21:1","subExpression":{"baseExpression":{"expression":{"id":555,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"1892:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data storage pointer"}},"id":556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1894:6:1","memberName":"lookup","nodeType":"MemberAccess","referencedDeclaration":393,"src":"1892:8:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":558,"indexExpression":{"id":557,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"1901:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1892:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":560,"nodeType":"ExpressionStatement","src":"1885:21:1"},{"expression":{"hexValue":"74727565","id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1923:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":492,"id":562,"nodeType":"Return","src":"1916:11:1"}]},"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"1352:72:1","text":"@dev Removes `item` from storage `s` and returns true if successful."},"id":564,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"1438:6:1","nodeType":"FunctionDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"s","nameLocation":"1458:1:1","nodeType":"VariableDeclaration","scope":564,"src":"1445:14:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data"},"typeName":{"id":485,"nodeType":"UserDefinedTypeName","pathNode":{"id":484,"name":"Data","nameLocations":["1445:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":394,"src":"1445:4:1"},"referencedDeclaration":394,"src":"1445:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data"}},"visibility":"internal"},{"constant":false,"id":488,"mutability":"mutable","name":"item","nameLocation":"1469:4:1","nodeType":"VariableDeclaration","scope":564,"src":"1461:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"1461:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1444:30:1"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":564,"src":"1493:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":490,"name":"bool","nodeType":"ElementaryTypeName","src":"1493:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1492:6:1"},"scope":565,"src":"1429:505:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":566,"src":"260:1676:1","usedErrors":[]}],"src":"33:1904:1"},"id":1},"@1inch/token-plugins/contracts/ERC20Plugins.sol":{"ast":{"absolutePath":"@1inch/token-plugins/contracts/ERC20Plugins.sol","exportedSymbols":{"AddressArray":[378],"AddressSet":[565],"ERC20":[2093],"ERC20Plugins":[1208],"IERC20":[2171],"IERC20Plugins":[1364],"IPlugin":[1384],"ReentrancyGuardExt":[1506],"ReentrancyGuardLib":[1465]},"id":1209,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":567,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":570,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1209,"sourceUnit":2094,"src":"58:78:2","symbolAliases":[{"foreign":{"id":568,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"67:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":569,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"75:5:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@1inch/solidity-utils/contracts/libraries/AddressSet.sol","file":"@1inch/solidity-utils/contracts/libraries/AddressSet.sol","id":573,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1209,"sourceUnit":566,"src":"137:100:2","symbolAliases":[{"foreign":{"id":571,"name":"AddressSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"146:10:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":572,"name":"AddressArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"158:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol","file":"./interfaces/IERC20Plugins.sol","id":575,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1209,"sourceUnit":1365,"src":"239:63:2","symbolAliases":[{"foreign":{"id":574,"name":"IERC20Plugins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"248:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@1inch/token-plugins/contracts/interfaces/IPlugin.sol","file":"./interfaces/IPlugin.sol","id":577,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1209,"sourceUnit":1385,"src":"303:51:2","symbolAliases":[{"foreign":{"id":576,"name":"IPlugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"312:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@1inch/token-plugins/contracts/libs/ReentrancyGuard.sol","file":"./libs/ReentrancyGuard.sol","id":580,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1209,"sourceUnit":1507,"src":"355:84:2","symbolAliases":[{"foreign":{"id":578,"name":"ReentrancyGuardExt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"364:18:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":579,"name":"ReentrancyGuardLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"384:18:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":582,"name":"ERC20","nameLocations":["738:5:2"],"nodeType":"IdentifierPath","referencedDeclaration":2093,"src":"738:5:2"},"id":583,"nodeType":"InheritanceSpecifier","src":"738:5:2"},{"baseName":{"id":584,"name":"IERC20Plugins","nameLocations":["745:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":1364,"src":"745:13:2"},"id":585,"nodeType":"InheritanceSpecifier","src":"745:13:2"},{"baseName":{"id":586,"name":"ReentrancyGuardExt","nameLocations":["760:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":1506,"src":"760:18:2"},"id":587,"nodeType":"InheritanceSpecifier","src":"760:18:2"}],"canonicalName":"ERC20Plugins","contractDependencies":[],"contractKind":"contract","documentation":{"id":581,"nodeType":"StructuredDocumentation","src":"441:262:2","text":" @title ERC20Plugins\n @dev A base implementation of token contract to hold and manage plugins of an ERC20 token with a limited number of plugins per account.\n Each plugin is a contract that implements IPlugin interface (and/or derived from plugin)."},"fullyImplemented":true,"id":1208,"linearizedBaseContracts":[1208,1506,1364,2093,2196,2171,2218],"name":"ERC20Plugins","nameLocation":"722:12:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":591,"libraryName":{"id":588,"name":"AddressSet","nameLocations":["791:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":565,"src":"791:10:2"},"nodeType":"UsingForDirective","src":"785:37:2","typeName":{"id":590,"nodeType":"UserDefinedTypeName","pathNode":{"id":589,"name":"AddressSet.Data","nameLocations":["806:10:2","817:4:2"],"nodeType":"IdentifierPath","referencedDeclaration":394,"src":"806:15:2"},"referencedDeclaration":394,"src":"806:15:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data"}}},{"global":false,"id":595,"libraryName":{"id":592,"name":"AddressArray","nameLocations":["833:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"833:12:2"},"nodeType":"UsingForDirective","src":"827:41:2","typeName":{"id":594,"nodeType":"UserDefinedTypeName","pathNode":{"id":593,"name":"AddressArray.Data","nameLocations":["850:12:2","863:4:2"],"nodeType":"IdentifierPath","referencedDeclaration":13,"src":"850:17:2"},"referencedDeclaration":13,"src":"850:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage_ptr","typeString":"struct AddressArray.Data"}}},{"global":false,"id":599,"libraryName":{"id":596,"name":"ReentrancyGuardLib","nameLocations":["879:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":1465,"src":"879:18:2"},"nodeType":"UsingForDirective","src":"873:53:2","typeName":{"id":598,"nodeType":"UserDefinedTypeName","pathNode":{"id":597,"name":"ReentrancyGuardLib.Data","nameLocations":["902:18:2","921:4:2"],"nodeType":"IdentifierPath","referencedDeclaration":1399,"src":"902:23:2"},"referencedDeclaration":1399,"src":"902:23:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data"}}},{"errorSelector":"fce323d6","id":601,"name":"PluginAlreadyAdded","nameLocation":"938:18:2","nodeType":"ErrorDefinition","parameters":{"id":600,"nodeType":"ParameterList","parameters":[],"src":"956:2:2"},"src":"932:27:2"},{"errorSelector":"108a506d","id":603,"name":"PluginNotFound","nameLocation":"970:14:2","nodeType":"ErrorDefinition","parameters":{"id":602,"nodeType":"ParameterList","parameters":[],"src":"984:2:2"},"src":"964:23:2"},{"errorSelector":"4c6ea03c","id":605,"name":"InvalidPluginAddress","nameLocation":"998:20:2","nodeType":"ErrorDefinition","parameters":{"id":604,"nodeType":"ParameterList","parameters":[],"src":"1018:2:2"},"src":"992:29:2"},{"errorSelector":"5940fcc8","id":607,"name":"InvalidTokenInPlugin","nameLocation":"1032:20:2","nodeType":"ErrorDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[],"src":"1052:2:2"},"src":"1026:29:2"},{"errorSelector":"2846f78a","id":609,"name":"PluginsLimitReachedForAccount","nameLocation":"1066:29:2","nodeType":"ErrorDefinition","parameters":{"id":608,"nodeType":"ParameterList","parameters":[],"src":"1095:2:2"},"src":"1060:38:2"},{"errorSelector":"cdaf747b","id":611,"name":"ZeroPluginsLimit","nameLocation":"1109:16:2","nodeType":"ErrorDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"1125:2:2"},"src":"1103:25:2"},{"baseFunctions":[1303],"constant":false,"documentation":{"id":612,"nodeType":"StructuredDocumentation","src":"1134:37:2","text":"@dev Limit of plugins per account"},"functionSelector":"53cea5df","id":614,"mutability":"immutable","name":"pluginsCountLimit","nameLocation":"1201:17:2","nodeType":"VariableDeclaration","scope":1208,"src":"1176:42:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":613,"name":"uint256","nodeType":"ElementaryTypeName","src":"1176:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[1308],"constant":false,"documentation":{"id":615,"nodeType":"StructuredDocumentation","src":"1224:43:2","text":"@dev Gas limit for a single plugin call"},"functionSelector":"7ee688cb","id":617,"mutability":"immutable","name":"pluginsCallGasLimit","nameLocation":"1297:19:2","nodeType":"VariableDeclaration","scope":1208,"src":"1272:44:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":616,"name":"uint256","nodeType":"ElementaryTypeName","src":"1272:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":620,"mutability":"mutable","name":"_guard","nameLocation":"1355:6:2","nodeType":"VariableDeclaration","scope":1208,"src":"1323:38:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage","typeString":"struct ReentrancyGuardLib.Data"},"typeName":{"id":619,"nodeType":"UserDefinedTypeName","pathNode":{"id":618,"name":"ReentrancyGuardLib.Data","nameLocations":["1323:18:2","1342:4:2"],"nodeType":"IdentifierPath","referencedDeclaration":1399,"src":"1323:23:2"},"referencedDeclaration":1399,"src":"1323:23:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data"}},"visibility":"private"},{"constant":false,"id":625,"mutability":"mutable","name":"_plugins","nameLocation":"1411:8:2","nodeType":"VariableDeclaration","scope":1208,"src":"1367:52:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Data_$394_storage_$","typeString":"mapping(address => struct AddressSet.Data)"},"typeName":{"id":624,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1367:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Data_$394_storage_$","typeString":"mapping(address => struct AddressSet.Data)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":623,"nodeType":"UserDefinedTypeName","pathNode":{"id":622,"name":"AddressSet.Data","nameLocations":["1386:10:2","1397:4:2"],"nodeType":"IdentifierPath","referencedDeclaration":394,"src":"1386:15:2"},"referencedDeclaration":394,"src":"1386:15:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage_ptr","typeString":"struct AddressSet.Data"}}},"visibility":"private"},{"body":{"id":653,"nodeType":"Block","src":"1776:183:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":633,"name":"pluginsLimit_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"1790:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1807:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1790:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":639,"nodeType":"IfStatement","src":"1786:49:2","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":636,"name":"ZeroPluginsLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"1817:16:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":638,"nodeType":"RevertStatement","src":"1810:25:2"}},{"expression":{"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":640,"name":"pluginsCountLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"1845:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":641,"name":"pluginsLimit_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"1865:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1845:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":643,"nodeType":"ExpressionStatement","src":"1845:33:2"},{"expression":{"id":646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":644,"name":"pluginsCallGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"1888:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":645,"name":"pluginCallGasLimit_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"1910:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":647,"nodeType":"ExpressionStatement","src":"1888:41:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":648,"name":"_guard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"1939:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage","typeString":"struct ReentrancyGuardLib.Data storage ref"}},"id":650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1946:4:2","memberName":"init","nodeType":"MemberAccess","referencedDeclaration":1413,"src":"1939:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Data_$1399_storage_ptr_$returns$__$attached_to$_t_struct$_Data_$1399_storage_ptr_$","typeString":"function (struct ReentrancyGuardLib.Data storage pointer)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1939:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":652,"nodeType":"ExpressionStatement","src":"1939:13:2"}]},"documentation":{"id":626,"nodeType":"StructuredDocumentation","src":"1426:281:2","text":" @dev Constructor that sets the limit of plugins per account and the gas limit for a plugin call.\n @param pluginsLimit_ The limit of plugins per account.\n @param pluginCallGasLimit_ The gas limit for a plugin call. Intended to prevent gas bomb attacks"},"id":654,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"mutability":"mutable","name":"pluginsLimit_","nameLocation":"1732:13:2","nodeType":"VariableDeclaration","scope":654,"src":"1724:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":627,"name":"uint256","nodeType":"ElementaryTypeName","src":"1724:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":630,"mutability":"mutable","name":"pluginCallGasLimit_","nameLocation":"1755:19:2","nodeType":"VariableDeclaration","scope":654,"src":"1747:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint256","nodeType":"ElementaryTypeName","src":"1747:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1723:52:2"},"returnParameters":{"id":632,"nodeType":"ParameterList","parameters":[],"src":"1776:0:2"},"scope":1208,"src":"1712:247:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1317],"body":{"id":671,"nodeType":"Block","src":"2314:58:2","statements":[{"expression":{"arguments":[{"id":668,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"2358:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":664,"name":"_plugins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"2331:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Data_$394_storage_$","typeString":"mapping(address => struct AddressSet.Data storage ref)"}},"id":666,"indexExpression":{"id":665,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"2340:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2331:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage","typeString":"struct AddressSet.Data storage ref"}},"id":667,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2349:8:2","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":446,"src":"2331:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$394_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_Data_$394_storage_ptr_$","typeString":"function (struct AddressSet.Data storage pointer,address) view returns (bool)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2331:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":663,"id":670,"nodeType":"Return","src":"2324:41:2"}]},"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"1965:258:2","text":" @dev Returns whether an account has a specific plugin.\n @param account The address of the account.\n @param plugin The address of the plugin.\n @return bool A boolean indicating whether the account has the specified plugin."},"functionSelector":"ed6edc82","id":672,"implemented":true,"kind":"function","modifiers":[],"name":"hasPlugin","nameLocation":"2237:9:2","nodeType":"FunctionDefinition","parameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"mutability":"mutable","name":"account","nameLocation":"2255:7:2","nodeType":"VariableDeclaration","scope":672,"src":"2247:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"plugin","nameLocation":"2272:6:2","nodeType":"VariableDeclaration","scope":672,"src":"2264:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"2264:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:33:2"},"returnParameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":672,"src":"2308:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":661,"name":"bool","nodeType":"ElementaryTypeName","src":"2308:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2307:6:2"},"scope":1208,"src":"2228:144:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1324],"body":{"id":686,"nodeType":"Block","src":"2660:50:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":680,"name":"_plugins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"2677:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Data_$394_storage_$","typeString":"mapping(address => struct AddressSet.Data storage ref)"}},"id":682,"indexExpression":{"id":681,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"2686:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2677:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage","typeString":"struct AddressSet.Data storage ref"}},"id":683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2695:6:2","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":409,"src":"2677:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$394_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Data_$394_storage_ptr_$","typeString":"function (struct AddressSet.Data storage pointer) view returns (uint256)"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2677:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":679,"id":685,"nodeType":"Return","src":"2670:33:2"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"2378:201:2","text":" @dev Returns the number of plugins registered for an account.\n @param account The address of the account.\n @return uint256 A number of plugins registered for the account."},"functionSelector":"61728134","id":687,"implemented":true,"kind":"function","modifiers":[],"name":"pluginsCount","nameLocation":"2593:12:2","nodeType":"FunctionDefinition","parameters":{"id":676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"account","nameLocation":"2614:7:2","nodeType":"VariableDeclaration","scope":687,"src":"2606:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"2606:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2605:17:2"},"returnParameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":687,"src":"2651:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":677,"name":"uint256","nodeType":"ElementaryTypeName","src":"2651:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2650:9:2"},"scope":1208,"src":"2584:126:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1333],"body":{"id":704,"nodeType":"Block","src":"3062:51:2","statements":[{"expression":{"arguments":[{"id":701,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"3100:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":697,"name":"_plugins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"3079:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Data_$394_storage_$","typeString":"mapping(address => struct AddressSet.Data storage ref)"}},"id":699,"indexExpression":{"id":698,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"3088:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3079:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage","typeString":"struct AddressSet.Data storage ref"}},"id":700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3097:2:2","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":427,"src":"3079:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$394_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_Data_$394_storage_ptr_$","typeString":"function (struct AddressSet.Data storage pointer,uint256) view returns (address)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":696,"id":703,"nodeType":"Return","src":"3072:34:2"}]},"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"2716:254:2","text":" @dev Returns the address of a plugin at a specified index for a given account .\n @param account The address of the account.\n @param index The index of the plugin to retrieve.\n @return plugin The address of the plugin."},"functionSelector":"1945f729","id":705,"implemented":true,"kind":"function","modifiers":[],"name":"pluginAt","nameLocation":"2984:8:2","nodeType":"FunctionDefinition","parameters":{"id":693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"account","nameLocation":"3001:7:2","nodeType":"VariableDeclaration","scope":705,"src":"2993:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"2993:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":692,"mutability":"mutable","name":"index","nameLocation":"3018:5:2","nodeType":"VariableDeclaration","scope":705,"src":"3010:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":691,"name":"uint256","nodeType":"ElementaryTypeName","src":"3010:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2992:32:2"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":705,"src":"3053:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"3053:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3052:9:2"},"scope":1208,"src":"2975:138:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1341],"body":{"id":721,"nodeType":"Block","src":"3397:53:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"baseExpression":{"id":714,"name":"_plugins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"3414:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Data_$394_storage_$","typeString":"mapping(address => struct AddressSet.Data storage ref)"}},"id":716,"indexExpression":{"id":715,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"3423:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3414:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage","typeString":"struct AddressSet.Data storage ref"}},"id":717,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3432:5:2","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":389,"src":"3414:23:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage","typeString":"struct AddressArray.Data storage ref"}},"id":718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3438:3:2","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":87,"src":"3414:27:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$13_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_Data_$13_storage_ptr_$","typeString":"function (struct AddressArray.Data storage pointer) view returns (address[] memory)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3414:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":713,"id":720,"nodeType":"Return","src":"3407:36:2"}]},"documentation":{"id":706,"nodeType":"StructuredDocumentation","src":"3119:193:2","text":" @dev Returns an array of all plugins owned by a given account.\n @param account The address of the account to query.\n @return plugins An array of plugin addresses."},"functionSelector":"4b12e643","id":722,"implemented":true,"kind":"function","modifiers":[],"name":"plugins","nameLocation":"3326:7:2","nodeType":"FunctionDefinition","parameters":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"account","nameLocation":"3342:7:2","nodeType":"VariableDeclaration","scope":722,"src":"3334:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"3334:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3333:17:2"},"returnParameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":722,"src":"3379:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"3379:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":711,"nodeType":"ArrayTypeName","src":"3379:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3378:18:2"},"scope":1208,"src":"3317:133:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1605,2128],"body":{"id":741,"nodeType":"Block","src":"3741:48:2","statements":[{"expression":{"arguments":[{"id":738,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":736,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3758:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Plugins_$1208_$","typeString":"type(contract super ERC20Plugins)"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3764:9:2","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1605,"src":"3758:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3758:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":735,"id":740,"nodeType":"Return","src":"3751:31:2"}]},"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"3457:157:2","text":" @dev Returns the balance of a given account.\n @param account The address of the account.\n @return balance The account balance."},"functionSelector":"70a08231","id":742,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":728,"name":"_guard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"3679:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage","typeString":"struct ReentrancyGuardLib.Data storage ref"}}],"id":729,"kind":"modifierInvocation","modifierName":{"id":727,"name":"nonReentrantView","nameLocations":["3662:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":1505,"src":"3662:16:2"},"nodeType":"ModifierInvocation","src":"3662:24:2"}],"name":"balanceOf","nameLocation":"3628:9:2","nodeType":"FunctionDefinition","overrides":{"id":732,"nodeType":"OverrideSpecifier","overrides":[{"id":730,"name":"IERC20","nameLocations":["3701:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2171,"src":"3701:6:2"},{"id":731,"name":"ERC20","nameLocations":["3709:5:2"],"nodeType":"IdentifierPath","referencedDeclaration":2093,"src":"3709:5:2"}],"src":"3692:23:2"},"parameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"account","nameLocation":"3646:7:2","nodeType":"VariableDeclaration","scope":742,"src":"3638:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"3638:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3637:17:2"},"returnParameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":742,"src":"3732:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":733,"name":"uint256","nodeType":"ElementaryTypeName","src":"3732:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3731:9:2"},"scope":1208,"src":"3619:170:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1350],"body":{"id":768,"nodeType":"Block","src":"4234:122:2","statements":[{"condition":{"arguments":[{"id":756,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"4258:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":757,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"4267:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":755,"name":"hasPlugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"4248:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4248:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":765,"nodeType":"IfStatement","src":"4244:88:2","trueBody":{"id":764,"nodeType":"Block","src":"4276:56:2","statements":[{"expression":{"arguments":[{"id":761,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"4313:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":759,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4297:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Plugins_$1208_$","typeString":"type(contract super ERC20Plugins)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4303:9:2","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1605,"src":"4297:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":754,"id":763,"nodeType":"Return","src":"4290:31:2"}]}},{"expression":{"hexValue":"30","id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4348:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":754,"id":767,"nodeType":"Return","src":"4341:8:2"}]},"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"3795:314:2","text":" @dev Returns the balance of a given account if a specified plugin is added or zero.\n @param plugin The address of the plugin to query.\n @param account The address of the account to query.\n @return balance The account balance if the specified plugin is added and zero otherwise."},"functionSelector":"c1255635","id":769,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":750,"name":"_guard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"4196:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage","typeString":"struct ReentrancyGuardLib.Data storage ref"}}],"id":751,"kind":"modifierInvocation","modifierName":{"id":749,"name":"nonReentrantView","nameLocations":["4179:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":1505,"src":"4179:16:2"},"nodeType":"ModifierInvocation","src":"4179:24:2"}],"name":"pluginBalanceOf","nameLocation":"4123:15:2","nodeType":"FunctionDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":745,"mutability":"mutable","name":"plugin","nameLocation":"4147:6:2","nodeType":"VariableDeclaration","scope":769,"src":"4139:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":747,"mutability":"mutable","name":"account","nameLocation":"4163:7:2","nodeType":"VariableDeclaration","scope":769,"src":"4155:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"4155:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4138:33:2"},"returnParameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":769,"src":"4225:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":752,"name":"uint256","nodeType":"ElementaryTypeName","src":"4225:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4224:9:2"},"scope":1208,"src":"4114:242:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1355],"body":{"id":781,"nodeType":"Block","src":"4538:47:2","statements":[{"expression":{"arguments":[{"expression":{"id":776,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4559:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4563:6:2","memberName":"sender","nodeType":"MemberAccess","src":"4559:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":778,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"4571:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":775,"name":"_addPlugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"4548:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4548:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":780,"nodeType":"ExpressionStatement","src":"4548:30:2"}]},"documentation":{"id":770,"nodeType":"StructuredDocumentation","src":"4362:121:2","text":" @dev Adds a new plugin for the calling account.\n @param plugin The address of the plugin to add."},"functionSelector":"d8867fc8","id":782,"implemented":true,"kind":"function","modifiers":[],"name":"addPlugin","nameLocation":"4497:9:2","nodeType":"FunctionDefinition","parameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"plugin","nameLocation":"4515:6:2","nodeType":"VariableDeclaration","scope":782,"src":"4507:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":771,"name":"address","nodeType":"ElementaryTypeName","src":"4507:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4506:16:2"},"returnParameters":{"id":774,"nodeType":"ParameterList","parameters":[],"src":"4538:0:2"},"scope":1208,"src":"4488:97:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1360],"body":{"id":794,"nodeType":"Block","src":"4772:50:2","statements":[{"expression":{"arguments":[{"expression":{"id":789,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4796:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4800:6:2","memberName":"sender","nodeType":"MemberAccess","src":"4796:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":791,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"4808:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":788,"name":"_removePlugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"4782:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"4782:33:2"}]},"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"4591:123:2","text":" @dev Removes a plugin for the calling account.\n @param plugin The address of the plugin to remove."},"functionSelector":"a4d95b64","id":795,"implemented":true,"kind":"function","modifiers":[],"name":"removePlugin","nameLocation":"4728:12:2","nodeType":"FunctionDefinition","parameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"plugin","nameLocation":"4749:6:2","nodeType":"VariableDeclaration","scope":795,"src":"4741:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"4741:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4740:16:2"},"returnParameters":{"id":787,"nodeType":"ParameterList","parameters":[],"src":"4772:0:2"},"scope":1208,"src":"4719:103:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1363],"body":{"id":804,"nodeType":"Block","src":"4944:46:2","statements":[{"expression":{"arguments":[{"expression":{"id":800,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4972:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4976:6:2","memberName":"sender","nodeType":"MemberAccess","src":"4972:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":799,"name":"_removeAllPlugins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"4954:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4954:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":803,"nodeType":"ExpressionStatement","src":"4954:29:2"}]},"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"4828:68:2","text":" @dev Removes all plugins for the calling account."},"functionSelector":"8b822d88","id":805,"implemented":true,"kind":"function","modifiers":[],"name":"removeAllPlugins","nameLocation":"4910:16:2","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"4926:2:2"},"returnParameters":{"id":798,"nodeType":"ParameterList","parameters":[],"src":"4944:0:2"},"scope":1208,"src":"4901:89:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":886,"nodeType":"Block","src":"5066:539:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":812,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"5080:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5098:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5090:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"5090:7:2","typeDescriptions":{}}},"id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5090:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5080:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":821,"nodeType":"IfStatement","src":"5076:55:2","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":818,"name":"InvalidPluginAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5109:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5109:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":820,"nodeType":"RevertStatement","src":"5102:29:2"}},{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20Plugins_$1364","typeString":"contract IERC20Plugins"},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":823,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"5153:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":822,"name":"IPlugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"5145:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPlugin_$1384_$","typeString":"type(contract IPlugin)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5145:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPlugin_$1384","typeString":"contract IPlugin"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5161:5:2","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1374,"src":"5145:21:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IERC20Plugins_$1364_$","typeString":"function () view external returns (contract IERC20Plugins)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5145:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Plugins_$1364","typeString":"contract IERC20Plugins"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"arguments":[{"id":830,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5194:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Plugins_$1208","typeString":"contract ERC20Plugins"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20Plugins_$1208","typeString":"contract ERC20Plugins"}],"id":829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5186:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"5186:7:2","typeDescriptions":{}}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5186:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":827,"name":"IERC20Plugins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"5172:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Plugins_$1364_$","typeString":"type(contract IERC20Plugins)"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Plugins_$1364","typeString":"contract IERC20Plugins"}},"src":"5145:55:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":837,"nodeType":"IfStatement","src":"5141:90:2","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":834,"name":"InvalidTokenInPlugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"5209:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5209:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":836,"nodeType":"RevertStatement","src":"5202:29:2"}},{"condition":{"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5245:30:2","subExpression":{"arguments":[{"id":842,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"5268:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":838,"name":"_plugins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5246:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Data_$394_storage_$","typeString":"mapping(address => struct AddressSet.Data storage ref)"}},"id":840,"indexExpression":{"id":839,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"5255:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5246:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage","typeString":"struct AddressSet.Data storage ref"}},"id":841,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5264:3:2","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":482,"src":"5246:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Data_$394_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_Data_$394_storage_ptr_$","typeString":"function (struct AddressSet.Data storage pointer,address) returns (bool)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5246:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":848,"nodeType":"IfStatement","src":"5241:63:2","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":845,"name":"PluginAlreadyAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"5284:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5284:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":847,"nodeType":"RevertStatement","src":"5277:27:2"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":849,"name":"_plugins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5318:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Data_$394_storage_$","typeString":"mapping(address => struct AddressSet.Data storage ref)"}},"id":851,"indexExpression":{"id":850,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"5327:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5318:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage","typeString":"struct AddressSet.Data storage ref"}},"id":852,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5336:6:2","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":409,"src":"5318:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$394_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Data_$394_storage_ptr_$","typeString":"function (struct AddressSet.Data storage pointer) view returns (uint256)"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5318:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":854,"name":"pluginsCountLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"5347:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5318:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":859,"nodeType":"IfStatement","src":"5314:90:2","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":856,"name":"PluginsLimitReachedForAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"5373:29:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":858,"nodeType":"RevertStatement","src":"5366:38:2"}},{"eventCall":{"arguments":[{"id":861,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"5432:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":862,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"5441:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":860,"name":"PluginAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"5420:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5420:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":864,"nodeType":"EmitStatement","src":"5415:33:2"},{"assignments":[866],"declarations":[{"constant":false,"id":866,"mutability":"mutable","name":"balance","nameLocation":"5466:7:2","nodeType":"VariableDeclaration","scope":886,"src":"5458:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":865,"name":"uint256","nodeType":"ElementaryTypeName","src":"5458:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":870,"initialValue":{"arguments":[{"id":868,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"5486:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":867,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[742],"referencedDeclaration":742,"src":"5476:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5476:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5458:36:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":871,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"5508:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5518:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5508:11:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":885,"nodeType":"IfStatement","src":"5504:95:2","trueBody":{"id":884,"nodeType":"Block","src":"5521:78:2","statements":[{"expression":{"arguments":[{"id":875,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"5551:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5567:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5559:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"5559:7:2","typeDescriptions":{}}},"id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5559:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":880,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"5571:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":881,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"5580:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":874,"name":"_updateBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"5535:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"ExpressionStatement","src":"5535:53:2"}]}}]},"id":887,"implemented":true,"kind":"function","modifiers":[],"name":"_addPlugin","nameLocation":"5005:10:2","nodeType":"FunctionDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":807,"mutability":"mutable","name":"account","nameLocation":"5024:7:2","nodeType":"VariableDeclaration","scope":887,"src":"5016:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"5016:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":809,"mutability":"mutable","name":"plugin","nameLocation":"5041:6:2","nodeType":"VariableDeclaration","scope":887,"src":"5033:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"5033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5015:33:2"},"returnParameters":{"id":811,"nodeType":"ParameterList","parameters":[],"src":"5066:0:2"},"scope":1208,"src":"4996:609:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":931,"nodeType":"Block","src":"5684:275:2","statements":[{"condition":{"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5698:33:2","subExpression":{"arguments":[{"id":898,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"5724:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":894,"name":"_plugins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5699:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Data_$394_storage_$","typeString":"mapping(address => struct AddressSet.Data storage ref)"}},"id":896,"indexExpression":{"id":895,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"5708:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5699:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage","typeString":"struct AddressSet.Data storage ref"}},"id":897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5717:6:2","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":564,"src":"5699:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Data_$394_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_Data_$394_storage_ptr_$","typeString":"function (struct AddressSet.Data storage pointer,address) returns (bool)"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5699:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":904,"nodeType":"IfStatement","src":"5694:62:2","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":901,"name":"PluginNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"5740:14:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5740:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":903,"nodeType":"RevertStatement","src":"5733:23:2"}},{"eventCall":{"arguments":[{"id":906,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"5786:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":907,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"5795:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":905,"name":"PluginRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"5772:13:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5772:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":909,"nodeType":"EmitStatement","src":"5767:35:2"},{"assignments":[911],"declarations":[{"constant":false,"id":911,"mutability":"mutable","name":"balance","nameLocation":"5820:7:2","nodeType":"VariableDeclaration","scope":931,"src":"5812:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":910,"name":"uint256","nodeType":"ElementaryTypeName","src":"5812:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":915,"initialValue":{"arguments":[{"id":913,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"5840:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":912,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[742],"referencedDeclaration":742,"src":"5830:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5830:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5812:36:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":916,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"5862:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5872:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5862:11:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":930,"nodeType":"IfStatement","src":"5858:95:2","trueBody":{"id":929,"nodeType":"Block","src":"5875:78:2","statements":[{"expression":{"arguments":[{"id":920,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"5905:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":921,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"5913:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5930:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5922:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"5922:7:2","typeDescriptions":{}}},"id":925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5922:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":926,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"5934:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":919,"name":"_updateBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"5889:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":928,"nodeType":"ExpressionStatement","src":"5889:53:2"}]}}]},"id":932,"implemented":true,"kind":"function","modifiers":[],"name":"_removePlugin","nameLocation":"5620:13:2","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"account","nameLocation":"5642:7:2","nodeType":"VariableDeclaration","scope":932,"src":"5634:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"5634:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"plugin","nameLocation":"5659:6:2","nodeType":"VariableDeclaration","scope":932,"src":"5651:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":890,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5633:33:2"},"returnParameters":{"id":893,"nodeType":"ParameterList","parameters":[],"src":"5684:0:2"},"scope":1208,"src":"5611:348:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1008,"nodeType":"Block","src":"6026:467:2","statements":[{"assignments":[941],"declarations":[{"constant":false,"id":941,"mutability":"mutable","name":"items","nameLocation":"6053:5:2","nodeType":"VariableDeclaration","scope":1008,"src":"6036:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"6036:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":940,"nodeType":"ArrayTypeName","src":"6036:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":948,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"baseExpression":{"id":942,"name":"_plugins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"6061:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Data_$394_storage_$","typeString":"mapping(address => struct AddressSet.Data storage ref)"}},"id":944,"indexExpression":{"id":943,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"6070:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6061:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage","typeString":"struct AddressSet.Data storage ref"}},"id":945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6079:5:2","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":389,"src":"6061:23:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage","typeString":"struct AddressArray.Data storage ref"}},"id":946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6085:3:2","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":87,"src":"6061:27:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$13_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_Data_$13_storage_ptr_$","typeString":"function (struct AddressArray.Data storage pointer) view returns (address[] memory)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6061:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6036:54:2"},{"assignments":[950],"declarations":[{"constant":false,"id":950,"mutability":"mutable","name":"balance","nameLocation":"6108:7:2","nodeType":"VariableDeclaration","scope":1008,"src":"6100:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":949,"name":"uint256","nodeType":"ElementaryTypeName","src":"6100:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":954,"initialValue":{"arguments":[{"id":952,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"6128:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":951,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[742],"referencedDeclaration":742,"src":"6118:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6118:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6100:36:2"},{"id":1007,"nodeType":"UncheckedBlock","src":"6146:341:2","statements":[{"body":{"id":1005,"nodeType":"Block","src":"6213:264:2","statements":[{"expression":{"arguments":[{"baseExpression":{"id":970,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"6256:5:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":974,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":971,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"6262:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6266:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6262:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6256:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":966,"name":"_plugins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"6231:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Data_$394_storage_$","typeString":"mapping(address => struct AddressSet.Data storage ref)"}},"id":968,"indexExpression":{"id":967,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"6240:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6231:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage","typeString":"struct AddressSet.Data storage ref"}},"id":969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6249:6:2","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":564,"src":"6231:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Data_$394_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_Data_$394_storage_ptr_$","typeString":"function (struct AddressSet.Data storage pointer,address) returns (bool)"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6231:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":976,"nodeType":"ExpressionStatement","src":"6231:38:2"},{"eventCall":{"arguments":[{"id":978,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"6306:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":979,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"6315:5:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":983,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":980,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"6321:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6325:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6321:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":977,"name":"PluginRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"6292:13:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6292:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":985,"nodeType":"EmitStatement","src":"6287:41:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":986,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"6350:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6360:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6350:11:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1004,"nodeType":"IfStatement","src":"6346:117:2","trueBody":{"id":1003,"nodeType":"Block","src":"6363:100:2","statements":[{"expression":{"arguments":[{"baseExpression":{"id":990,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"6401:5:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":994,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":991,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"6407:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6411:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6407:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6401:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":995,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"6415:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6432:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6424:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":996,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:2","typeDescriptions":{}}},"id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6424:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1000,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"6436:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":989,"name":"_updateBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"6385:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6385:59:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1002,"nodeType":"ExpressionStatement","src":"6385:59:2"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":960,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"6201:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6205:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6201:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1006,"initializationExpression":{"assignments":[956],"declarations":[{"constant":false,"id":956,"mutability":"mutable","name":"i","nameLocation":"6183:1:2","nodeType":"VariableDeclaration","scope":1006,"src":"6175:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":955,"name":"uint256","nodeType":"ElementaryTypeName","src":"6175:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":959,"initialValue":{"expression":{"id":957,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"6187:5:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6193:6:2","memberName":"length","nodeType":"MemberAccess","src":"6187:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6175:24:2"},"loopExpression":{"expression":{"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"6208:3:2","subExpression":{"id":963,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"6208:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":965,"nodeType":"ExpressionStatement","src":"6208:3:2"},"nodeType":"ForStatement","src":"6170:307:2"}]}]},"id":1009,"implemented":true,"kind":"function","modifiers":[],"name":"_removeAllPlugins","nameLocation":"5974:17:2","nodeType":"FunctionDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"account","nameLocation":"6000:7:2","nodeType":"VariableDeclaration","scope":1009,"src":"5992:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"5992:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5991:17:2"},"returnParameters":{"id":936,"nodeType":"ParameterList","parameters":[],"src":"6026:0:2"},"scope":1208,"src":"5965:528:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1032,"nodeType":"Block","src":"6896:700:2","statements":[{"assignments":[1022],"declarations":[{"constant":false,"id":1022,"mutability":"mutable","name":"selector","nameLocation":"6913:8:2","nodeType":"VariableDeclaration","scope":1032,"src":"6906:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1021,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6906:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":1026,"initialValue":{"expression":{"expression":{"id":1023,"name":"IPlugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6924:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPlugin_$1384_$","typeString":"type(contract IPlugin)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6932:14:2","memberName":"updateBalances","nodeType":"MemberAccess","referencedDeclaration":1383,"src":"6924:22:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function IPlugin.updateBalances(address,address,uint256)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6947:8:2","memberName":"selector","nodeType":"MemberAccess","src":"6924:31:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"6906:49:2"},{"assignments":[1028],"declarations":[{"constant":false,"id":1028,"mutability":"mutable","name":"gasLimit","nameLocation":"6973:8:2","nodeType":"VariableDeclaration","scope":1032,"src":"6965:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"6965:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1030,"initialValue":{"id":1029,"name":"pluginsCallGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"6984:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6965:38:2"},{"AST":{"nodeType":"YulBlock","src":"7038:552:2","statements":[{"nodeType":"YulVariableDeclaration","src":"7095:22:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7112:4:2","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7106:5:2"},"nodeType":"YulFunctionCall","src":"7106:11:2"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"7099:3:2","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7137:3:2"},{"name":"selector","nodeType":"YulIdentifier","src":"7142:8:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7130:6:2"},"nodeType":"YulFunctionCall","src":"7130:21:2"},"nodeType":"YulExpressionStatement","src":"7130:21:2"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7175:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"7180:4:2","type":"","value":"0x04"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7171:3:2"},"nodeType":"YulFunctionCall","src":"7171:14:2"},{"name":"from","nodeType":"YulIdentifier","src":"7187:4:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7164:6:2"},"nodeType":"YulFunctionCall","src":"7164:28:2"},"nodeType":"YulExpressionStatement","src":"7164:28:2"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7216:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"7221:4:2","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7212:3:2"},"nodeType":"YulFunctionCall","src":"7212:14:2"},{"name":"to","nodeType":"YulIdentifier","src":"7228:2:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7205:6:2"},"nodeType":"YulFunctionCall","src":"7205:26:2"},"nodeType":"YulExpressionStatement","src":"7205:26:2"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7255:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"7260:4:2","type":"","value":"0x44"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7251:3:2"},"nodeType":"YulFunctionCall","src":"7251:14:2"},{"name":"amount","nodeType":"YulIdentifier","src":"7267:6:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7244:6:2"},"nodeType":"YulFunctionCall","src":"7244:30:2"},"nodeType":"YulExpressionStatement","src":"7244:30:2"},{"nodeType":"YulVariableDeclaration","src":"7288:20:2","value":{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"7303:3:2"},"nodeType":"YulFunctionCall","src":"7303:5:2"},"variables":[{"name":"gasLeft","nodeType":"YulTypedName","src":"7292:7:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"7375:205:2","statements":[{"body":{"nodeType":"YulBlock","src":"7436:130:2","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7473:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"7478:1:2","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"7481:14:2"},"nodeType":"YulFunctionCall","src":"7481:16:2"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"7458:14:2"},"nodeType":"YulFunctionCall","src":"7458:40:2"},"nodeType":"YulExpressionStatement","src":"7458:40:2"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7526:3:2"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"7531:14:2"},"nodeType":"YulFunctionCall","src":"7531:16:2"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7519:6:2"},"nodeType":"YulFunctionCall","src":"7519:29:2"},"nodeType":"YulExpressionStatement","src":"7519:29:2"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"gasLeft","nodeType":"YulIdentifier","src":"7407:7:2"},{"kind":"number","nodeType":"YulLiteral","src":"7416:2:2","type":"","value":"63"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7403:3:2"},"nodeType":"YulFunctionCall","src":"7403:16:2"},{"kind":"number","nodeType":"YulLiteral","src":"7421:2:2","type":"","value":"64"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7399:3:2"},"nodeType":"YulFunctionCall","src":"7399:25:2"},{"name":"gasLimit","nodeType":"YulIdentifier","src":"7426:8:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7396:2:2"},"nodeType":"YulFunctionCall","src":"7396:39:2"},"nodeType":"YulIf","src":"7393:173:2"}]},"condition":{"arguments":[{"arguments":[{"name":"gasLimit","nodeType":"YulIdentifier","src":"7336:8:2"},{"name":"plugin","nodeType":"YulIdentifier","src":"7346:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"7354:1:2","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"7357:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"7362:4:2","type":"","value":"0x64"},{"kind":"number","nodeType":"YulLiteral","src":"7368:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7371:1:2","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"7331:4:2"},"nodeType":"YulFunctionCall","src":"7331:42:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7324:6:2"},"nodeType":"YulFunctionCall","src":"7324:50:2"},"nodeType":"YulIf","src":"7321:259:2"}]},"evmVersion":"paris","externalReferences":[{"declaration":1018,"isOffset":false,"isSlot":false,"src":"7267:6:2","valueSize":1},{"declaration":1014,"isOffset":false,"isSlot":false,"src":"7187:4:2","valueSize":1},{"declaration":1028,"isOffset":false,"isSlot":false,"src":"7336:8:2","valueSize":1},{"declaration":1028,"isOffset":false,"isSlot":false,"src":"7426:8:2","valueSize":1},{"declaration":1012,"isOffset":false,"isSlot":false,"src":"7346:6:2","valueSize":1},{"declaration":1022,"isOffset":false,"isSlot":false,"src":"7142:8:2","valueSize":1},{"declaration":1016,"isOffset":false,"isSlot":false,"src":"7228:2:2","valueSize":1}],"flags":["memory-safe"],"id":1031,"nodeType":"InlineAssembly","src":"7013:577:2"}]},"documentation":{"id":1010,"nodeType":"StructuredDocumentation","src":"6698:102:2","text":"@dev try IPlugin(plugin).updateBalances{gas: _PLUGIN_CALL_GAS_LIMIT}(from, to, amount) {} catch {}"},"id":1033,"implemented":true,"kind":"function","modifiers":[],"name":"_updateBalances","nameLocation":"6814:15:2","nodeType":"FunctionDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"plugin","nameLocation":"6838:6:2","nodeType":"VariableDeclaration","scope":1033,"src":"6830:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"6830:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1014,"mutability":"mutable","name":"from","nameLocation":"6854:4:2","nodeType":"VariableDeclaration","scope":1033,"src":"6846:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"6846:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"to","nameLocation":"6868:2:2","nodeType":"VariableDeclaration","scope":1033,"src":"6860:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"6860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1018,"mutability":"mutable","name":"amount","nameLocation":"6880:6:2","nodeType":"VariableDeclaration","scope":1033,"src":"6872:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1017,"name":"uint256","nodeType":"ElementaryTypeName","src":"6872:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6829:58:2"},"returnParameters":{"id":1020,"nodeType":"ParameterList","parameters":[],"src":"6896:0:2"},"scope":1208,"src":"6805:791:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[2092],"body":{"id":1206,"nodeType":"Block","src":"7744:1462:2","statements":[{"expression":{"arguments":[{"id":1049,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"7780:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1050,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"7786:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1051,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"7790:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1046,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7754:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Plugins_$1208_$","typeString":"type(contract super ERC20Plugins)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7760:19:2","memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":2092,"src":"7754:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7754:43:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1053,"nodeType":"ExpressionStatement","src":"7754:43:2"},{"id":1205,"nodeType":"UncheckedBlock","src":"7808:1392:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1054,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"7836:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7845:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7836:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1057,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"7850:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1058,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"7858:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7850:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7836:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1204,"nodeType":"IfStatement","src":"7832:1358:2","trueBody":{"id":1203,"nodeType":"Block","src":"7862:1328:2","statements":[{"assignments":[1065],"declarations":[{"constant":false,"id":1065,"mutability":"mutable","name":"a","nameLocation":"7897:1:2","nodeType":"VariableDeclaration","scope":1203,"src":"7880:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"7880:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1064,"nodeType":"ArrayTypeName","src":"7880:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1072,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"baseExpression":{"id":1066,"name":"_plugins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"7901:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Data_$394_storage_$","typeString":"mapping(address => struct AddressSet.Data storage ref)"}},"id":1068,"indexExpression":{"id":1067,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"7910:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7901:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage","typeString":"struct AddressSet.Data storage ref"}},"id":1069,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7916:5:2","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":389,"src":"7901:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage","typeString":"struct AddressArray.Data storage ref"}},"id":1070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7922:3:2","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":87,"src":"7901:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$13_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_Data_$13_storage_ptr_$","typeString":"function (struct AddressArray.Data storage pointer) view returns (address[] memory)"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7901:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7880:47:2"},{"assignments":[1077],"declarations":[{"constant":false,"id":1077,"mutability":"mutable","name":"b","nameLocation":"7962:1:2","nodeType":"VariableDeclaration","scope":1203,"src":"7945:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"7945:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1076,"nodeType":"ArrayTypeName","src":"7945:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1084,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"baseExpression":{"id":1078,"name":"_plugins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"7966:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Data_$394_storage_$","typeString":"mapping(address => struct AddressSet.Data storage ref)"}},"id":1080,"indexExpression":{"id":1079,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"7975:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7966:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$394_storage","typeString":"struct AddressSet.Data storage ref"}},"id":1081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7979:5:2","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":389,"src":"7966:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$13_storage","typeString":"struct AddressArray.Data storage ref"}},"id":1082,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:3:2","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":87,"src":"7966:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$13_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_Data_$13_storage_ptr_$","typeString":"function (struct AddressArray.Data storage pointer) view returns (address[] memory)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7966:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7945:45:2"},{"assignments":[1086],"declarations":[{"constant":false,"id":1086,"mutability":"mutable","name":"aLength","nameLocation":"8016:7:2","nodeType":"VariableDeclaration","scope":1203,"src":"8008:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"8008:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1089,"initialValue":{"expression":{"id":1087,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"8026:1:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8028:6:2","memberName":"length","nodeType":"MemberAccess","src":"8026:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8008:26:2"},{"assignments":[1091],"declarations":[{"constant":false,"id":1091,"mutability":"mutable","name":"bLength","nameLocation":"8060:7:2","nodeType":"VariableDeclaration","scope":1203,"src":"8052:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1090,"name":"uint256","nodeType":"ElementaryTypeName","src":"8052:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1094,"initialValue":{"expression":{"id":1092,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"8070:1:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8072:6:2","memberName":"length","nodeType":"MemberAccess","src":"8070:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8052:26:2"},{"body":{"id":1165,"nodeType":"Block","src":"8135:696:2","statements":[{"assignments":[1106],"declarations":[{"constant":false,"id":1106,"mutability":"mutable","name":"plugin","nameLocation":"8165:6:2","nodeType":"VariableDeclaration","scope":1165,"src":"8157:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1105,"name":"address","nodeType":"ElementaryTypeName","src":"8157:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1110,"initialValue":{"baseExpression":{"id":1107,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"8174:1:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1109,"indexExpression":{"id":1108,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"8176:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8174:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8157:21:2"},{"assignments":[1112],"declarations":[{"constant":false,"id":1112,"mutability":"mutable","name":"j","nameLocation":"8209:1:2","nodeType":"VariableDeclaration","scope":1165,"src":"8201:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"8201:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1113,"nodeType":"VariableDeclarationStatement","src":"8201:9:2"},{"body":{"id":1148,"nodeType":"Block","src":"8262:329:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1124,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"8292:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":1125,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"8302:1:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1127,"indexExpression":{"id":1126,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"8304:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8302:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8292:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1147,"nodeType":"IfStatement","src":"8288:281:2","trueBody":{"id":1146,"nodeType":"Block","src":"8308:261:2","statements":[{"expression":{"arguments":[{"id":1130,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"8435:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1131,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"8443:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1132,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"8449:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1133,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"8453:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1129,"name":"_updateBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"8419:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8419:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1135,"nodeType":"ExpressionStatement","src":"8419:41:2"},{"expression":{"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1136,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"8490:1:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1138,"indexExpression":{"id":1137,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"8492:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8490:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":1141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8505:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8497:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"8497:7:2","typeDescriptions":{}}},"id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8497:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8490:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1144,"nodeType":"ExpressionStatement","src":"8490:17:2"},{"id":1145,"nodeType":"Break","src":"8537:5:2"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1118,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"8244:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1119,"name":"bLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"8248:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8244:11:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1149,"initializationExpression":{"expression":{"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1114,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"8237:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8241:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8237:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1117,"nodeType":"ExpressionStatement","src":"8237:5:2"},"loopExpression":{"expression":{"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8257:3:2","subExpression":{"id":1121,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"8257:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1123,"nodeType":"ExpressionStatement","src":"8257:3:2"},"nodeType":"ForStatement","src":"8232:359:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1150,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"8617:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1151,"name":"bLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"8622:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8617:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1164,"nodeType":"IfStatement","src":"8613:200:2","trueBody":{"id":1163,"nodeType":"Block","src":"8631:182:2","statements":[{"expression":{"arguments":[{"id":1154,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"8757:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1155,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"8765:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8779:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8771:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"8771:7:2","typeDescriptions":{}}},"id":1159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8771:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1160,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"8783:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1153,"name":"_updateBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"8741:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8741:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1162,"nodeType":"ExpressionStatement","src":"8741:49:2"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1099,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"8117:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1100,"name":"aLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"8121:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8117:11:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1166,"initializationExpression":{"assignments":[1096],"declarations":[{"constant":false,"id":1096,"mutability":"mutable","name":"i","nameLocation":"8110:1:2","nodeType":"VariableDeclaration","scope":1166,"src":"8102:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"8102:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1098,"initialValue":{"hexValue":"30","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8114:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8102:13:2"},"loopExpression":{"expression":{"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8130:3:2","subExpression":{"id":1102,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"8130:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1104,"nodeType":"ExpressionStatement","src":"8130:3:2"},"nodeType":"ForStatement","src":"8097:734:2"},{"body":{"id":1201,"nodeType":"Block","src":"8887:289:2","statements":[{"assignments":[1178],"declarations":[{"constant":false,"id":1178,"mutability":"mutable","name":"plugin","nameLocation":"8917:6:2","nodeType":"VariableDeclaration","scope":1201,"src":"8909:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"8909:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1182,"initialValue":{"baseExpression":{"id":1179,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"8926:1:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1181,"indexExpression":{"id":1180,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"8928:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8926:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8909:21:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1183,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"8956:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8974:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8966:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1184,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:2","typeDescriptions":{}}},"id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8966:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8956:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1200,"nodeType":"IfStatement","src":"8952:206:2","trueBody":{"id":1199,"nodeType":"Block","src":"8978:180:2","statements":[{"expression":{"arguments":[{"id":1190,"name":"plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"9104:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9120:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9112:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"9112:7:2","typeDescriptions":{}}},"id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9112:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1195,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"9124:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1196,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"9128:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1189,"name":"_updateBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"9088:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9088:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1198,"nodeType":"ExpressionStatement","src":"9088:47:2"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1171,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"8869:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1172,"name":"bLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"8873:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8869:11:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1202,"initializationExpression":{"assignments":[1168],"declarations":[{"constant":false,"id":1168,"mutability":"mutable","name":"j","nameLocation":"8862:1:2","nodeType":"VariableDeclaration","scope":1202,"src":"8854:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"8854:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1170,"initialValue":{"hexValue":"30","id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8866:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8854:13:2"},"loopExpression":{"expression":{"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8882:3:2","subExpression":{"id":1174,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"8882:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1176,"nodeType":"ExpressionStatement","src":"8882:3:2"},"nodeType":"ForStatement","src":"8849:327:2"}]}}]}]},"id":1207,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1042,"name":"_guard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"7719:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage","typeString":"struct ReentrancyGuardLib.Data storage ref"}}],"id":1043,"kind":"modifierInvocation","modifierName":{"id":1041,"name":"nonReentrant","nameLocations":["7706:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":1488,"src":"7706:12:2"},"nodeType":"ModifierInvocation","src":"7706:20:2"}],"name":"_afterTokenTransfer","nameLocation":"7635:19:2","nodeType":"FunctionDefinition","overrides":{"id":1044,"nodeType":"OverrideSpecifier","overrides":[],"src":"7727:8:2"},"parameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"from","nameLocation":"7663:4:2","nodeType":"VariableDeclaration","scope":1207,"src":"7655:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1034,"name":"address","nodeType":"ElementaryTypeName","src":"7655:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"to","nameLocation":"7677:2:2","nodeType":"VariableDeclaration","scope":1207,"src":"7669:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"7669:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"amount","nameLocation":"7689:6:2","nodeType":"VariableDeclaration","scope":1207,"src":"7681:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"7681:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7654:42:2"},"returnParameters":{"id":1045,"nodeType":"ParameterList","parameters":[],"src":"7744:0:2"},"scope":1208,"src":"7626:1580:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1209,"src":"704:8504:2","usedErrors":[4,6,8,601,603,605,607,609,611,1390]}],"src":"33:9176:2"},"id":2},"@1inch/token-plugins/contracts/Plugin.sol":{"ast":{"absolutePath":"@1inch/token-plugins/contracts/Plugin.sol","exportedSymbols":{"IERC20Plugins":[1364],"IPlugin":[1384],"Plugin":[1280]},"id":1281,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1210,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:3"},{"absolutePath":"@1inch/token-plugins/contracts/interfaces/IPlugin.sol","file":"./interfaces/IPlugin.sol","id":1212,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1281,"sourceUnit":1385,"src":"58:51:3","symbolAliases":[{"foreign":{"id":1211,"name":"IPlugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"67:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol","file":"./interfaces/IERC20Plugins.sol","id":1214,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1281,"sourceUnit":1365,"src":"110:63:3","symbolAliases":[{"foreign":{"id":1213,"name":"IERC20Plugins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"119:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1216,"name":"IPlugin","nameLocations":["483:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1384,"src":"483:7:3"},"id":1217,"nodeType":"InheritanceSpecifier","src":"483:7:3"}],"canonicalName":"Plugin","contractDependencies":[],"contractKind":"contract","documentation":{"id":1215,"nodeType":"StructuredDocumentation","src":"176:279:3","text":"@dev ERC20 extension enabling external smart contract based plugins to track balances of those users who opted-in to these plugins.\n Could be useful for farming / DAO voting and every case where you need to track user's balances without moving tokens to another contract."},"fullyImplemented":false,"id":1280,"linearizedBaseContracts":[1280,1384],"name":"Plugin","nameLocation":"473:6:3","nodeType":"ContractDefinition","nodes":[{"errorSelector":"4ca88867","id":1219,"name":"AccessDenied","nameLocation":"503:12:3","nodeType":"ErrorDefinition","parameters":{"id":1218,"nodeType":"ParameterList","parameters":[],"src":"515:2:3"},"src":"497:21:3"},{"baseFunctions":[1374],"constant":false,"functionSelector":"fc0c546a","id":1222,"mutability":"immutable","name":"token","nameLocation":"555:5:3","nodeType":"VariableDeclaration","scope":1280,"src":"524:36:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Plugins_$1364","typeString":"contract IERC20Plugins"},"typeName":{"id":1221,"nodeType":"UserDefinedTypeName","pathNode":{"id":1220,"name":"IERC20Plugins","nameLocations":["524:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":1364,"src":"524:13:3"},"referencedDeclaration":1364,"src":"524:13:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Plugins_$1364","typeString":"contract IERC20Plugins"}},"visibility":"public"},{"body":{"id":1237,"nodeType":"Block","src":"655:83:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1225,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"669:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"673:6:3","memberName":"sender","nodeType":"MemberAccess","src":"669:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":1229,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"691:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Plugins_$1364","typeString":"contract IERC20Plugins"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Plugins_$1364","typeString":"contract IERC20Plugins"}],"id":1228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"683:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"683:7:3","typeDescriptions":{}}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"683:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"669:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1235,"nodeType":"IfStatement","src":"665:55:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1232,"name":"AccessDenied","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"706:12:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"706:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1234,"nodeType":"RevertStatement","src":"699:21:3"}},{"id":1236,"nodeType":"PlaceholderStatement","src":"730:1:3"}]},"documentation":{"id":1223,"nodeType":"StructuredDocumentation","src":"567:64:3","text":"@dev Throws an error if the caller is not the token contract"},"id":1238,"name":"onlyToken","nameLocation":"645:9:3","nodeType":"ModifierDefinition","parameters":{"id":1224,"nodeType":"ParameterList","parameters":[],"src":"655:0:3"},"src":"636:102:3","virtual":false,"visibility":"internal"},{"body":{"id":1249,"nodeType":"Block","src":"937:31:3","statements":[{"expression":{"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1245,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"947:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Plugins_$1364","typeString":"contract IERC20Plugins"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1246,"name":"token_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"955:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Plugins_$1364","typeString":"contract IERC20Plugins"}},"src":"947:14:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Plugins_$1364","typeString":"contract IERC20Plugins"}},"id":1248,"nodeType":"ExpressionStatement","src":"947:14:3"}]},"documentation":{"id":1239,"nodeType":"StructuredDocumentation","src":"744:154:3","text":"@dev Creates a new plugin contract, initialized with a reference to the parent token contract.\n @param token_ The address of the token contract"},"id":1250,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1242,"mutability":"mutable","name":"token_","nameLocation":"929:6:3","nodeType":"VariableDeclaration","scope":1250,"src":"915:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Plugins_$1364","typeString":"contract IERC20Plugins"},"typeName":{"id":1241,"nodeType":"UserDefinedTypeName","pathNode":{"id":1240,"name":"IERC20Plugins","nameLocations":["915:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":1364,"src":"915:13:3"},"referencedDeclaration":1364,"src":"915:13:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Plugins_$1364","typeString":"contract IERC20Plugins"}},"visibility":"internal"}],"src":"914:22:3"},"returnParameters":{"id":1244,"nodeType":"ParameterList","parameters":[],"src":"937:0:3"},"scope":1280,"src":"903:65:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1383],"body":{"id":1268,"nodeType":"Block","src":"1411:50:3","statements":[{"expression":{"arguments":[{"id":1263,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"1437:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1264,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"1443:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1265,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"1447:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1262,"name":"_updateBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"1421:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1421:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1267,"nodeType":"ExpressionStatement","src":"1421:33:3"}]},"documentation":{"id":1251,"nodeType":"StructuredDocumentation","src":"974:347:3","text":"@dev Updates the balances of two addresses in the plugin as a result of any balance changes.\n Only the Token contract is allowed to call this function.\n @param from The address from which tokens were transferred\n @param to The address to which tokens were transferred\n @param amount The amount of tokens transferred"},"functionSelector":"7a1f1aa9","id":1269,"implemented":true,"kind":"function","modifiers":[{"id":1260,"kind":"modifierInvocation","modifierName":{"id":1259,"name":"onlyToken","nameLocations":["1401:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":1238,"src":"1401:9:3"},"nodeType":"ModifierInvocation","src":"1401:9:3"}],"name":"updateBalances","nameLocation":"1335:14:3","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"from","nameLocation":"1358:4:3","nodeType":"VariableDeclaration","scope":1269,"src":"1350:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"1350:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1255,"mutability":"mutable","name":"to","nameLocation":"1372:2:3","nodeType":"VariableDeclaration","scope":1269,"src":"1364:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"1364:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"amount","nameLocation":"1384:6:3","nodeType":"VariableDeclaration","scope":1269,"src":"1376:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"1376:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1349:42:3"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[],"src":"1411:0:3"},"scope":1280,"src":"1326:135:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1270,"nodeType":"StructuredDocumentation","src":"1467:347:3","text":"@dev Updates the balances of two addresses in the plugin as a result of any balance changes.\n Only the Token contract is allowed to call this function.\n @param from The address from which tokens were transferred\n @param to The address to which tokens were transferred\n @param amount The amount of tokens transferred"},"id":1279,"implemented":false,"kind":"function","modifiers":[],"name":"_updateBalances","nameLocation":"1828:15:3","nodeType":"FunctionDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"from","nameLocation":"1852:4:3","nodeType":"VariableDeclaration","scope":1279,"src":"1844:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"to","nameLocation":"1866:2:3","nodeType":"VariableDeclaration","scope":1279,"src":"1858:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1273,"name":"address","nodeType":"ElementaryTypeName","src":"1858:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"amount","nameLocation":"1878:6:3","nodeType":"VariableDeclaration","scope":1279,"src":"1870:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1843:42:3"},"returnParameters":{"id":1278,"nodeType":"ParameterList","parameters":[],"src":"1902:0:3"},"scope":1280,"src":"1819:84:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1281,"src":"455:1450:3","usedErrors":[1219]}],"src":"33:1873:3"},"id":3},"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol":{"ast":{"absolutePath":"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol","exportedSymbols":{"IERC20":[2171],"IERC20Plugins":[1364]},"id":1365,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1282,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1284,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1365,"sourceUnit":2172,"src":"58:72:4","symbolAliases":[{"foreign":{"id":1283,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"67:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1285,"name":"IERC20","nameLocations":["159:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":2171,"src":"159:6:4"},"id":1286,"nodeType":"InheritanceSpecifier","src":"159:6:4"}],"canonicalName":"IERC20Plugins","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1364,"linearizedBaseContracts":[1364,2171],"name":"IERC20Plugins","nameLocation":"142:13:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"68aafb7a848a8e6e0e8fe992de5812474789ddec166ce06be4de83b3aaa2864e","id":1292,"name":"PluginAdded","nameLocation":"178:11:4","nodeType":"EventDefinition","parameters":{"id":1291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"198:7:4","nodeType":"VariableDeclaration","scope":1292,"src":"190:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1287,"name":"address","nodeType":"ElementaryTypeName","src":"190:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1290,"indexed":false,"mutability":"mutable","name":"plugin","nameLocation":"215:6:4","nodeType":"VariableDeclaration","scope":1292,"src":"207:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"207:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"189:33:4"},"src":"172:51:4"},{"anonymous":false,"eventSelector":"550ef13f654f6fc7054e7c556d2647cb8838befbfa68640bb3050fc458ad4735","id":1298,"name":"PluginRemoved","nameLocation":"234:13:4","nodeType":"EventDefinition","parameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"256:7:4","nodeType":"VariableDeclaration","scope":1298,"src":"248:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"248:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1296,"indexed":false,"mutability":"mutable","name":"plugin","nameLocation":"273:6:4","nodeType":"VariableDeclaration","scope":1298,"src":"265:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"265:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"247:33:4"},"src":"228:53:4"},{"functionSelector":"53cea5df","id":1303,"implemented":false,"kind":"function","modifiers":[],"name":"pluginsCountLimit","nameLocation":"296:17:4","nodeType":"FunctionDefinition","parameters":{"id":1299,"nodeType":"ParameterList","parameters":[],"src":"313:2:4"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1303,"src":"338:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1300,"name":"uint256","nodeType":"ElementaryTypeName","src":"338:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"337:9:4"},"scope":1364,"src":"287:60:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7ee688cb","id":1308,"implemented":false,"kind":"function","modifiers":[],"name":"pluginsCallGasLimit","nameLocation":"361:19:4","nodeType":"FunctionDefinition","parameters":{"id":1304,"nodeType":"ParameterList","parameters":[],"src":"380:2:4"},"returnParameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1308,"src":"405:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1305,"name":"uint256","nodeType":"ElementaryTypeName","src":"405:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:9:4"},"scope":1364,"src":"352:62:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ed6edc82","id":1317,"implemented":false,"kind":"function","modifiers":[],"name":"hasPlugin","nameLocation":"428:9:4","nodeType":"FunctionDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"account","nameLocation":"446:7:4","nodeType":"VariableDeclaration","scope":1317,"src":"438:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"438:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"plugin","nameLocation":"463:6:4","nodeType":"VariableDeclaration","scope":1317,"src":"455:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"455:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"437:33:4"},"returnParameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1317,"src":"493:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1314,"name":"bool","nodeType":"ElementaryTypeName","src":"493:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"492:6:4"},"scope":1364,"src":"419:80:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"61728134","id":1324,"implemented":false,"kind":"function","modifiers":[],"name":"pluginsCount","nameLocation":"513:12:4","nodeType":"FunctionDefinition","parameters":{"id":1320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"account","nameLocation":"534:7:4","nodeType":"VariableDeclaration","scope":1324,"src":"526:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"526:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"525:17:4"},"returnParameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1324,"src":"565:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1321,"name":"uint256","nodeType":"ElementaryTypeName","src":"565:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"564:9:4"},"scope":1364,"src":"504:70:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1945f729","id":1333,"implemented":false,"kind":"function","modifiers":[],"name":"pluginAt","nameLocation":"588:8:4","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"account","nameLocation":"605:7:4","nodeType":"VariableDeclaration","scope":1333,"src":"597:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"index","nameLocation":"622:5:4","nodeType":"VariableDeclaration","scope":1333,"src":"614:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"614:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:32:4"},"returnParameters":{"id":1332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1333,"src":"651:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1330,"name":"address","nodeType":"ElementaryTypeName","src":"651:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"650:9:4"},"scope":1364,"src":"579:81:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4b12e643","id":1341,"implemented":false,"kind":"function","modifiers":[],"name":"plugins","nameLocation":"674:7:4","nodeType":"FunctionDefinition","parameters":{"id":1336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"account","nameLocation":"690:7:4","nodeType":"VariableDeclaration","scope":1341,"src":"682:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1334,"name":"address","nodeType":"ElementaryTypeName","src":"682:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"681:17:4"},"returnParameters":{"id":1340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1341,"src":"721:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1337,"name":"address","nodeType":"ElementaryTypeName","src":"721:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1338,"nodeType":"ArrayTypeName","src":"721:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"720:18:4"},"scope":1364,"src":"665:74:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c1255635","id":1350,"implemented":false,"kind":"function","modifiers":[],"name":"pluginBalanceOf","nameLocation":"753:15:4","nodeType":"FunctionDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"plugin","nameLocation":"777:6:4","nodeType":"VariableDeclaration","scope":1350,"src":"769:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1342,"name":"address","nodeType":"ElementaryTypeName","src":"769:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1345,"mutability":"mutable","name":"account","nameLocation":"793:7:4","nodeType":"VariableDeclaration","scope":1350,"src":"785:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"785:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"768:33:4"},"returnParameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1350,"src":"824:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1347,"name":"uint256","nodeType":"ElementaryTypeName","src":"824:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"823:9:4"},"scope":1364,"src":"744:89:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d8867fc8","id":1355,"implemented":false,"kind":"function","modifiers":[],"name":"addPlugin","nameLocation":"848:9:4","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1352,"mutability":"mutable","name":"plugin","nameLocation":"866:6:4","nodeType":"VariableDeclaration","scope":1355,"src":"858:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:16:4"},"returnParameters":{"id":1354,"nodeType":"ParameterList","parameters":[],"src":"882:0:4"},"scope":1364,"src":"839:44:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a4d95b64","id":1360,"implemented":false,"kind":"function","modifiers":[],"name":"removePlugin","nameLocation":"897:12:4","nodeType":"FunctionDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"mutability":"mutable","name":"plugin","nameLocation":"918:6:4","nodeType":"VariableDeclaration","scope":1360,"src":"910:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1356,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"909:16:4"},"returnParameters":{"id":1359,"nodeType":"ParameterList","parameters":[],"src":"934:0:4"},"scope":1364,"src":"888:47:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8b822d88","id":1363,"implemented":false,"kind":"function","modifiers":[],"name":"removeAllPlugins","nameLocation":"949:16:4","nodeType":"FunctionDefinition","parameters":{"id":1361,"nodeType":"ParameterList","parameters":[],"src":"965:2:4"},"returnParameters":{"id":1362,"nodeType":"ParameterList","parameters":[],"src":"976:0:4"},"scope":1364,"src":"940:37:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1365,"src":"132:847:4","usedErrors":[]}],"src":"33:947:4"},"id":4},"@1inch/token-plugins/contracts/interfaces/IPlugin.sol":{"ast":{"absolutePath":"@1inch/token-plugins/contracts/interfaces/IPlugin.sol","exportedSymbols":{"IERC20Plugins":[1364],"IPlugin":[1384]},"id":1385,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1366,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:5"},{"absolutePath":"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol","file":"./IERC20Plugins.sol","id":1368,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1385,"sourceUnit":1365,"src":"58:52:5","symbolAliases":[{"foreign":{"id":1367,"name":"IERC20Plugins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"67:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPlugin","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1384,"linearizedBaseContracts":[1384],"name":"IPlugin","nameLocation":"122:7:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"fc0c546a","id":1374,"implemented":false,"kind":"function","modifiers":[],"name":"token","nameLocation":"145:5:5","nodeType":"FunctionDefinition","parameters":{"id":1369,"nodeType":"ParameterList","parameters":[],"src":"150:2:5"},"returnParameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1374,"src":"175:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Plugins_$1364","typeString":"contract IERC20Plugins"},"typeName":{"id":1371,"nodeType":"UserDefinedTypeName","pathNode":{"id":1370,"name":"IERC20Plugins","nameLocations":["175:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1364,"src":"175:13:5"},"referencedDeclaration":1364,"src":"175:13:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Plugins_$1364","typeString":"contract IERC20Plugins"}},"visibility":"internal"}],"src":"174:15:5"},"scope":1384,"src":"136:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7a1f1aa9","id":1383,"implemented":false,"kind":"function","modifiers":[],"name":"updateBalances","nameLocation":"204:14:5","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"from","nameLocation":"227:4:5","nodeType":"VariableDeclaration","scope":1383,"src":"219:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1375,"name":"address","nodeType":"ElementaryTypeName","src":"219:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1378,"mutability":"mutable","name":"to","nameLocation":"241:2:5","nodeType":"VariableDeclaration","scope":1383,"src":"233:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1377,"name":"address","nodeType":"ElementaryTypeName","src":"233:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"amount","nameLocation":"253:6:5","nodeType":"VariableDeclaration","scope":1383,"src":"245:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1379,"name":"uint256","nodeType":"ElementaryTypeName","src":"245:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"218:42:5"},"returnParameters":{"id":1382,"nodeType":"ParameterList","parameters":[],"src":"269:0:5"},"scope":1384,"src":"195:75:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1385,"src":"112:160:5","usedErrors":[]}],"src":"33:240:5"},"id":5},"@1inch/token-plugins/contracts/libs/ReentrancyGuard.sol":{"ast":{"absolutePath":"@1inch/token-plugins/contracts/libs/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuardExt":[1506],"ReentrancyGuardLib":[1465]},"id":1507,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1386,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"ReentrancyGuardLib","contractDependencies":[],"contractKind":"library","documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"58:103:6","text":" @title ReentrancyGuardLib\n @dev Library that provides reentrancy protection for functions."},"fullyImplemented":true,"id":1465,"linearizedBaseContracts":[1465],"name":"ReentrancyGuardLib","nameLocation":"170:18:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1388,"nodeType":"StructuredDocumentation","src":"196:38:6","text":"@dev Emit when reentrancy detected"},"errorSelector":"37ed32e8","id":1390,"name":"ReentrantCall","nameLocation":"245:13:6","nodeType":"ErrorDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[],"src":"258:2:6"},"src":"239:22:6"},{"constant":true,"id":1393,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"292:12:6","nodeType":"VariableDeclaration","scope":1465,"src":"267:41:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1391,"name":"uint256","nodeType":"ElementaryTypeName","src":"267:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"307:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1396,"mutability":"constant","name":"_ENTERED","nameLocation":"339:8:6","nodeType":"VariableDeclaration","scope":1465,"src":"314:37:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1394,"name":"uint256","nodeType":"ElementaryTypeName","src":"314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"350:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"canonicalName":"ReentrancyGuardLib.Data","id":1399,"members":[{"constant":false,"id":1398,"mutability":"mutable","name":"_status","nameLocation":"452:7:6","nodeType":"VariableDeclaration","scope":1399,"src":"444:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"444:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Data","nameLocation":"429:4:6","nodeType":"StructDefinition","scope":1465,"src":"422:44:6","visibility":"public"},{"body":{"id":1412,"nodeType":"Block","src":"665:44:6","statements":[{"expression":{"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1406,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"675:4:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data storage pointer"}},"id":1408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"680:7:6","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1398,"src":"675:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1409,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"690:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"675:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1411,"nodeType":"ExpressionStatement","src":"675:27:6"}]},"documentation":{"id":1400,"nodeType":"StructuredDocumentation","src":"472:146:6","text":" @dev Initializes the struct with the current status set to not entered.\n @param self The storage reference to the struct."},"id":1413,"implemented":true,"kind":"function","modifiers":[],"name":"init","nameLocation":"632:4:6","nodeType":"FunctionDefinition","parameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1403,"mutability":"mutable","name":"self","nameLocation":"650:4:6","nodeType":"VariableDeclaration","scope":1413,"src":"637:17:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data"},"typeName":{"id":1402,"nodeType":"UserDefinedTypeName","pathNode":{"id":1401,"name":"Data","nameLocations":["637:4:6"],"nodeType":"IdentifierPath","referencedDeclaration":1399,"src":"637:4:6"},"referencedDeclaration":1399,"src":"637:4:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data"}},"visibility":"internal"}],"src":"636:19:6"},"returnParameters":{"id":1405,"nodeType":"ParameterList","parameters":[],"src":"665:0:6"},"scope":1465,"src":"623:86:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1434,"nodeType":"Block","src":"918:102:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1420,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"932:4:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data storage pointer"}},"id":1421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"937:7:6","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1398,"src":"932:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1422,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"948:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"932:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1427,"nodeType":"IfStatement","src":"928:52:6","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1424,"name":"ReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"965:13:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"965:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1426,"nodeType":"RevertStatement","src":"958:22:6"}},{"expression":{"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1428,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"990:4:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data storage pointer"}},"id":1430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"995:7:6","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1398,"src":"990:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1431,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1005:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"990:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1433,"nodeType":"ExpressionStatement","src":"990:23:6"}]},"documentation":{"id":1414,"nodeType":"StructuredDocumentation","src":"715:155:6","text":" @dev Sets the status to entered if it is not already entered, otherwise reverts.\n @param self The storage reference to the struct."},"id":1435,"implemented":true,"kind":"function","modifiers":[],"name":"enter","nameLocation":"884:5:6","nodeType":"FunctionDefinition","parameters":{"id":1418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1417,"mutability":"mutable","name":"self","nameLocation":"903:4:6","nodeType":"VariableDeclaration","scope":1435,"src":"890:17:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data"},"typeName":{"id":1416,"nodeType":"UserDefinedTypeName","pathNode":{"id":1415,"name":"Data","nameLocations":["890:4:6"],"nodeType":"IdentifierPath","referencedDeclaration":1399,"src":"890:4:6"},"referencedDeclaration":1399,"src":"890:4:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data"}},"visibility":"internal"}],"src":"889:19:6"},"returnParameters":{"id":1419,"nodeType":"ParameterList","parameters":[],"src":"918:0:6"},"scope":1465,"src":"875:145:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1448,"nodeType":"Block","src":"1186:44:6","statements":[{"expression":{"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1442,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"1196:4:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data storage pointer"}},"id":1444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1201:7:6","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1398,"src":"1196:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1445,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"1211:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1196:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1447,"nodeType":"ExpressionStatement","src":"1196:27:6"}]},"documentation":{"id":1436,"nodeType":"StructuredDocumentation","src":"1026:113:6","text":" @dev Resets the status to not entered.\n @param self The storage reference to the struct."},"id":1449,"implemented":true,"kind":"function","modifiers":[],"name":"exit","nameLocation":"1153:4:6","nodeType":"FunctionDefinition","parameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"self","nameLocation":"1171:4:6","nodeType":"VariableDeclaration","scope":1449,"src":"1158:17:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data"},"typeName":{"id":1438,"nodeType":"UserDefinedTypeName","pathNode":{"id":1437,"name":"Data","nameLocations":["1158:4:6"],"nodeType":"IdentifierPath","referencedDeclaration":1399,"src":"1158:4:6"},"referencedDeclaration":1399,"src":"1158:4:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data"}},"visibility":"internal"}],"src":"1157:19:6"},"returnParameters":{"id":1441,"nodeType":"ParameterList","parameters":[],"src":"1186:0:6"},"scope":1465,"src":"1144:86:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1463,"nodeType":"Block","src":"1532:48:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1458,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"1549:4:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data storage pointer"}},"id":1459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1554:7:6","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1398,"src":"1549:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1460,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1565:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1549:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1457,"id":1462,"nodeType":"Return","src":"1542:31:6"}]},"documentation":{"id":1450,"nodeType":"StructuredDocumentation","src":"1236:228:6","text":" @dev Checks the current status of the contract to ensure that it is not already entered.\n @param self The storage reference to the struct.\n @return Whether or not the contract is currently entered."},"id":1464,"implemented":true,"kind":"function","modifiers":[],"name":"check","nameLocation":"1478:5:6","nodeType":"FunctionDefinition","parameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1453,"mutability":"mutable","name":"self","nameLocation":"1497:4:6","nodeType":"VariableDeclaration","scope":1464,"src":"1484:17:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data"},"typeName":{"id":1452,"nodeType":"UserDefinedTypeName","pathNode":{"id":1451,"name":"Data","nameLocations":["1484:4:6"],"nodeType":"IdentifierPath","referencedDeclaration":1399,"src":"1484:4:6"},"referencedDeclaration":1399,"src":"1484:4:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data"}},"visibility":"internal"}],"src":"1483:19:6"},"returnParameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1464,"src":"1526:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1455,"name":"bool","nodeType":"ElementaryTypeName","src":"1526:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1525:6:6"},"scope":1465,"src":"1469:111:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1507,"src":"162:1420:6","usedErrors":[1390]},{"abstract":false,"baseContracts":[],"canonicalName":"ReentrancyGuardExt","contractDependencies":[],"contractKind":"contract","documentation":{"id":1466,"nodeType":"StructuredDocumentation","src":"1584:120:6","text":" @title ReentrancyGuardExt\n @dev Contract that uses the ReentrancyGuardLib to provide reentrancy protection."},"fullyImplemented":true,"id":1506,"linearizedBaseContracts":[1506],"name":"ReentrancyGuardExt","nameLocation":"1714:18:6","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1470,"libraryName":{"id":1467,"name":"ReentrancyGuardLib","nameLocations":["1745:18:6"],"nodeType":"IdentifierPath","referencedDeclaration":1465,"src":"1745:18:6"},"nodeType":"UsingForDirective","src":"1739:53:6","typeName":{"id":1469,"nodeType":"UserDefinedTypeName","pathNode":{"id":1468,"name":"ReentrancyGuardLib.Data","nameLocations":["1768:18:6","1787:4:6"],"nodeType":"IdentifierPath","referencedDeclaration":1399,"src":"1768:23:6"},"referencedDeclaration":1399,"src":"1768:23:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data"}}},{"body":{"id":1487,"nodeType":"Block","src":"2018:61:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1476,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"2028:4:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data storage pointer"}},"id":1478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2033:5:6","memberName":"enter","nodeType":"MemberAccess","referencedDeclaration":1435,"src":"2028:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Data_$1399_storage_ptr_$returns$__$attached_to$_t_struct$_Data_$1399_storage_ptr_$","typeString":"function (struct ReentrancyGuardLib.Data storage pointer)"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2028:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1480,"nodeType":"ExpressionStatement","src":"2028:12:6"},{"id":1481,"nodeType":"PlaceholderStatement","src":"2050:1:6"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1482,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"2061:4:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data storage pointer"}},"id":1484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2066:4:6","memberName":"exit","nodeType":"MemberAccess","referencedDeclaration":1449,"src":"2061:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Data_$1399_storage_ptr_$returns$__$attached_to$_t_struct$_Data_$1399_storage_ptr_$","typeString":"function (struct ReentrancyGuardLib.Data storage pointer)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2061:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1486,"nodeType":"ExpressionStatement","src":"2061:11:6"}]},"documentation":{"id":1471,"nodeType":"StructuredDocumentation","src":"1798:155:6","text":" @dev Modifier that ensures a function can only be called once in the same block.\n @param self The storage reference to the struct."},"id":1488,"name":"nonReentrant","nameLocation":"1967:12:6","nodeType":"ModifierDefinition","parameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1474,"mutability":"mutable","name":"self","nameLocation":"2012:4:6","nodeType":"VariableDeclaration","scope":1488,"src":"1980:36:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data"},"typeName":{"id":1473,"nodeType":"UserDefinedTypeName","pathNode":{"id":1472,"name":"ReentrancyGuardLib.Data","nameLocations":["1980:18:6","1999:4:6"],"nodeType":"IdentifierPath","referencedDeclaration":1399,"src":"1980:23:6"},"referencedDeclaration":1399,"src":"1980:23:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data"}},"visibility":"internal"}],"src":"1979:38:6"},"src":"1958:121:6","virtual":false,"visibility":"internal"},{"body":{"id":1504,"nodeType":"Block","src":"2322:87:6","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1494,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"2336:4:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data storage pointer"}},"id":1495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2341:5:6","memberName":"check","nodeType":"MemberAccess","referencedDeclaration":1464,"src":"2336:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Data_$1399_storage_ptr_$returns$_t_bool_$attached_to$_t_struct$_Data_$1399_storage_ptr_$","typeString":"function (struct ReentrancyGuardLib.Data storage pointer) view returns (bool)"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2336:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1502,"nodeType":"IfStatement","src":"2332:59:6","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1497,"name":"ReentrancyGuardLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"2357:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ReentrancyGuardLib_$1465_$","typeString":"type(library ReentrancyGuardLib)"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2376:13:6","memberName":"ReentrantCall","nodeType":"MemberAccess","referencedDeclaration":1390,"src":"2357:32:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1501,"nodeType":"RevertStatement","src":"2350:41:6"}},{"id":1503,"nodeType":"PlaceholderStatement","src":"2401:1:6"}]},"documentation":{"id":1489,"nodeType":"StructuredDocumentation","src":"2085:168:6","text":" @dev Modifier that ensures a function can only be called once in the same block in view mode.\n @param self The storage reference to the struct."},"id":1505,"name":"nonReentrantView","nameLocation":"2267:16:6","nodeType":"ModifierDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1492,"mutability":"mutable","name":"self","nameLocation":"2316:4:6","nodeType":"VariableDeclaration","scope":1505,"src":"2284:36:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data"},"typeName":{"id":1491,"nodeType":"UserDefinedTypeName","pathNode":{"id":1490,"name":"ReentrancyGuardLib.Data","nameLocations":["2284:18:6","2303:4:6"],"nodeType":"IdentifierPath","referencedDeclaration":1399,"src":"2284:23:6"},"referencedDeclaration":1399,"src":"2284:23:6","typeDescriptions":{"typeIdentifier":"t_struct$_Data_$1399_storage_ptr","typeString":"struct ReentrancyGuardLib.Data"}},"visibility":"internal"}],"src":"2283:38:6"},"src":"2258:151:6","virtual":false,"visibility":"internal"}],"scope":1507,"src":"1705:706:6","usedErrors":[]}],"src":"33:2379:6"},"id":6},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2218],"ERC20":[2093],"IERC20":[2171],"IERC20Metadata":[2196]},"id":2094,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1508,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1509,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2094,"sourceUnit":2172,"src":"130:22:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1510,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2094,"sourceUnit":2197,"src":"153:41:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1511,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2094,"sourceUnit":2219,"src":"195:33:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1513,"name":"Context","nameLocations":["1550:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2218,"src":"1550:7:7"},"id":1514,"nodeType":"InheritanceSpecifier","src":"1550:7:7"},{"baseName":{"id":1515,"name":"IERC20","nameLocations":["1559:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":2171,"src":"1559:6:7"},"id":1516,"nodeType":"InheritanceSpecifier","src":"1559:6:7"},{"baseName":{"id":1517,"name":"IERC20Metadata","nameLocations":["1567:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":2196,"src":"1567:14:7"},"id":1518,"nodeType":"InheritanceSpecifier","src":"1567:14:7"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"230:1301:7","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":2093,"linearizedBaseContracts":[2093,2196,2171,2218],"name":"ERC20","nameLocation":"1541:5:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1522,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:7","nodeType":"VariableDeclaration","scope":2093,"src":"1588:45:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1521,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1519,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1520,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1528,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:7","nodeType":"VariableDeclaration","scope":2093,"src":"1640:67:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1527,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1523,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1526,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1524,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1525,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1530,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:7","nodeType":"VariableDeclaration","scope":2093,"src":"1714:28:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1532,"mutability":"mutable","name":"_name","nameLocation":"1764:5:7","nodeType":"VariableDeclaration","scope":2093,"src":"1749:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1531,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1534,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:7","nodeType":"VariableDeclaration","scope":2093,"src":"1775:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1533,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1550,"nodeType":"Block","src":"2036:57:7","statements":[{"expression":{"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1542,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"2046:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1543,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"2054:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1545,"nodeType":"ExpressionStatement","src":"2046:13:7"},{"expression":{"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1546,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"2069:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1547,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"2079:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1549,"nodeType":"ExpressionStatement","src":"2069:17:7"}]},"documentation":{"id":1535,"nodeType":"StructuredDocumentation","src":"1804:171:7","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1551,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"mutability":"mutable","name":"name_","nameLocation":"2006:5:7","nodeType":"VariableDeclaration","scope":1551,"src":"1992:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1536,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1539,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:7","nodeType":"VariableDeclaration","scope":1551,"src":"2013:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1538,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:7"},"returnParameters":{"id":1541,"nodeType":"ParameterList","parameters":[],"src":"2036:0:7"},"scope":2093,"src":"1980:113:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2183],"body":{"id":1560,"nodeType":"Block","src":"2227:29:7","statements":[{"expression":{"id":1558,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"2244:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1557,"id":1559,"nodeType":"Return","src":"2237:12:7"}]},"documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"2099:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1561,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:7","nodeType":"FunctionDefinition","overrides":{"id":1554,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:7"},"parameters":{"id":1553,"nodeType":"ParameterList","parameters":[],"src":"2171:2:7"},"returnParameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1561,"src":"2212:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1555,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:7"},"scope":2093,"src":"2158:98:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2189],"body":{"id":1570,"nodeType":"Block","src":"2440:31:7","statements":[{"expression":{"id":1568,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"2457:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1567,"id":1569,"nodeType":"Return","src":"2450:14:7"}]},"documentation":{"id":1562,"nodeType":"StructuredDocumentation","src":"2262:102:7","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1571,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:7","nodeType":"FunctionDefinition","overrides":{"id":1564,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:7"},"parameters":{"id":1563,"nodeType":"ParameterList","parameters":[],"src":"2384:2:7"},"returnParameters":{"id":1567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1571,"src":"2425:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1565,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:7"},"scope":2093,"src":"2369:102:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2195],"body":{"id":1580,"nodeType":"Block","src":"3169:26:7","statements":[{"expression":{"hexValue":"3138","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1577,"id":1579,"nodeType":"Return","src":"3179:9:7"}]},"documentation":{"id":1572,"nodeType":"StructuredDocumentation","src":"2477:622:7","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1581,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:7","nodeType":"FunctionDefinition","overrides":{"id":1574,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:7"},"parameters":{"id":1573,"nodeType":"ParameterList","parameters":[],"src":"3121:2:7"},"returnParameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1581,"src":"3162:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1575,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:7"},"scope":2093,"src":"3104:91:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2120],"body":{"id":1590,"nodeType":"Block","src":"3325:36:7","statements":[{"expression":{"id":1588,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"3342:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1587,"id":1589,"nodeType":"Return","src":"3335:19:7"}]},"documentation":{"id":1582,"nodeType":"StructuredDocumentation","src":"3201:49:7","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1591,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:7","nodeType":"FunctionDefinition","overrides":{"id":1584,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:7"},"parameters":{"id":1583,"nodeType":"ParameterList","parameters":[],"src":"3275:2:7"},"returnParameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1591,"src":"3316:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:7"},"scope":2093,"src":"3255:106:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2128],"body":{"id":1604,"nodeType":"Block","src":"3502:42:7","statements":[{"expression":{"baseExpression":{"id":1600,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"3519:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1602,"indexExpression":{"id":1601,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"3529:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1599,"id":1603,"nodeType":"Return","src":"3512:25:7"}]},"documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"3367:47:7","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1605,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:7","nodeType":"FunctionDefinition","overrides":{"id":1596,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:7"},"parameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"account","nameLocation":"3446:7:7","nodeType":"VariableDeclaration","scope":1605,"src":"3438:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1593,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:7"},"returnParameters":{"id":1599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1605,"src":"3493:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1597,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:7"},"scope":2093,"src":"3419:125:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2138],"body":{"id":1629,"nodeType":"Block","src":"3825:104:7","statements":[{"assignments":[1617],"declarations":[{"constant":false,"id":1617,"mutability":"mutable","name":"owner","nameLocation":"3843:5:7","nodeType":"VariableDeclaration","scope":1629,"src":"3835:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1616,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1620,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1618,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"3851:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:7"},{"expression":{"arguments":[{"id":1622,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"3883:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1623,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"3890:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1624,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"3894:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1621,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"3873:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1626,"nodeType":"ExpressionStatement","src":"3873:28:7"},{"expression":{"hexValue":"74727565","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1615,"id":1628,"nodeType":"Return","src":"3911:11:7"}]},"documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"3550:185:7","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:7","nodeType":"FunctionDefinition","overrides":{"id":1612,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:7"},"parameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1608,"mutability":"mutable","name":"to","nameLocation":"3766:2:7","nodeType":"VariableDeclaration","scope":1630,"src":"3758:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1607,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1610,"mutability":"mutable","name":"amount","nameLocation":"3778:6:7","nodeType":"VariableDeclaration","scope":1630,"src":"3770:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1609,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:7"},"returnParameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1630,"src":"3819:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1613,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:7"},"scope":2093,"src":"3740:189:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2148],"body":{"id":1647,"nodeType":"Block","src":"4085:51:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1641,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"4102:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1643,"indexExpression":{"id":1642,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"4114:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1645,"indexExpression":{"id":1644,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"4121:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1640,"id":1646,"nodeType":"Return","src":"4095:34:7"}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"3935:47:7","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1648,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:7","nodeType":"FunctionDefinition","overrides":{"id":1637,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:7"},"parameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"owner","nameLocation":"4014:5:7","nodeType":"VariableDeclaration","scope":1648,"src":"4006:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1632,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"spender","nameLocation":"4029:7:7","nodeType":"VariableDeclaration","scope":1648,"src":"4021:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1634,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:7"},"returnParameters":{"id":1640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1648,"src":"4076:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1638,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:7"},"scope":2093,"src":"3987:149:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2158],"body":{"id":1672,"nodeType":"Block","src":"4533:108:7","statements":[{"assignments":[1660],"declarations":[{"constant":false,"id":1660,"mutability":"mutable","name":"owner","nameLocation":"4551:5:7","nodeType":"VariableDeclaration","scope":1672,"src":"4543:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1659,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1663,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1661,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"4559:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:7"},{"expression":{"arguments":[{"id":1665,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"4590:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1666,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"4597:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1667,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"4606:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1664,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"4581:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1669,"nodeType":"ExpressionStatement","src":"4581:32:7"},{"expression":{"hexValue":"74727565","id":1670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1658,"id":1671,"nodeType":"Return","src":"4623:11:7"}]},"documentation":{"id":1649,"nodeType":"StructuredDocumentation","src":"4142:297:7","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1673,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:7","nodeType":"FunctionDefinition","overrides":{"id":1655,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:7"},"parameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1651,"mutability":"mutable","name":"spender","nameLocation":"4469:7:7","nodeType":"VariableDeclaration","scope":1673,"src":"4461:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1650,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1653,"mutability":"mutable","name":"amount","nameLocation":"4486:6:7","nodeType":"VariableDeclaration","scope":1673,"src":"4478:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1652,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:7"},"returnParameters":{"id":1658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1673,"src":"4527:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1656,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:7"},"scope":2093,"src":"4444:197:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2170],"body":{"id":1705,"nodeType":"Block","src":"5306:153:7","statements":[{"assignments":[1687],"declarations":[{"constant":false,"id":1687,"mutability":"mutable","name":"spender","nameLocation":"5324:7:7","nodeType":"VariableDeclaration","scope":1705,"src":"5316:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1686,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1690,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1688,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"5334:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:7"},{"expression":{"arguments":[{"id":1692,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"5372:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1693,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"5378:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1694,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"5387:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1691,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"5356:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1696,"nodeType":"ExpressionStatement","src":"5356:38:7"},{"expression":{"arguments":[{"id":1698,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"5414:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1699,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"5420:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1700,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"5424:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1697,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"5404:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1702,"nodeType":"ExpressionStatement","src":"5404:27:7"},{"expression":{"hexValue":"74727565","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1685,"id":1704,"nodeType":"Return","src":"5441:11:7"}]},"documentation":{"id":1674,"nodeType":"StructuredDocumentation","src":"4647:551:7","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":1706,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:7","nodeType":"FunctionDefinition","overrides":{"id":1682,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:7"},"parameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"from","nameLocation":"5233:4:7","nodeType":"VariableDeclaration","scope":1706,"src":"5225:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1675,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1678,"mutability":"mutable","name":"to","nameLocation":"5247:2:7","nodeType":"VariableDeclaration","scope":1706,"src":"5239:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1677,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1680,"mutability":"mutable","name":"amount","nameLocation":"5259:6:7","nodeType":"VariableDeclaration","scope":1706,"src":"5251:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:7"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"5300:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1683,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:7"},"scope":2093,"src":"5203:256:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1734,"nodeType":"Block","src":"5948:140:7","statements":[{"assignments":[1717],"declarations":[{"constant":false,"id":1717,"mutability":"mutable","name":"owner","nameLocation":"5966:5:7","nodeType":"VariableDeclaration","scope":1734,"src":"5958:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1716,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1720,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1718,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"5974:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:7"},{"expression":{"arguments":[{"id":1722,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"6005:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1723,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"6012:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1725,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"6031:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1726,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"6038:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1724,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"6021:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1728,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"6049:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1721,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"5996:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1731,"nodeType":"ExpressionStatement","src":"5996:64:7"},{"expression":{"hexValue":"74727565","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1715,"id":1733,"nodeType":"Return","src":"6070:11:7"}]},"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"5465:384:7","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":1735,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:7","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"spender","nameLocation":"5889:7:7","nodeType":"VariableDeclaration","scope":1735,"src":"5881:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1708,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:7","nodeType":"VariableDeclaration","scope":1735,"src":"5898:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1710,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:7"},"returnParameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1735,"src":"5942:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1713,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:7"},"scope":2093,"src":"5854:234:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1775,"nodeType":"Block","src":"6674:328:7","statements":[{"assignments":[1746],"declarations":[{"constant":false,"id":1746,"mutability":"mutable","name":"owner","nameLocation":"6692:5:7","nodeType":"VariableDeclaration","scope":1775,"src":"6684:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1745,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1749,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1747,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"6700:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:7"},{"assignments":[1751],"declarations":[{"constant":false,"id":1751,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:7","nodeType":"VariableDeclaration","scope":1775,"src":"6722:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1756,"initialValue":{"arguments":[{"id":1753,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"6759:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1754,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"6766:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1752,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"6749:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1758,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"6792:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1759,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"6812:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":1757,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1763,"nodeType":"ExpressionStatement","src":"6784:85:7"},{"id":1772,"nodeType":"UncheckedBlock","src":"6879:95:7","statements":[{"expression":{"arguments":[{"id":1765,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"6912:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1766,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"6919:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1767,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"6928:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1768,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"6947:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1764,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"6903:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1771,"nodeType":"ExpressionStatement","src":"6903:60:7"}]},{"expression":{"hexValue":"74727565","id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1744,"id":1774,"nodeType":"Return","src":"6984:11:7"}]},"documentation":{"id":1736,"nodeType":"StructuredDocumentation","src":"6094:476:7","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":1776,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:7","nodeType":"FunctionDefinition","parameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"spender","nameLocation":"6610:7:7","nodeType":"VariableDeclaration","scope":1776,"src":"6602:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1737,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:7","nodeType":"VariableDeclaration","scope":1776,"src":"6619:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1739,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:7"},"returnParameters":{"id":1744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1776,"src":"6668:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1742,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:7"},"scope":2093,"src":"6575:427:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1852,"nodeType":"Block","src":"7534:710:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1787,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"7552:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1788,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:7","typeDescriptions":{}}},"id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":1786,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1795,"nodeType":"ExpressionStatement","src":"7544:68:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1797,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"7630:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1798,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:7","typeDescriptions":{}}},"id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":1796,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1805,"nodeType":"ExpressionStatement","src":"7622:64:7"},{"expression":{"arguments":[{"id":1807,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"7718:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1808,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"7724:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1809,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"7728:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1806,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"7697:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1811,"nodeType":"ExpressionStatement","src":"7697:38:7"},{"assignments":[1813],"declarations":[{"constant":false,"id":1813,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:7","nodeType":"VariableDeclaration","scope":1852,"src":"7746:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1812,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1817,"initialValue":{"baseExpression":{"id":1814,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"7768:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1816,"indexExpression":{"id":1815,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"7778:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1819,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"7801:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1820,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"7816:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":1818,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1824,"nodeType":"ExpressionStatement","src":"7793:72:7"},{"id":1839,"nodeType":"UncheckedBlock","src":"7875:273:7","statements":[{"expression":{"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1825,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"7899:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1827,"indexExpression":{"id":1826,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"7909:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1828,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"7917:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1829,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"7931:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1832,"nodeType":"ExpressionStatement","src":"7899:38:7"},{"expression":{"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1833,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"8114:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1835,"indexExpression":{"id":1834,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"8124:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1836,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"8131:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1838,"nodeType":"ExpressionStatement","src":"8114:23:7"}]},{"eventCall":{"arguments":[{"id":1841,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"8172:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1842,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"8178:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1843,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"8182:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1840,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"8163:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1845,"nodeType":"EmitStatement","src":"8158:31:7"},{"expression":{"arguments":[{"id":1847,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"8220:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1848,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"8226:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1849,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"8230:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1846,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"8200:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1851,"nodeType":"ExpressionStatement","src":"8200:37:7"}]},"documentation":{"id":1777,"nodeType":"StructuredDocumentation","src":"7008:443:7","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":1853,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:7","nodeType":"FunctionDefinition","parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"from","nameLocation":"7483:4:7","nodeType":"VariableDeclaration","scope":1853,"src":"7475:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1778,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"to","nameLocation":"7497:2:7","nodeType":"VariableDeclaration","scope":1853,"src":"7489:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1780,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"amount","nameLocation":"7509:6:7","nodeType":"VariableDeclaration","scope":1853,"src":"7501:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:7"},"returnParameters":{"id":1785,"nodeType":"ParameterList","parameters":[],"src":"7534:0:7"},"scope":2093,"src":"7456:788:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1909,"nodeType":"Block","src":"8585:470:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1862,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"8603:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1863,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:7","typeDescriptions":{}}},"id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":1861,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1870,"nodeType":"ExpressionStatement","src":"8595:65:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1872,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:7","typeDescriptions":{}}},"id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1876,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"8704:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1877,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"8713:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1871,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"8671:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1879,"nodeType":"ExpressionStatement","src":"8671:49:7"},{"expression":{"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1880,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"8731:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1881,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"8747:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1883,"nodeType":"ExpressionStatement","src":"8731:22:7"},{"id":1890,"nodeType":"UncheckedBlock","src":"8763:175:7","statements":[{"expression":{"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1884,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"8899:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1886,"indexExpression":{"id":1885,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"8909:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1887,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"8921:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1889,"nodeType":"ExpressionStatement","src":"8899:28:7"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1892,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:7","typeDescriptions":{}}},"id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1896,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"8973:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1897,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"8982:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1891,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"8952:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1899,"nodeType":"EmitStatement","src":"8947:42:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1901,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:7","typeDescriptions":{}}},"id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1905,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"9032:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1906,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"9041:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1900,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"9000:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1908,"nodeType":"ExpressionStatement","src":"9000:48:7"}]},"documentation":{"id":1854,"nodeType":"StructuredDocumentation","src":"8250:265:7","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":1910,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:7","nodeType":"FunctionDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"account","nameLocation":"8543:7:7","nodeType":"VariableDeclaration","scope":1910,"src":"8535:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1855,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"amount","nameLocation":"8560:6:7","nodeType":"VariableDeclaration","scope":1910,"src":"8552:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:7"},"returnParameters":{"id":1860,"nodeType":"ParameterList","parameters":[],"src":"8585:0:7"},"scope":2093,"src":"8520:535:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1981,"nodeType":"Block","src":"9440:594:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1919,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"9458:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1920,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:7","typeDescriptions":{}}},"id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":1918,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1927,"nodeType":"ExpressionStatement","src":"9450:67:7"},{"expression":{"arguments":[{"id":1929,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"9549:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1930,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:7","typeDescriptions":{}}},"id":1933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1934,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"9570:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1928,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"9528:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1936,"nodeType":"ExpressionStatement","src":"9528:49:7"},{"assignments":[1938],"declarations":[{"constant":false,"id":1938,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:7","nodeType":"VariableDeclaration","scope":1981,"src":"9588:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1942,"initialValue":{"baseExpression":{"id":1939,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"9613:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1941,"indexExpression":{"id":1940,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"9623:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1944,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"9649:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1945,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"9667:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":1943,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1949,"nodeType":"ExpressionStatement","src":"9641:71:7"},{"id":1962,"nodeType":"UncheckedBlock","src":"9722:194:7","statements":[{"expression":{"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1950,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"9746:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1952,"indexExpression":{"id":1951,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"9756:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1953,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"9767:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1954,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"9784:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1957,"nodeType":"ExpressionStatement","src":"9746:44:7"},{"expression":{"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1958,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"9883:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1959,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"9899:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1961,"nodeType":"ExpressionStatement","src":"9883:22:7"}]},{"eventCall":{"arguments":[{"id":1964,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"9940:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1965,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:7","typeDescriptions":{}}},"id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1969,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"9961:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1963,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"9931:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1971,"nodeType":"EmitStatement","src":"9926:42:7"},{"expression":{"arguments":[{"id":1973,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"9999:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1974,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:7","typeDescriptions":{}}},"id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1978,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"10020:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1972,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"9979:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1980,"nodeType":"ExpressionStatement","src":"9979:48:7"}]},"documentation":{"id":1911,"nodeType":"StructuredDocumentation","src":"9061:309:7","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":1982,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:7","nodeType":"FunctionDefinition","parameters":{"id":1916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1913,"mutability":"mutable","name":"account","nameLocation":"9398:7:7","nodeType":"VariableDeclaration","scope":1982,"src":"9390:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1912,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1915,"mutability":"mutable","name":"amount","nameLocation":"9415:6:7","nodeType":"VariableDeclaration","scope":1982,"src":"9407:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:7"},"returnParameters":{"id":1917,"nodeType":"ParameterList","parameters":[],"src":"9440:0:7"},"scope":2093,"src":"9375:659:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2026,"nodeType":"Block","src":"10540:257:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1993,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"10558:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1994,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:7","typeDescriptions":{}}},"id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1992,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2001,"nodeType":"ExpressionStatement","src":"10550:68:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2003,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"10636:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2004,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:7","typeDescriptions":{}}},"id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":2002,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2011,"nodeType":"ExpressionStatement","src":"10628:68:7"},{"expression":{"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2012,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"10707:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2015,"indexExpression":{"id":2013,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"10719:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2016,"indexExpression":{"id":2014,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"10726:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2017,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"10737:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2019,"nodeType":"ExpressionStatement","src":"10707:36:7"},{"eventCall":{"arguments":[{"id":2021,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"10767:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2022,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"10774:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2023,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"10783:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2020,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"10758:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2025,"nodeType":"EmitStatement","src":"10753:37:7"}]},"documentation":{"id":1983,"nodeType":"StructuredDocumentation","src":"10040:412:7","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":2027,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:7","nodeType":"FunctionDefinition","parameters":{"id":1990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"owner","nameLocation":"10483:5:7","nodeType":"VariableDeclaration","scope":2027,"src":"10475:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1984,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1987,"mutability":"mutable","name":"spender","nameLocation":"10498:7:7","nodeType":"VariableDeclaration","scope":2027,"src":"10490:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1986,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1989,"mutability":"mutable","name":"amount","nameLocation":"10515:6:7","nodeType":"VariableDeclaration","scope":2027,"src":"10507:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1988,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:7"},"returnParameters":{"id":1991,"nodeType":"ParameterList","parameters":[],"src":"10540:0:7"},"scope":2093,"src":"10457:340:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2069,"nodeType":"Block","src":"11168:321:7","statements":[{"assignments":[2038],"declarations":[{"constant":false,"id":2038,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:7","nodeType":"VariableDeclaration","scope":2069,"src":"11178:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2043,"initialValue":{"arguments":[{"id":2040,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"11215:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2041,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"11222:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2039,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"11205:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2044,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"11244:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":2047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2046,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2045,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:7","memberName":"max","nodeType":"MemberAccess","src":"11264:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2068,"nodeType":"IfStatement","src":"11240:243:7","trueBody":{"id":2067,"nodeType":"Block","src":"11283:200:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2052,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"11305:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2053,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"11325:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":2051,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2057,"nodeType":"ExpressionStatement","src":"11297:68:7"},{"id":2066,"nodeType":"UncheckedBlock","src":"11379:94:7","statements":[{"expression":{"arguments":[{"id":2059,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"11416:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2060,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"11423:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2061,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"11432:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2062,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"11451:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2058,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"11407:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2065,"nodeType":"ExpressionStatement","src":"11407:51:7"}]}]}}]},"documentation":{"id":2028,"nodeType":"StructuredDocumentation","src":"10803:270:7","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":2070,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:7","nodeType":"FunctionDefinition","parameters":{"id":2035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"owner","nameLocation":"11111:5:7","nodeType":"VariableDeclaration","scope":2070,"src":"11103:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2029,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2032,"mutability":"mutable","name":"spender","nameLocation":"11126:7:7","nodeType":"VariableDeclaration","scope":2070,"src":"11118:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2031,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2034,"mutability":"mutable","name":"amount","nameLocation":"11143:6:7","nodeType":"VariableDeclaration","scope":2070,"src":"11135:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2033,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:7"},"returnParameters":{"id":2036,"nodeType":"ParameterList","parameters":[],"src":"11168:0:7"},"scope":2093,"src":"11078:411:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2080,"nodeType":"Block","src":"12162:2:7","statements":[]},"documentation":{"id":2071,"nodeType":"StructuredDocumentation","src":"11495:573:7","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2081,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:7","nodeType":"FunctionDefinition","parameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"from","nameLocation":"12111:4:7","nodeType":"VariableDeclaration","scope":2081,"src":"12103:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2072,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2075,"mutability":"mutable","name":"to","nameLocation":"12125:2:7","nodeType":"VariableDeclaration","scope":2081,"src":"12117:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2074,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2077,"mutability":"mutable","name":"amount","nameLocation":"12137:6:7","nodeType":"VariableDeclaration","scope":2081,"src":"12129:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2076,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:7"},"returnParameters":{"id":2079,"nodeType":"ParameterList","parameters":[],"src":"12162:0:7"},"scope":2093,"src":"12073:91:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2091,"nodeType":"Block","src":"12840:2:7","statements":[]},"documentation":{"id":2082,"nodeType":"StructuredDocumentation","src":"12170:577:7","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2092,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:7","nodeType":"FunctionDefinition","parameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"mutability":"mutable","name":"from","nameLocation":"12789:4:7","nodeType":"VariableDeclaration","scope":2092,"src":"12781:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2083,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2086,"mutability":"mutable","name":"to","nameLocation":"12803:2:7","nodeType":"VariableDeclaration","scope":2092,"src":"12795:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2085,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2088,"mutability":"mutable","name":"amount","nameLocation":"12815:6:7","nodeType":"VariableDeclaration","scope":2092,"src":"12807:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2087,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:7"},"returnParameters":{"id":2090,"nodeType":"ParameterList","parameters":[],"src":"12840:0:7"},"scope":2093,"src":"12752:90:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2094,"src":"1532:11312:7","usedErrors":[]}],"src":"105:12740:7"},"id":7},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2171]},"id":2172,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2095,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2096,"nodeType":"StructuredDocumentation","src":"131:70:8","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":2171,"linearizedBaseContracts":[2171],"name":"IERC20","nameLocation":"212:6:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2097,"nodeType":"StructuredDocumentation","src":"225:158:8","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2105,"name":"Transfer","nameLocation":"394:8:8","nodeType":"EventDefinition","parameters":{"id":2104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:8","nodeType":"VariableDeclaration","scope":2105,"src":"403:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2098,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2101,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:8","nodeType":"VariableDeclaration","scope":2105,"src":"425:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2100,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2103,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:8","nodeType":"VariableDeclaration","scope":2105,"src":"445:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2102,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:8"},"src":"388:72:8"},{"anonymous":false,"documentation":{"id":2106,"nodeType":"StructuredDocumentation","src":"466:148:8","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2114,"name":"Approval","nameLocation":"625:8:8","nodeType":"EventDefinition","parameters":{"id":2113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2108,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:8","nodeType":"VariableDeclaration","scope":2114,"src":"634:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2107,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2110,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:8","nodeType":"VariableDeclaration","scope":2114,"src":"657:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2109,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2112,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:8","nodeType":"VariableDeclaration","scope":2114,"src":"682:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2111,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:8"},"src":"619:78:8"},{"documentation":{"id":2115,"nodeType":"StructuredDocumentation","src":"703:66:8","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":2120,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:8","nodeType":"FunctionDefinition","parameters":{"id":2116,"nodeType":"ParameterList","parameters":[],"src":"794:2:8"},"returnParameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2120,"src":"820:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:8"},"scope":2171,"src":"774:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2121,"nodeType":"StructuredDocumentation","src":"835:72:8","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":2128,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:8","nodeType":"FunctionDefinition","parameters":{"id":2124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2123,"mutability":"mutable","name":"account","nameLocation":"939:7:8","nodeType":"VariableDeclaration","scope":2128,"src":"931:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2122,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:8"},"returnParameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2128,"src":"971:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2125,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:8"},"scope":2171,"src":"912:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2129,"nodeType":"StructuredDocumentation","src":"986:202:8","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2138,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:8","nodeType":"FunctionDefinition","parameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"to","nameLocation":"1219:2:8","nodeType":"VariableDeclaration","scope":2138,"src":"1211:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2130,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2133,"mutability":"mutable","name":"amount","nameLocation":"1231:6:8","nodeType":"VariableDeclaration","scope":2138,"src":"1223:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2132,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:8"},"returnParameters":{"id":2137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2138,"src":"1257:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2135,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:8"},"scope":2171,"src":"1193:70:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2139,"nodeType":"StructuredDocumentation","src":"1269:264:8","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2148,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:8","nodeType":"FunctionDefinition","parameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"owner","nameLocation":"1565:5:8","nodeType":"VariableDeclaration","scope":2148,"src":"1557:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2140,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2143,"mutability":"mutable","name":"spender","nameLocation":"1580:7:8","nodeType":"VariableDeclaration","scope":2148,"src":"1572:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2142,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:8"},"returnParameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2148,"src":"1612:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:8"},"scope":2171,"src":"1538:83:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2149,"nodeType":"StructuredDocumentation","src":"1627:642:8","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2158,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:8","nodeType":"FunctionDefinition","parameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2151,"mutability":"mutable","name":"spender","nameLocation":"2299:7:8","nodeType":"VariableDeclaration","scope":2158,"src":"2291:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2150,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2153,"mutability":"mutable","name":"amount","nameLocation":"2316:6:8","nodeType":"VariableDeclaration","scope":2158,"src":"2308:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2152,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:8"},"returnParameters":{"id":2157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2158,"src":"2342:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2155,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:8"},"scope":2171,"src":"2274:74:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2159,"nodeType":"StructuredDocumentation","src":"2354:287:8","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2170,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:8","nodeType":"FunctionDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"from","nameLocation":"2676:4:8","nodeType":"VariableDeclaration","scope":2170,"src":"2668:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2160,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2163,"mutability":"mutable","name":"to","nameLocation":"2690:2:8","nodeType":"VariableDeclaration","scope":2170,"src":"2682:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2162,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"amount","nameLocation":"2702:6:8","nodeType":"VariableDeclaration","scope":2170,"src":"2694:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2164,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:8"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2170,"src":"2728:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2167,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:8"},"scope":2171,"src":"2646:88:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2172,"src":"202:2534:8","usedErrors":[]}],"src":"106:2631:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2171],"IERC20Metadata":[2196]},"id":2197,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2173,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2174,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2197,"sourceUnit":2172,"src":"135:23:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2176,"name":"IERC20","nameLocations":["305:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2171,"src":"305:6:9"},"id":2177,"nodeType":"InheritanceSpecifier","src":"305:6:9"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2175,"nodeType":"StructuredDocumentation","src":"160:116:9","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":2196,"linearizedBaseContracts":[2196,2171],"name":"IERC20Metadata","nameLocation":"287:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2178,"nodeType":"StructuredDocumentation","src":"318:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2183,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:9","nodeType":"FunctionDefinition","parameters":{"id":2179,"nodeType":"ParameterList","parameters":[],"src":"390:2:9"},"returnParameters":{"id":2182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2183,"src":"416:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2180,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:9"},"scope":2196,"src":"377:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"437:56:9","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2189,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:9","nodeType":"FunctionDefinition","parameters":{"id":2185,"nodeType":"ParameterList","parameters":[],"src":"513:2:9"},"returnParameters":{"id":2188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2189,"src":"539:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2186,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:9"},"scope":2196,"src":"498:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2190,"nodeType":"StructuredDocumentation","src":"560:65:9","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2195,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:9","nodeType":"FunctionDefinition","parameters":{"id":2191,"nodeType":"ParameterList","parameters":[],"src":"647:2:9"},"returnParameters":{"id":2194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2195,"src":"673:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2192,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:9"},"scope":2196,"src":"630:50:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2197,"src":"277:405:9","usedErrors":[]}],"src":"110:573:9"},"id":9},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2218]},"id":2219,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2198,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2199,"nodeType":"StructuredDocumentation","src":"111:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2218,"linearizedBaseContracts":[2218],"name":"Context","nameLocation":"626:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":2207,"nodeType":"Block","src":"702:34:10","statements":[{"expression":{"expression":{"id":2204,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:10","memberName":"sender","nodeType":"MemberAccess","src":"719:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2203,"id":2206,"nodeType":"Return","src":"712:17:10"}]},"id":2208,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:10","nodeType":"FunctionDefinition","parameters":{"id":2200,"nodeType":"ParameterList","parameters":[],"src":"659:2:10"},"returnParameters":{"id":2203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2208,"src":"693:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2201,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:10"},"scope":2218,"src":"640:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2216,"nodeType":"Block","src":"809:32:10","statements":[{"expression":{"expression":{"id":2213,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:10","memberName":"data","nodeType":"MemberAccess","src":"826:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2212,"id":2215,"nodeType":"Return","src":"819:15:10"}]},"id":2217,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:10","nodeType":"FunctionDefinition","parameters":{"id":2209,"nodeType":"ParameterList","parameters":[],"src":"759:2:10"},"returnParameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2217,"src":"793:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2210,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:10"},"scope":2218,"src":"742:99:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2219,"src":"608:235:10","usedErrors":[]}],"src":"86:758:10"},"id":10},"contracts/CompanyStock.sol":{"ast":{"absolutePath":"contracts/CompanyStock.sol","exportedSymbols":{"CompanyStock":[2309],"ERC20":[2093],"ERC20Plugins":[1208],"ICompanyStock":[2513],"IERC20":[2171]},"id":2310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2220,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":2223,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2310,"sourceUnit":2094,"src":"58:78:11","symbolAliases":[{"foreign":{"id":2221,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"67:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2222,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"75:5:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@1inch/token-plugins/contracts/ERC20Plugins.sol","file":"@1inch/token-plugins/contracts/ERC20Plugins.sol","id":2225,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2310,"sourceUnit":1209,"src":"137:79:11","symbolAliases":[{"foreign":{"id":2224,"name":"ERC20Plugins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"146:12:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/ICompanyStock.sol","file":"./interfaces/ICompanyStock.sol","id":2227,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2310,"sourceUnit":2514,"src":"217:63:11","symbolAliases":[{"foreign":{"id":2226,"name":"ICompanyStock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"226:13:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2229,"name":"ICompanyStock","nameLocations":["467:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":2513,"src":"467:13:11"},"id":2230,"nodeType":"InheritanceSpecifier","src":"467:13:11"},{"baseName":{"id":2231,"name":"ERC20Plugins","nameLocations":["482:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1208,"src":"482:12:11"},"id":2232,"nodeType":"InheritanceSpecifier","src":"482:12:11"}],"canonicalName":"CompanyStock","contractDependencies":[],"contractKind":"contract","documentation":{"id":2228,"nodeType":"StructuredDocumentation","src":"282:160:11","text":"@title CompanyStock\n @dev CompanyStock is a specialized version of an ERC20 token with additional functionalities that acts as the stock in the company."},"fullyImplemented":true,"id":2309,"linearizedBaseContracts":[2309,1208,1506,2513,1364,2093,2196,2171,2218],"name":"CompanyStock","nameLocation":"451:12:11","nodeType":"ContractDefinition","nodes":[{"errorSelector":"b6559712","id":2234,"name":"NotOwnerPlugin","nameLocation":"505:14:11","nodeType":"ErrorDefinition","parameters":{"id":2233,"nodeType":"ParameterList","parameters":[],"src":"519:2:11"},"src":"499:23:11"},{"constant":false,"documentation":{"id":2235,"nodeType":"StructuredDocumentation","src":"526:44:11","text":"@notice The address of the owner plugin."},"functionSelector":"8e371bef","id":2237,"mutability":"immutable","name":"ownerPlugin","nameLocation":"598:11:11","nodeType":"VariableDeclaration","scope":2309,"src":"573:36:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2236,"name":"address","nodeType":"ElementaryTypeName","src":"573:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":2249,"nodeType":"Block","src":"712:72:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2240,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"722:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"726:6:11","memberName":"sender","nodeType":"MemberAccess","src":"722:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2242,"name":"ownerPlugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"736:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"722:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2247,"nodeType":"IfStatement","src":"718:54:11","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2244,"name":"NotOwnerPlugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"756:14:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"756:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2246,"nodeType":"RevertStatement","src":"749:23:11"}},{"id":2248,"nodeType":"PlaceholderStatement","src":"778:1:11"}]},"documentation":{"id":2238,"nodeType":"StructuredDocumentation","src":"614:68:11","text":"@dev Throws if called by any account other than the ownerPlugin."},"id":2250,"name":"onlyOwnerPlugin","nameLocation":"694:15:11","nodeType":"ModifierDefinition","parameters":{"id":2239,"nodeType":"ParameterList","parameters":[],"src":"709:2:11"},"src":"685:99:11","virtual":false,"visibility":"internal"},{"body":{"id":2275,"nodeType":"Block","src":"1209:35:11","statements":[{"expression":{"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2270,"name":"ownerPlugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"1215:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2271,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1229:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1233:6:11","memberName":"sender","nodeType":"MemberAccess","src":"1229:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1215:24:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2274,"nodeType":"ExpressionStatement","src":"1215:24:11"}]},"documentation":{"id":2251,"nodeType":"StructuredDocumentation","src":"788:215:11","text":"@param name_ The name of the token.\n @param symbol_ The symbol of the token.\n @param maxUserPlugins_ The maximum number of user plugins.\n @param pluginCallGasLimit_ The gas limit for plugin calls."},"id":2276,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2262,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"1142:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2263,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"1149:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":2264,"kind":"baseConstructorSpecifier","modifierName":{"id":2261,"name":"ERC20","nameLocations":["1136:5:11"],"nodeType":"IdentifierPath","referencedDeclaration":2093,"src":"1136:5:11"},"nodeType":"ModifierInvocation","src":"1136:21:11"},{"arguments":[{"id":2266,"name":"maxUserPlugins_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"1171:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2267,"name":"pluginCallGasLimit_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"1188:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2268,"kind":"baseConstructorSpecifier","modifierName":{"id":2265,"name":"ERC20Plugins","nameLocations":["1158:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1208,"src":"1158:12:11"},"nodeType":"ModifierInvocation","src":"1158:50:11"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"name_","nameLocation":"1037:5:11","nodeType":"VariableDeclaration","scope":2276,"src":"1023:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2252,"name":"string","nodeType":"ElementaryTypeName","src":"1023:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2255,"mutability":"mutable","name":"symbol_","nameLocation":"1062:7:11","nodeType":"VariableDeclaration","scope":2276,"src":"1048:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2254,"name":"string","nodeType":"ElementaryTypeName","src":"1048:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2257,"mutability":"mutable","name":"maxUserPlugins_","nameLocation":"1083:15:11","nodeType":"VariableDeclaration","scope":2276,"src":"1075:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2256,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2259,"mutability":"mutable","name":"pluginCallGasLimit_","nameLocation":"1112:19:11","nodeType":"VariableDeclaration","scope":2276,"src":"1104:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2258,"name":"uint256","nodeType":"ElementaryTypeName","src":"1104:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:118:11"},"returnParameters":{"id":2269,"nodeType":"ParameterList","parameters":[],"src":"1209:0:11"},"scope":2309,"src":"1006:238:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2505],"body":{"id":2291,"nodeType":"Block","src":"1495:33:11","statements":[{"expression":{"arguments":[{"id":2287,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"1507:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2288,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"1516:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2286,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"1501:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1501:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2290,"nodeType":"ExpressionStatement","src":"1501:22:11"}]},"documentation":{"id":2277,"nodeType":"StructuredDocumentation","src":"1248:172:11","text":"@notice Mint tokens.\n @dev Only callable by the owner plugin.\n @param account The address to mint tokens to.\n @param amount The amount of tokens to mint."},"functionSelector":"40c10f19","id":2292,"implemented":true,"kind":"function","modifiers":[{"id":2284,"kind":"modifierInvocation","modifierName":{"id":2283,"name":"onlyOwnerPlugin","nameLocations":["1479:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":2250,"src":"1479:15:11"},"nodeType":"ModifierInvocation","src":"1479:15:11"}],"name":"mint","nameLocation":"1432:4:11","nodeType":"FunctionDefinition","parameters":{"id":2282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2279,"mutability":"mutable","name":"account","nameLocation":"1445:7:11","nodeType":"VariableDeclaration","scope":2292,"src":"1437:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2278,"name":"address","nodeType":"ElementaryTypeName","src":"1437:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2281,"mutability":"mutable","name":"amount","nameLocation":"1462:6:11","nodeType":"VariableDeclaration","scope":2292,"src":"1454:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2280,"name":"uint256","nodeType":"ElementaryTypeName","src":"1454:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1436:33:11"},"returnParameters":{"id":2285,"nodeType":"ParameterList","parameters":[],"src":"1495:0:11"},"scope":2309,"src":"1423:105:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2512],"body":{"id":2307,"nodeType":"Block","src":"1781:33:11","statements":[{"expression":{"arguments":[{"id":2303,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"1793:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2304,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"1802:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2302,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"1787:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1787:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2306,"nodeType":"ExpressionStatement","src":"1787:22:11"}]},"documentation":{"id":2293,"nodeType":"StructuredDocumentation","src":"1532:174:11","text":"@notice Burn tokens.\n @dev Only callable by the owner plugin.\n @param account The address to burn tokens from.\n @param amount The amount of tokens to burn."},"functionSelector":"9dc29fac","id":2308,"implemented":true,"kind":"function","modifiers":[{"id":2300,"kind":"modifierInvocation","modifierName":{"id":2299,"name":"onlyOwnerPlugin","nameLocations":["1765:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":2250,"src":"1765:15:11"},"nodeType":"ModifierInvocation","src":"1765:15:11"}],"name":"burn","nameLocation":"1718:4:11","nodeType":"FunctionDefinition","parameters":{"id":2298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"account","nameLocation":"1731:7:11","nodeType":"VariableDeclaration","scope":2308,"src":"1723:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2294,"name":"address","nodeType":"ElementaryTypeName","src":"1723:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2297,"mutability":"mutable","name":"amount","nameLocation":"1748:6:11","nodeType":"VariableDeclaration","scope":2308,"src":"1740:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1740:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1722:33:11"},"returnParameters":{"id":2301,"nodeType":"ParameterList","parameters":[],"src":"1781:0:11"},"scope":2309,"src":"1709:105:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2310,"src":"442:1374:11","usedErrors":[4,6,8,601,603,605,607,609,611,1390,2234]}],"src":"33:1784:11"},"id":11},"contracts/DividendDispatcherPlugin.sol":{"ast":{"absolutePath":"contracts/DividendDispatcherPlugin.sol","exportedSymbols":{"DividendDispatcherPlugin":[2492],"ERC20":[2093],"IDividendDispatcherPlugin":[2529],"IERC20":[2171],"IERC20Plugins":[1364],"Plugin":[1280]},"id":2493,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2311,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":2314,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2493,"sourceUnit":2094,"src":"58:78:12","symbolAliases":[{"foreign":{"id":2312,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"67:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2313,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"75:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@1inch/token-plugins/contracts/Plugin.sol","file":"@1inch/token-plugins/contracts/Plugin.sol","id":2316,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2493,"sourceUnit":1281,"src":"137:67:12","symbolAliases":[{"foreign":{"id":2315,"name":"Plugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"146:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol","file":"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol","id":2318,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2493,"sourceUnit":1365,"src":"205:92:12","symbolAliases":[{"foreign":{"id":2317,"name":"IERC20Plugins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"214:13:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDividendDispatcherPlugin.sol","file":"./interfaces/IDividendDispatcherPlugin.sol","id":2320,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2493,"sourceUnit":2530,"src":"298:87:12","symbolAliases":[{"foreign":{"id":2319,"name":"IDividendDispatcherPlugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"307:25:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2321,"name":"IDividendDispatcherPlugin","nameLocations":["424:25:12"],"nodeType":"IdentifierPath","referencedDeclaration":2529,"src":"424:25:12"},"id":2322,"nodeType":"InheritanceSpecifier","src":"424:25:12"},{"baseName":{"id":2323,"name":"Plugin","nameLocations":["451:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1280,"src":"451:6:12"},"id":2324,"nodeType":"InheritanceSpecifier","src":"451:6:12"},{"baseName":{"id":2325,"name":"ERC20","nameLocations":["459:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":2093,"src":"459:5:12"},"id":2326,"nodeType":"InheritanceSpecifier","src":"459:5:12"}],"canonicalName":"DividendDispatcherPlugin","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2492,"linearizedBaseContracts":[2492,2093,2196,1280,2529,2171,2218,1384],"name":"DividendDispatcherPlugin","nameLocation":"396:24:12","nodeType":"ContractDefinition","nodes":[{"errorSelector":"eb60c2c4","id":2328,"name":"ApproveDisabled","nameLocation":"475:15:12","nodeType":"ErrorDefinition","parameters":{"id":2327,"nodeType":"ParameterList","parameters":[],"src":"490:2:12"},"src":"469:24:12"},{"errorSelector":"a24e573d","id":2330,"name":"TransferDisabled","nameLocation":"502:16:12","nodeType":"ErrorDefinition","parameters":{"id":2329,"nodeType":"ParameterList","parameters":[],"src":"518:2:12"},"src":"496:25:12"},{"constant":false,"functionSelector":"fbfa941f","id":2334,"mutability":"mutable","name":"ledger","nameLocation":"560:6:12","nodeType":"VariableDeclaration","scope":2492,"src":"525:41:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2333,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2331,"name":"address","nodeType":"ElementaryTypeName","src":"533:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"525:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"544:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"a87430ba","id":2338,"mutability":"mutable","name":"users","nameLocation":"602:5:12","nodeType":"VariableDeclaration","scope":2492,"src":"570:37:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2337,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2335,"name":"address","nodeType":"ElementaryTypeName","src":"578:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"570:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2336,"name":"bool","nodeType":"ElementaryTypeName","src":"589:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"body":{"id":2355,"nodeType":"Block","src":"727:2:12","statements":[]},"id":2356,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2348,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"696:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2349,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"703:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":2350,"kind":"baseConstructorSpecifier","modifierName":{"id":2347,"name":"ERC20","nameLocations":["690:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":2093,"src":"690:5:12"},"nodeType":"ModifierInvocation","src":"690:21:12"},{"arguments":[{"id":2352,"name":"token_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"719:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Plugins_$1364","typeString":"contract IERC20Plugins"}}],"id":2353,"kind":"baseConstructorSpecifier","modifierName":{"id":2351,"name":"Plugin","nameLocations":["712:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1280,"src":"712:6:12"},"nodeType":"ModifierInvocation","src":"712:14:12"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2340,"mutability":"mutable","name":"name_","nameLocation":"638:5:12","nodeType":"VariableDeclaration","scope":2356,"src":"624:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2339,"name":"string","nodeType":"ElementaryTypeName","src":"624:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2342,"mutability":"mutable","name":"symbol_","nameLocation":"659:7:12","nodeType":"VariableDeclaration","scope":2356,"src":"645:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2341,"name":"string","nodeType":"ElementaryTypeName","src":"645:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2345,"mutability":"mutable","name":"token_","nameLocation":"682:6:12","nodeType":"VariableDeclaration","scope":2356,"src":"668:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Plugins_$1364","typeString":"contract IERC20Plugins"},"typeName":{"id":2344,"nodeType":"UserDefinedTypeName","pathNode":{"id":2343,"name":"IERC20Plugins","nameLocations":["668:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":1364,"src":"668:13:12"},"referencedDeclaration":1364,"src":"668:13:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Plugins_$1364","typeString":"contract IERC20Plugins"}},"visibility":"internal"}],"src":"623:66:12"},"returnParameters":{"id":2354,"nodeType":"ParameterList","parameters":[],"src":"727:0:12"},"scope":2492,"src":"612:117:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2528],"body":{"id":2375,"nodeType":"Block","src":"784:92:12","statements":[{"assignments":[2362],"declarations":[{"constant":false,"id":2362,"mutability":"mutable","name":"balance","nameLocation":"798:7:12","nodeType":"VariableDeclaration","scope":2375,"src":"790:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2361,"name":"uint256","nodeType":"ElementaryTypeName","src":"790:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2374,"initialValue":{"arguments":[{"arguments":[{"id":2369,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"853:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_DividendDispatcherPlugin_$2492","typeString":"contract DividendDispatcherPlugin"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DividendDispatcherPlugin_$2492","typeString":"contract DividendDispatcherPlugin"}],"id":2368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"845:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2367,"name":"address","nodeType":"ElementaryTypeName","src":"845:7:12","typeDescriptions":{}}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"845:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2371,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"860:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"864:6:12","memberName":"sender","nodeType":"MemberAccess","src":"860:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2364,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"822:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Plugins_$1364","typeString":"contract IERC20Plugins"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Plugins_$1364","typeString":"contract IERC20Plugins"}],"id":2363,"name":"IERC20Plugins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"808:13:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Plugins_$1364_$","typeString":"type(contract IERC20Plugins)"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"808:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Plugins_$1364","typeString":"contract IERC20Plugins"}},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"829:15:12","memberName":"pluginBalanceOf","nodeType":"MemberAccess","referencedDeclaration":1350,"src":"808:36:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"808:63:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"790:81:12"}]},"functionSelector":"2515994e","id":2376,"implemented":true,"kind":"function","modifiers":[],"name":"payDividend","nameLocation":"742:11:12","nodeType":"FunctionDefinition","parameters":{"id":2359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2358,"mutability":"mutable","name":"value","nameLocation":"762:5:12","nodeType":"VariableDeclaration","scope":2376,"src":"754:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2357,"name":"uint256","nodeType":"ElementaryTypeName","src":"754:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"753:15:12"},"returnParameters":{"id":2360,"nodeType":"ParameterList","parameters":[],"src":"784:0:12"},"scope":2492,"src":"733:143:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1279],"body":{"id":2412,"nodeType":"Block","src":"965:126:12","statements":[{"expression":{"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2386,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"971:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2388,"indexExpression":{"id":2387,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"977:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"971:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"983:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"971:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2391,"nodeType":"ExpressionStatement","src":"971:16:12"},{"expression":{"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2392,"name":"ledger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"1012:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2394,"indexExpression":{"id":2393,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"1019:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1012:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2395,"name":"ledger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"1027:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2397,"indexExpression":{"id":2396,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"1034:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1027:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2398,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"1042:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1027:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1012:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2401,"nodeType":"ExpressionStatement","src":"1012:36:12"},{"expression":{"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2402,"name":"ledger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"1054:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2404,"indexExpression":{"id":2403,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"1061:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1054:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2405,"name":"ledger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"1067:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2407,"indexExpression":{"id":2406,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"1074:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1067:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2408,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"1080:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1067:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1054:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2411,"nodeType":"ExpressionStatement","src":"1054:32:12"}]},"id":2413,"implemented":true,"kind":"function","modifiers":[],"name":"_updateBalances","nameLocation":"889:15:12","nodeType":"FunctionDefinition","overrides":{"id":2384,"nodeType":"OverrideSpecifier","overrides":[],"src":"956:8:12"},"parameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"from","nameLocation":"913:4:12","nodeType":"VariableDeclaration","scope":2413,"src":"905:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2377,"name":"address","nodeType":"ElementaryTypeName","src":"905:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2380,"mutability":"mutable","name":"to","nameLocation":"927:2:12","nodeType":"VariableDeclaration","scope":2413,"src":"919:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2379,"name":"address","nodeType":"ElementaryTypeName","src":"919:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2382,"mutability":"mutable","name":"amount","nameLocation":"939:6:12","nodeType":"VariableDeclaration","scope":2413,"src":"931:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2381,"name":"uint256","nodeType":"ElementaryTypeName","src":"931:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"904:42:12"},"returnParameters":{"id":2385,"nodeType":"ParameterList","parameters":[],"src":"965:0:12"},"scope":2492,"src":"880:211:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1630,2138],"body":{"id":2428,"nodeType":"Block","src":"1225:36:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2425,"name":"TransferDisabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"1238:16:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1238:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2427,"nodeType":"RevertStatement","src":"1231:25:12"}]},"functionSelector":"a9059cbb","id":2429,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1125:8:12","nodeType":"FunctionDefinition","overrides":{"id":2421,"nodeType":"OverrideSpecifier","overrides":[{"id":2419,"name":"IERC20","nameLocations":["1195:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":2171,"src":"1195:6:12"},{"id":2420,"name":"ERC20","nameLocations":["1203:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":2093,"src":"1203:5:12"}],"src":"1186:23:12"},"parameters":{"id":2418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2429,"src":"1134:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2414,"name":"address","nodeType":"ElementaryTypeName","src":"1134:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2429,"src":"1152:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2416,"name":"uint256","nodeType":"ElementaryTypeName","src":"1152:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1133:40:12"},"returnParameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2429,"src":"1219:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2422,"name":"bool","nodeType":"ElementaryTypeName","src":"1219:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1218:6:12"},"scope":2492,"src":"1116:145:12","stateMutability":"pure","virtual":false,"visibility":"public"},{"baseFunctions":[1706,2170],"body":{"id":2446,"nodeType":"Block","src":"1398:36:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2443,"name":"TransferDisabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"1411:16:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1411:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2445,"nodeType":"RevertStatement","src":"1404:25:12"}]},"functionSelector":"23b872dd","id":2447,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1274:12:12","nodeType":"FunctionDefinition","overrides":{"id":2439,"nodeType":"OverrideSpecifier","overrides":[{"id":2437,"name":"IERC20","nameLocations":["1368:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":2171,"src":"1368:6:12"},{"id":2438,"name":"ERC20","nameLocations":["1376:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":2093,"src":"1376:5:12"}],"src":"1359:23:12"},"parameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2447,"src":"1287:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2430,"name":"address","nodeType":"ElementaryTypeName","src":"1287:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2447,"src":"1307:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2432,"name":"address","nodeType":"ElementaryTypeName","src":"1307:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2447,"src":"1325:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"1325:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1286:60:12"},"returnParameters":{"id":2442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2447,"src":"1392:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2440,"name":"bool","nodeType":"ElementaryTypeName","src":"1392:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1391:6:12"},"scope":2492,"src":"1265:169:12","stateMutability":"pure","virtual":false,"visibility":"public"},{"baseFunctions":[1673,2158],"body":{"id":2462,"nodeType":"Block","src":"1551:35:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2459,"name":"ApproveDisabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"1564:15:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2461,"nodeType":"RevertStatement","src":"1557:24:12"}]},"functionSelector":"095ea7b3","id":2463,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1447:7:12","nodeType":"FunctionDefinition","overrides":{"id":2455,"nodeType":"OverrideSpecifier","overrides":[{"id":2453,"name":"ERC20","nameLocations":["1521:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":2093,"src":"1521:5:12"},{"id":2454,"name":"IERC20","nameLocations":["1528:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":2171,"src":"1528:6:12"}],"src":"1512:23:12"},"parameters":{"id":2452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2463,"src":"1455:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2448,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2463,"src":"1478:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2450,"name":"uint256","nodeType":"ElementaryTypeName","src":"1478:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1454:45:12"},"returnParameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2463,"src":"1545:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2456,"name":"bool","nodeType":"ElementaryTypeName","src":"1545:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1544:6:12"},"scope":2492,"src":"1438:148:12","stateMutability":"pure","virtual":false,"visibility":"public"},{"baseFunctions":[1735],"body":{"id":2476,"nodeType":"Block","src":"1702:35:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2473,"name":"ApproveDisabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"1715:15:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1715:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2475,"nodeType":"RevertStatement","src":"1708:24:12"}]},"functionSelector":"39509351","id":2477,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"1599:17:12","nodeType":"FunctionDefinition","overrides":{"id":2469,"nodeType":"OverrideSpecifier","overrides":[],"src":"1678:8:12"},"parameters":{"id":2468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2477,"src":"1617:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2464,"name":"address","nodeType":"ElementaryTypeName","src":"1617:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2477,"src":"1640:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2466,"name":"uint256","nodeType":"ElementaryTypeName","src":"1640:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1616:49:12"},"returnParameters":{"id":2472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2477,"src":"1696:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2470,"name":"bool","nodeType":"ElementaryTypeName","src":"1696:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1695:6:12"},"scope":2492,"src":"1590:147:12","stateMutability":"pure","virtual":false,"visibility":"public"},{"baseFunctions":[1776],"body":{"id":2490,"nodeType":"Block","src":"1858:35:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2487,"name":"ApproveDisabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"1871:15:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1871:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2489,"nodeType":"RevertStatement","src":"1864:24:12"}]},"functionSelector":"a457c2d7","id":2491,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"1750:17:12","nodeType":"FunctionDefinition","overrides":{"id":2483,"nodeType":"OverrideSpecifier","overrides":[],"src":"1834:8:12"},"parameters":{"id":2482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2491,"src":"1768:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2478,"name":"address","nodeType":"ElementaryTypeName","src":"1768:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2491,"src":"1791:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1767:54:12"},"returnParameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2491,"src":"1852:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2484,"name":"bool","nodeType":"ElementaryTypeName","src":"1852:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1851:6:12"},"scope":2492,"src":"1741:152:12","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":2493,"src":"387:1508:12","usedErrors":[1219,2328,2330]}],"src":"33:1863:12"},"id":12},"contracts/interfaces/ICompanyStock.sol":{"ast":{"absolutePath":"contracts/interfaces/ICompanyStock.sol","exportedSymbols":{"ICompanyStock":[2513],"IERC20Plugins":[1364]},"id":2514,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2494,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:13"},{"absolutePath":"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol","file":"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol","id":2496,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2514,"sourceUnit":1365,"src":"58:92:13","symbolAliases":[{"foreign":{"id":2495,"name":"IERC20Plugins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"67:13:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2497,"name":"IERC20Plugins","nameLocations":["179:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1364,"src":"179:13:13"},"id":2498,"nodeType":"InheritanceSpecifier","src":"179:13:13"}],"canonicalName":"ICompanyStock","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2513,"linearizedBaseContracts":[2513,1364,2171],"name":"ICompanyStock","nameLocation":"162:13:13","nodeType":"ContractDefinition","nodes":[{"functionSelector":"40c10f19","id":2505,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"208:4:13","nodeType":"FunctionDefinition","parameters":{"id":2503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2500,"mutability":"mutable","name":"account","nameLocation":"221:7:13","nodeType":"VariableDeclaration","scope":2505,"src":"213:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2499,"name":"address","nodeType":"ElementaryTypeName","src":"213:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2502,"mutability":"mutable","name":"amount","nameLocation":"238:6:13","nodeType":"VariableDeclaration","scope":2505,"src":"230:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"230:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"212:33:13"},"returnParameters":{"id":2504,"nodeType":"ParameterList","parameters":[],"src":"254:0:13"},"scope":2513,"src":"199:56:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9dc29fac","id":2512,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"282:4:13","nodeType":"FunctionDefinition","parameters":{"id":2510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"account","nameLocation":"295:7:13","nodeType":"VariableDeclaration","scope":2512,"src":"287:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2506,"name":"address","nodeType":"ElementaryTypeName","src":"287:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2509,"mutability":"mutable","name":"amount","nameLocation":"312:6:13","nodeType":"VariableDeclaration","scope":2512,"src":"304:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2508,"name":"uint256","nodeType":"ElementaryTypeName","src":"304:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"286:33:13"},"returnParameters":{"id":2511,"nodeType":"ParameterList","parameters":[],"src":"328:0:13"},"scope":2513,"src":"273:56:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2514,"src":"152:192:13","usedErrors":[]}],"src":"33:312:13"},"id":13},"contracts/interfaces/IDividendDispatcherPlugin.sol":{"ast":{"absolutePath":"contracts/interfaces/IDividendDispatcherPlugin.sol","exportedSymbols":{"IDividendDispatcherPlugin":[2529],"IERC20":[2171],"IPlugin":[1384]},"id":2530,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2515,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2517,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2530,"sourceUnit":2172,"src":"58:72:14","symbolAliases":[{"foreign":{"id":2516,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"67:6:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@1inch/token-plugins/contracts/interfaces/IPlugin.sol","file":"@1inch/token-plugins/contracts/interfaces/IPlugin.sol","id":2519,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2530,"sourceUnit":1385,"src":"131:80:14","symbolAliases":[{"foreign":{"id":2518,"name":"IPlugin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"140:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2520,"name":"IPlugin","nameLocations":["252:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":1384,"src":"252:7:14"},"id":2521,"nodeType":"InheritanceSpecifier","src":"252:7:14"},{"baseName":{"id":2522,"name":"IERC20","nameLocations":["261:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2171,"src":"261:6:14"},"id":2523,"nodeType":"InheritanceSpecifier","src":"261:6:14"}],"canonicalName":"IDividendDispatcherPlugin","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2529,"linearizedBaseContracts":[2529,2171,1384],"name":"IDividendDispatcherPlugin","nameLocation":"223:25:14","nodeType":"ContractDefinition","nodes":[{"functionSelector":"2515994e","id":2528,"implemented":false,"kind":"function","modifiers":[],"name":"payDividend","nameLocation":"281:11:14","nodeType":"FunctionDefinition","parameters":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2525,"mutability":"mutable","name":"value","nameLocation":"301:5:14","nodeType":"VariableDeclaration","scope":2528,"src":"293:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"293:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"292:15:14"},"returnParameters":{"id":2527,"nodeType":"ParameterList","parameters":[],"src":"316:0:14"},"scope":2529,"src":"272:45:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2530,"src":"213:106:14","usedErrors":[]}],"src":"33:287:14"},"id":14}},"contracts":{"@1inch/solidity-utils/contracts/libraries/AddressArray.sol":{"AddressArray":{"abi":[{"inputs":[],"name":"IndexOutOfBounds","type":"error"},{"inputs":[],"name":"OutputArrayTooSmall","type":"error"},{"inputs":[],"name":"PopFromEmptyArray","type":"error"}],"devdoc":{"kind":"dev","methods":{},"title":"Library that implements address array on mapping, stores array length at 0 index.","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212208924afe1fe3a5e1be4edd1be62c50c292cabe306832e8013028f81f04527e3c464736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0x24 0xAF 0xE1 INVALID GASPRICE 0x5E SHL 0xE4 0xED 0xD1 0xBE PUSH3 0xC50C29 0x2C 0xAB 0xE3 MOD DUP4 0x2E DUP1 SGT MUL DUP16 DUP2 CREATE GASLIMIT 0x27 0xE3 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"151:3081:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212208924afe1fe3a5e1be4edd1be62c50c292cabe306832e8013028f81f04527e3c464736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0x24 0xAF 0xE1 INVALID GASPRICE 0x5E SHL 0xE4 0xED 0xD1 0xBE PUSH3 0xC50C29 0x2C 0xAB 0xE3 MOD DUP4 0x2E DUP1 SGT MUL DUP16 DUP2 CREATE GASLIMIT 0x27 0xE3 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"151:3081:0:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_get(struct AddressArray.Data storage pointer,address[] memory,uint256)":"infinite","at(struct AddressArray.Data storage pointer,uint256)":"infinite","get(struct AddressArray.Data storage pointer)":"infinite","get(struct AddressArray.Data storage pointer,address[] memory)":"infinite","length(struct AddressArray.Data storage pointer)":"infinite","pop(struct AddressArray.Data storage pointer)":"infinite","push(struct AddressArray.Data storage pointer,address)":"infinite","set(struct AddressArray.Data storage pointer,uint256,address)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IndexOutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutputArrayTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PopFromEmptyArray\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Library that implements address array on mapping, stores array length at 0 index.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@1inch/solidity-utils/contracts/libraries/AddressArray.sol\":\"AddressArray\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@1inch/solidity-utils/contracts/libraries/AddressArray.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title Library that implements address array on mapping, stores array length at 0 index.\\nlibrary AddressArray {\\n    error IndexOutOfBounds();\\n    error PopFromEmptyArray();\\n    error OutputArrayTooSmall();\\n\\n    /// @dev Data struct containing raw mapping.\\n    struct Data {\\n        mapping(uint256 => uint256) _raw;\\n    }\\n\\n    /// @dev Length of array.\\n    function length(Data storage self) internal view returns (uint256) {\\n        return self._raw[0] >> 160;\\n    }\\n\\n    /// @dev Returns data item from `self` storage at `i`.\\n    function at(Data storage self, uint256 i) internal view returns (address) {\\n        return address(uint160(self._raw[i]));\\n    }\\n\\n    /// @dev Returns list of addresses from storage `self`.\\n    function get(Data storage self) internal view returns (address[] memory arr) {\\n        uint256 lengthAndFirst = self._raw[0];\\n        arr = new address[](lengthAndFirst >> 160);\\n        _get(self, arr, lengthAndFirst);\\n    }\\n\\n    /// @dev Puts list of addresses from `self` storage into `output` array.\\n    function get(Data storage self, address[] memory output) internal view returns (address[] memory) {\\n        return _get(self, output, self._raw[0]);\\n    }\\n\\n    function _get(\\n        Data storage self,\\n        address[] memory output,\\n        uint256 lengthAndFirst\\n    ) private view returns (address[] memory) {\\n        uint256 len = lengthAndFirst >> 160;\\n        if (len > output.length) revert OutputArrayTooSmall();\\n        if (len > 0) {\\n            output[0] = address(uint160(lengthAndFirst));\\n            unchecked {\\n                for (uint256 i = 1; i < len; i++) {\\n                    output[i] = address(uint160(self._raw[i]));\\n                }\\n            }\\n        }\\n        return output;\\n    }\\n\\n    /// @dev Array push back `account` operation on storage `self`.\\n    function push(Data storage self, address account) internal returns (uint256) {\\n        unchecked {\\n            uint256 lengthAndFirst = self._raw[0];\\n            uint256 len = lengthAndFirst >> 160;\\n            if (len == 0) {\\n                self._raw[0] = (1 << 160) + uint160(account);\\n            } else {\\n                self._raw[0] = lengthAndFirst + (1 << 160);\\n                self._raw[len] = uint160(account);\\n            }\\n            return len + 1;\\n        }\\n    }\\n\\n    /// @dev Array pop back operation for storage `self`.\\n    function pop(Data storage self) internal {\\n        unchecked {\\n            uint256 lengthAndFirst = self._raw[0];\\n            uint256 len = lengthAndFirst >> 160;\\n            if (len == 0) revert PopFromEmptyArray();\\n            self._raw[len - 1] = 0;\\n            if (len > 1) {\\n                self._raw[0] = lengthAndFirst - (1 << 160);\\n            }\\n        }\\n    }\\n\\n    /// @dev Set element for storage `self` at `index` to `account`.\\n    function set(\\n        Data storage self,\\n        uint256 index,\\n        address account\\n    ) internal {\\n        uint256 len = length(self);\\n        if (index >= len) revert IndexOutOfBounds();\\n\\n        if (index == 0) {\\n            self._raw[0] = (len << 160) | uint160(account);\\n        } else {\\n            self._raw[index] = uint160(account);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5a40948d30b475081eedecc42f33027a5d5cb03021dba7608595c0414252ec0c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@1inch/solidity-utils/contracts/libraries/AddressSet.sol":{"AddressSet":{"abi":[],"devdoc":{"kind":"dev","methods":{},"title":"Library that is using AddressArray library for AddressArray.Data and allows Set operations on address storage data: 1. add 2. remove 3. contains","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212204252ff36d8515be4b2a5793abf4d11f1be29038f4a5e03ca6de50da6b459278c64736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP MSTORE SELFDESTRUCT CALLDATASIZE 0xD8 MLOAD JUMPDEST 0xE4 0xB2 0xA5 PUSH26 0x3ABF4D11F1BE29038F4A5E03CA6DE50DA6B459278C64736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ","sourceMap":"260:1676:1:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212204252ff36d8515be4b2a5793abf4d11f1be29038f4a5e03ca6de50da6b459278c64736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP MSTORE SELFDESTRUCT CALLDATASIZE 0xD8 MLOAD JUMPDEST 0xE4 0xB2 0xA5 PUSH26 0x3ABF4D11F1BE29038F4A5E03CA6DE50DA6B459278C64736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ","sourceMap":"260:1676:1:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"add(struct AddressSet.Data storage pointer,address)":"infinite","at(struct AddressSet.Data storage pointer,uint256)":"infinite","contains(struct AddressSet.Data storage pointer,address)":"infinite","length(struct AddressSet.Data storage pointer)":"infinite","remove(struct AddressSet.Data storage pointer,address)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Library that is using AddressArray library for AddressArray.Data and allows Set operations on address storage data: 1. add 2. remove 3. contains\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@1inch/solidity-utils/contracts/libraries/AddressSet.sol\":\"AddressSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@1inch/solidity-utils/contracts/libraries/AddressArray.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title Library that implements address array on mapping, stores array length at 0 index.\\nlibrary AddressArray {\\n    error IndexOutOfBounds();\\n    error PopFromEmptyArray();\\n    error OutputArrayTooSmall();\\n\\n    /// @dev Data struct containing raw mapping.\\n    struct Data {\\n        mapping(uint256 => uint256) _raw;\\n    }\\n\\n    /// @dev Length of array.\\n    function length(Data storage self) internal view returns (uint256) {\\n        return self._raw[0] >> 160;\\n    }\\n\\n    /// @dev Returns data item from `self` storage at `i`.\\n    function at(Data storage self, uint256 i) internal view returns (address) {\\n        return address(uint160(self._raw[i]));\\n    }\\n\\n    /// @dev Returns list of addresses from storage `self`.\\n    function get(Data storage self) internal view returns (address[] memory arr) {\\n        uint256 lengthAndFirst = self._raw[0];\\n        arr = new address[](lengthAndFirst >> 160);\\n        _get(self, arr, lengthAndFirst);\\n    }\\n\\n    /// @dev Puts list of addresses from `self` storage into `output` array.\\n    function get(Data storage self, address[] memory output) internal view returns (address[] memory) {\\n        return _get(self, output, self._raw[0]);\\n    }\\n\\n    function _get(\\n        Data storage self,\\n        address[] memory output,\\n        uint256 lengthAndFirst\\n    ) private view returns (address[] memory) {\\n        uint256 len = lengthAndFirst >> 160;\\n        if (len > output.length) revert OutputArrayTooSmall();\\n        if (len > 0) {\\n            output[0] = address(uint160(lengthAndFirst));\\n            unchecked {\\n                for (uint256 i = 1; i < len; i++) {\\n                    output[i] = address(uint160(self._raw[i]));\\n                }\\n            }\\n        }\\n        return output;\\n    }\\n\\n    /// @dev Array push back `account` operation on storage `self`.\\n    function push(Data storage self, address account) internal returns (uint256) {\\n        unchecked {\\n            uint256 lengthAndFirst = self._raw[0];\\n            uint256 len = lengthAndFirst >> 160;\\n            if (len == 0) {\\n                self._raw[0] = (1 << 160) + uint160(account);\\n            } else {\\n                self._raw[0] = lengthAndFirst + (1 << 160);\\n                self._raw[len] = uint160(account);\\n            }\\n            return len + 1;\\n        }\\n    }\\n\\n    /// @dev Array pop back operation for storage `self`.\\n    function pop(Data storage self) internal {\\n        unchecked {\\n            uint256 lengthAndFirst = self._raw[0];\\n            uint256 len = lengthAndFirst >> 160;\\n            if (len == 0) revert PopFromEmptyArray();\\n            self._raw[len - 1] = 0;\\n            if (len > 1) {\\n                self._raw[0] = lengthAndFirst - (1 << 160);\\n            }\\n        }\\n    }\\n\\n    /// @dev Set element for storage `self` at `index` to `account`.\\n    function set(\\n        Data storage self,\\n        uint256 index,\\n        address account\\n    ) internal {\\n        uint256 len = length(self);\\n        if (index >= len) revert IndexOutOfBounds();\\n\\n        if (index == 0) {\\n            self._raw[0] = (len << 160) | uint160(account);\\n        } else {\\n            self._raw[index] = uint160(account);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5a40948d30b475081eedecc42f33027a5d5cb03021dba7608595c0414252ec0c\",\"license\":\"MIT\"},\"@1inch/solidity-utils/contracts/libraries/AddressSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./AddressArray.sol\\\";\\n\\n/** @title Library that is using AddressArray library for AddressArray.Data\\n * and allows Set operations on address storage data:\\n * 1. add\\n * 2. remove\\n * 3. contains\\n */\\nlibrary AddressSet {\\n    using AddressArray for AddressArray.Data;\\n\\n    /** @dev Data struct from AddressArray.Data items\\n     * and lookup mapping address => index in data array.\\n     */\\n    struct Data {\\n        AddressArray.Data items;\\n        mapping(address => uint256) lookup;\\n    }\\n\\n    /// @dev Length of data storage.\\n    function length(Data storage s) internal view returns (uint256) {\\n        return s.items.length();\\n    }\\n\\n    /// @dev Returns data item from `s` storage at `index`.\\n    function at(Data storage s, uint256 index) internal view returns (address) {\\n        return s.items.at(index);\\n    }\\n\\n    /// @dev Returns true if storage `s` has `item`.\\n    function contains(Data storage s, address item) internal view returns (bool) {\\n        return s.lookup[item] != 0;\\n    }\\n\\n    /// @dev Adds `item` into storage `s` and returns true if successful.\\n    function add(Data storage s, address item) internal returns (bool) {\\n        if (s.lookup[item] > 0) {\\n            return false;\\n        }\\n        s.lookup[item] = s.items.push(item);\\n        return true;\\n    }\\n\\n    /// @dev Removes `item` from storage `s` and returns true if successful.\\n    function remove(Data storage s, address item) internal returns (bool) {\\n        uint256 index = s.lookup[item];\\n        if (index == 0) {\\n            return false;\\n        }\\n        if (index < s.items.length()) {\\n            unchecked {\\n                address lastItem = s.items.at(s.items.length() - 1);\\n                s.items.set(index - 1, lastItem);\\n                s.lookup[lastItem] = index;\\n            }\\n        }\\n        s.items.pop();\\n        delete s.lookup[item];\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x1156b03a2cbd95e0bbf21f22ad8d630a73ec3679b70020dc6d7005bff62c06fd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@1inch/token-plugins/contracts/ERC20Plugins.sol":{"ERC20Plugins":{"abi":[{"inputs":[],"name":"IndexOutOfBounds","type":"error"},{"inputs":[],"name":"InvalidPluginAddress","type":"error"},{"inputs":[],"name":"InvalidTokenInPlugin","type":"error"},{"inputs":[],"name":"OutputArrayTooSmall","type":"error"},{"inputs":[],"name":"PluginAlreadyAdded","type":"error"},{"inputs":[],"name":"PluginNotFound","type":"error"},{"inputs":[],"name":"PluginsLimitReachedForAccount","type":"error"},{"inputs":[],"name":"PopFromEmptyArray","type":"error"},{"inputs":[],"name":"ReentrantCall","type":"error"},{"inputs":[],"name":"ZeroPluginsLimit","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"plugin","type":"address"}],"name":"PluginAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"plugin","type":"address"}],"name":"PluginRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"plugin","type":"address"}],"name":"addPlugin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"plugin","type":"address"}],"name":"hasPlugin","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"pluginAt","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"plugin","type":"address"},{"internalType":"address","name":"account","type":"address"}],"name":"pluginBalanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"plugins","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pluginsCallGasLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"pluginsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pluginsCountLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"removeAllPlugins","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"plugin","type":"address"}],"name":"removePlugin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"A base implementation of token contract to hold and manage plugins of an ERC20 token with a limited number of plugins per account. Each plugin is a contract that implements IPlugin interface (and/or derived from plugin).","errors":{"ReentrantCall()":[{"details":"Emit when reentrancy detected"}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"addPlugin(address)":{"details":"Adds a new plugin for the calling account.","params":{"plugin":"The address of the plugin to add."}},"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"Returns the balance of a given account.","params":{"account":"The address of the account."},"returns":{"_0":"balance The account balance."}},"constructor":{"details":"Constructor that sets the limit of plugins per account and the gas limit for a plugin call.","params":{"pluginCallGasLimit_":"The gas limit for a plugin call. Intended to prevent gas bomb attacks","pluginsLimit_":"The limit of plugins per account."}},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"hasPlugin(address,address)":{"details":"Returns whether an account has a specific plugin.","params":{"account":"The address of the account.","plugin":"The address of the plugin."},"returns":{"_0":"bool A boolean indicating whether the account has the specified plugin."}},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"pluginAt(address,uint256)":{"details":"Returns the address of a plugin at a specified index for a given account .","params":{"account":"The address of the account.","index":"The index of the plugin to retrieve."},"returns":{"_0":"plugin The address of the plugin."}},"pluginBalanceOf(address,address)":{"details":"Returns the balance of a given account if a specified plugin is added or zero.","params":{"account":"The address of the account to query.","plugin":"The address of the plugin to query."},"returns":{"_0":"balance The account balance if the specified plugin is added and zero otherwise."}},"plugins(address)":{"details":"Returns an array of all plugins owned by a given account.","params":{"account":"The address of the account to query."},"returns":{"_0":"plugins An array of plugin addresses."}},"pluginsCount(address)":{"details":"Returns the number of plugins registered for an account.","params":{"account":"The address of the account."},"returns":{"_0":"uint256 A number of plugins registered for the account."}},"removeAllPlugins()":{"details":"Removes all plugins for the calling account."},"removePlugin(address)":{"details":"Removes a plugin for the calling account.","params":{"plugin":"The address of the plugin to remove."}},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"stateVariables":{"pluginsCallGasLimit":{"details":"Gas limit for a single plugin call"},"pluginsCountLimit":{"details":"Limit of plugins per account"}},"title":"ERC20Plugins","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addPlugin(address)":"d8867fc8","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","hasPlugin(address,address)":"ed6edc82","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","pluginAt(address,uint256)":"1945f729","pluginBalanceOf(address,address)":"c1255635","plugins(address)":"4b12e643","pluginsCallGasLimit()":"7ee688cb","pluginsCount(address)":"61728134","pluginsCountLimit()":"53cea5df","removeAllPlugins()":"8b822d88","removePlugin(address)":"a4d95b64","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IndexOutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPluginAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenInPlugin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutputArrayTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PluginAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PluginNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PluginsLimitReachedForAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PopFromEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroPluginsLimit\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"}],\"name\":\"PluginAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"}],\"name\":\"PluginRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"}],\"name\":\"addPlugin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"}],\"name\":\"hasPlugin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"pluginAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"pluginBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"plugins\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pluginsCallGasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"pluginsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pluginsCountLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeAllPlugins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"}],\"name\":\"removePlugin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A base implementation of token contract to hold and manage plugins of an ERC20 token with a limited number of plugins per account. Each plugin is a contract that implements IPlugin interface (and/or derived from plugin).\",\"errors\":{\"ReentrantCall()\":[{\"details\":\"Emit when reentrancy detected\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addPlugin(address)\":{\"details\":\"Adds a new plugin for the calling account.\",\"params\":{\"plugin\":\"The address of the plugin to add.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the balance of a given account.\",\"params\":{\"account\":\"The address of the account.\"},\"returns\":{\"_0\":\"balance The account balance.\"}},\"constructor\":{\"details\":\"Constructor that sets the limit of plugins per account and the gas limit for a plugin call.\",\"params\":{\"pluginCallGasLimit_\":\"The gas limit for a plugin call. Intended to prevent gas bomb attacks\",\"pluginsLimit_\":\"The limit of plugins per account.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"hasPlugin(address,address)\":{\"details\":\"Returns whether an account has a specific plugin.\",\"params\":{\"account\":\"The address of the account.\",\"plugin\":\"The address of the plugin.\"},\"returns\":{\"_0\":\"bool A boolean indicating whether the account has the specified plugin.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pluginAt(address,uint256)\":{\"details\":\"Returns the address of a plugin at a specified index for a given account .\",\"params\":{\"account\":\"The address of the account.\",\"index\":\"The index of the plugin to retrieve.\"},\"returns\":{\"_0\":\"plugin The address of the plugin.\"}},\"pluginBalanceOf(address,address)\":{\"details\":\"Returns the balance of a given account if a specified plugin is added or zero.\",\"params\":{\"account\":\"The address of the account to query.\",\"plugin\":\"The address of the plugin to query.\"},\"returns\":{\"_0\":\"balance The account balance if the specified plugin is added and zero otherwise.\"}},\"plugins(address)\":{\"details\":\"Returns an array of all plugins owned by a given account.\",\"params\":{\"account\":\"The address of the account to query.\"},\"returns\":{\"_0\":\"plugins An array of plugin addresses.\"}},\"pluginsCount(address)\":{\"details\":\"Returns the number of plugins registered for an account.\",\"params\":{\"account\":\"The address of the account.\"},\"returns\":{\"_0\":\"uint256 A number of plugins registered for the account.\"}},\"removeAllPlugins()\":{\"details\":\"Removes all plugins for the calling account.\"},\"removePlugin(address)\":{\"details\":\"Removes a plugin for the calling account.\",\"params\":{\"plugin\":\"The address of the plugin to remove.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"pluginsCallGasLimit\":{\"details\":\"Gas limit for a single plugin call\"},\"pluginsCountLimit\":{\"details\":\"Limit of plugins per account\"}},\"title\":\"ERC20Plugins\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@1inch/token-plugins/contracts/ERC20Plugins.sol\":\"ERC20Plugins\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@1inch/solidity-utils/contracts/libraries/AddressArray.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title Library that implements address array on mapping, stores array length at 0 index.\\nlibrary AddressArray {\\n    error IndexOutOfBounds();\\n    error PopFromEmptyArray();\\n    error OutputArrayTooSmall();\\n\\n    /// @dev Data struct containing raw mapping.\\n    struct Data {\\n        mapping(uint256 => uint256) _raw;\\n    }\\n\\n    /// @dev Length of array.\\n    function length(Data storage self) internal view returns (uint256) {\\n        return self._raw[0] >> 160;\\n    }\\n\\n    /// @dev Returns data item from `self` storage at `i`.\\n    function at(Data storage self, uint256 i) internal view returns (address) {\\n        return address(uint160(self._raw[i]));\\n    }\\n\\n    /// @dev Returns list of addresses from storage `self`.\\n    function get(Data storage self) internal view returns (address[] memory arr) {\\n        uint256 lengthAndFirst = self._raw[0];\\n        arr = new address[](lengthAndFirst >> 160);\\n        _get(self, arr, lengthAndFirst);\\n    }\\n\\n    /// @dev Puts list of addresses from `self` storage into `output` array.\\n    function get(Data storage self, address[] memory output) internal view returns (address[] memory) {\\n        return _get(self, output, self._raw[0]);\\n    }\\n\\n    function _get(\\n        Data storage self,\\n        address[] memory output,\\n        uint256 lengthAndFirst\\n    ) private view returns (address[] memory) {\\n        uint256 len = lengthAndFirst >> 160;\\n        if (len > output.length) revert OutputArrayTooSmall();\\n        if (len > 0) {\\n            output[0] = address(uint160(lengthAndFirst));\\n            unchecked {\\n                for (uint256 i = 1; i < len; i++) {\\n                    output[i] = address(uint160(self._raw[i]));\\n                }\\n            }\\n        }\\n        return output;\\n    }\\n\\n    /// @dev Array push back `account` operation on storage `self`.\\n    function push(Data storage self, address account) internal returns (uint256) {\\n        unchecked {\\n            uint256 lengthAndFirst = self._raw[0];\\n            uint256 len = lengthAndFirst >> 160;\\n            if (len == 0) {\\n                self._raw[0] = (1 << 160) + uint160(account);\\n            } else {\\n                self._raw[0] = lengthAndFirst + (1 << 160);\\n                self._raw[len] = uint160(account);\\n            }\\n            return len + 1;\\n        }\\n    }\\n\\n    /// @dev Array pop back operation for storage `self`.\\n    function pop(Data storage self) internal {\\n        unchecked {\\n            uint256 lengthAndFirst = self._raw[0];\\n            uint256 len = lengthAndFirst >> 160;\\n            if (len == 0) revert PopFromEmptyArray();\\n            self._raw[len - 1] = 0;\\n            if (len > 1) {\\n                self._raw[0] = lengthAndFirst - (1 << 160);\\n            }\\n        }\\n    }\\n\\n    /// @dev Set element for storage `self` at `index` to `account`.\\n    function set(\\n        Data storage self,\\n        uint256 index,\\n        address account\\n    ) internal {\\n        uint256 len = length(self);\\n        if (index >= len) revert IndexOutOfBounds();\\n\\n        if (index == 0) {\\n            self._raw[0] = (len << 160) | uint160(account);\\n        } else {\\n            self._raw[index] = uint160(account);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5a40948d30b475081eedecc42f33027a5d5cb03021dba7608595c0414252ec0c\",\"license\":\"MIT\"},\"@1inch/solidity-utils/contracts/libraries/AddressSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./AddressArray.sol\\\";\\n\\n/** @title Library that is using AddressArray library for AddressArray.Data\\n * and allows Set operations on address storage data:\\n * 1. add\\n * 2. remove\\n * 3. contains\\n */\\nlibrary AddressSet {\\n    using AddressArray for AddressArray.Data;\\n\\n    /** @dev Data struct from AddressArray.Data items\\n     * and lookup mapping address => index in data array.\\n     */\\n    struct Data {\\n        AddressArray.Data items;\\n        mapping(address => uint256) lookup;\\n    }\\n\\n    /// @dev Length of data storage.\\n    function length(Data storage s) internal view returns (uint256) {\\n        return s.items.length();\\n    }\\n\\n    /// @dev Returns data item from `s` storage at `index`.\\n    function at(Data storage s, uint256 index) internal view returns (address) {\\n        return s.items.at(index);\\n    }\\n\\n    /// @dev Returns true if storage `s` has `item`.\\n    function contains(Data storage s, address item) internal view returns (bool) {\\n        return s.lookup[item] != 0;\\n    }\\n\\n    /// @dev Adds `item` into storage `s` and returns true if successful.\\n    function add(Data storage s, address item) internal returns (bool) {\\n        if (s.lookup[item] > 0) {\\n            return false;\\n        }\\n        s.lookup[item] = s.items.push(item);\\n        return true;\\n    }\\n\\n    /// @dev Removes `item` from storage `s` and returns true if successful.\\n    function remove(Data storage s, address item) internal returns (bool) {\\n        uint256 index = s.lookup[item];\\n        if (index == 0) {\\n            return false;\\n        }\\n        if (index < s.items.length()) {\\n            unchecked {\\n                address lastItem = s.items.at(s.items.length() - 1);\\n                s.items.set(index - 1, lastItem);\\n                s.lookup[lastItem] = index;\\n            }\\n        }\\n        s.items.pop();\\n        delete s.lookup[item];\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x1156b03a2cbd95e0bbf21f22ad8d630a73ec3679b70020dc6d7005bff62c06fd\",\"license\":\"MIT\"},\"@1inch/token-plugins/contracts/ERC20Plugins.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20, ERC20 } from \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport { AddressSet, AddressArray } from \\\"@1inch/solidity-utils/contracts/libraries/AddressSet.sol\\\";\\n\\nimport { IERC20Plugins } from \\\"./interfaces/IERC20Plugins.sol\\\";\\nimport { IPlugin } from \\\"./interfaces/IPlugin.sol\\\";\\nimport { ReentrancyGuardExt, ReentrancyGuardLib } from \\\"./libs/ReentrancyGuard.sol\\\";\\n\\n/**\\n * @title ERC20Plugins\\n * @dev A base implementation of token contract to hold and manage plugins of an ERC20 token with a limited number of plugins per account.\\n * Each plugin is a contract that implements IPlugin interface (and/or derived from plugin).\\n */\\nabstract contract ERC20Plugins is ERC20, IERC20Plugins, ReentrancyGuardExt {\\n    using AddressSet for AddressSet.Data;\\n    using AddressArray for AddressArray.Data;\\n    using ReentrancyGuardLib for ReentrancyGuardLib.Data;\\n\\n    error PluginAlreadyAdded();\\n    error PluginNotFound();\\n    error InvalidPluginAddress();\\n    error InvalidTokenInPlugin();\\n    error PluginsLimitReachedForAccount();\\n    error ZeroPluginsLimit();\\n\\n    /// @dev Limit of plugins per account\\n    uint256 public immutable pluginsCountLimit;\\n    /// @dev Gas limit for a single plugin call\\n    uint256 public immutable pluginsCallGasLimit;\\n\\n    ReentrancyGuardLib.Data private _guard;\\n    mapping(address => AddressSet.Data) private _plugins;\\n\\n    /**\\n     * @dev Constructor that sets the limit of plugins per account and the gas limit for a plugin call.\\n     * @param pluginsLimit_ The limit of plugins per account.\\n     * @param pluginCallGasLimit_ The gas limit for a plugin call. Intended to prevent gas bomb attacks\\n     */\\n    constructor(uint256 pluginsLimit_, uint256 pluginCallGasLimit_) {\\n        if (pluginsLimit_ == 0) revert ZeroPluginsLimit();\\n        pluginsCountLimit = pluginsLimit_;\\n        pluginsCallGasLimit = pluginCallGasLimit_;\\n        _guard.init();\\n    }\\n\\n    /**\\n     * @dev Returns whether an account has a specific plugin.\\n     * @param account The address of the account.\\n     * @param plugin The address of the plugin.\\n     * @return bool A boolean indicating whether the account has the specified plugin.\\n     */\\n    function hasPlugin(address account, address plugin) public view virtual returns(bool) {\\n        return _plugins[account].contains(plugin);\\n    }\\n\\n    /**\\n     * @dev Returns the number of plugins registered for an account.\\n     * @param account The address of the account.\\n     * @return uint256 A number of plugins registered for the account.\\n     */\\n    function pluginsCount(address account) public view virtual returns(uint256) {\\n        return _plugins[account].length();\\n    }\\n\\n    /**\\n     * @dev Returns the address of a plugin at a specified index for a given account .\\n     * @param account The address of the account.\\n     * @param index The index of the plugin to retrieve.\\n     * @return plugin The address of the plugin.\\n     */\\n    function pluginAt(address account, uint256 index) public view virtual returns(address) {\\n        return _plugins[account].at(index);\\n    }\\n\\n    /**\\n     * @dev Returns an array of all plugins owned by a given account.\\n     * @param account The address of the account to query.\\n     * @return plugins An array of plugin addresses.\\n     */\\n    function plugins(address account) public view virtual returns(address[] memory) {\\n        return _plugins[account].items.get();\\n    }\\n\\n\\n    /**\\n     * @dev Returns the balance of a given account.\\n     * @param account The address of the account.\\n     * @return balance The account balance.\\n     */\\n    function balanceOf(address account) public nonReentrantView(_guard) view override(IERC20, ERC20) virtual returns(uint256) {\\n        return super.balanceOf(account);\\n    }\\n\\n    /**\\n     * @dev Returns the balance of a given account if a specified plugin is added or zero.\\n     * @param plugin The address of the plugin to query.\\n     * @param account The address of the account to query.\\n     * @return balance The account balance if the specified plugin is added and zero otherwise.\\n     */\\n    function pluginBalanceOf(address plugin, address account) public nonReentrantView(_guard) view virtual returns(uint256) {\\n        if (hasPlugin(account, plugin)) {\\n            return super.balanceOf(account);\\n        }\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev Adds a new plugin for the calling account.\\n     * @param plugin The address of the plugin to add.\\n     */\\n    function addPlugin(address plugin) public virtual {\\n        _addPlugin(msg.sender, plugin);\\n    }\\n\\n    /**\\n     * @dev Removes a plugin for the calling account.\\n     * @param plugin The address of the plugin to remove.\\n     */\\n    function removePlugin(address plugin) public virtual {\\n        _removePlugin(msg.sender, plugin);\\n    }\\n\\n    /**\\n     * @dev Removes all plugins for the calling account.\\n     */\\n    function removeAllPlugins() public virtual {\\n        _removeAllPlugins(msg.sender);\\n    }\\n\\n    function _addPlugin(address account, address plugin) internal virtual {\\n        if (plugin == address(0)) revert InvalidPluginAddress();\\n        if (IPlugin(plugin).token() != IERC20Plugins(address(this))) revert InvalidTokenInPlugin();\\n        if (!_plugins[account].add(plugin)) revert PluginAlreadyAdded();\\n        if (_plugins[account].length() > pluginsCountLimit) revert PluginsLimitReachedForAccount();\\n\\n        emit PluginAdded(account, plugin);\\n        uint256 balance = balanceOf(account);\\n        if (balance > 0) {\\n            _updateBalances(plugin, address(0), account, balance);\\n        }\\n    }\\n\\n    function _removePlugin(address account, address plugin) internal virtual {\\n        if (!_plugins[account].remove(plugin)) revert PluginNotFound();\\n\\n        emit PluginRemoved(account, plugin);\\n        uint256 balance = balanceOf(account);\\n        if (balance > 0) {\\n            _updateBalances(plugin, account, address(0), balance);\\n        }\\n    }\\n\\n    function _removeAllPlugins(address account) internal virtual {\\n        address[] memory items = _plugins[account].items.get();\\n        uint256 balance = balanceOf(account);\\n        unchecked {\\n            for (uint256 i = items.length; i > 0; i--) {\\n                _plugins[account].remove(items[i - 1]);\\n                emit PluginRemoved(account, items[i - 1]);\\n                if (balance > 0) {\\n                    _updateBalances(items[i - 1], account, address(0), balance);\\n                }\\n            }\\n        }\\n    }\\n\\n    /// @notice Assembly implementation of the gas limited call to avoid return gas bomb,\\n    // moreover call to a destructed plugin would also revert even inside try-catch block in Solidity 0.8.17\\n    /// @dev try IPlugin(plugin).updateBalances{gas: _PLUGIN_CALL_GAS_LIMIT}(from, to, amount) {} catch {}\\n    function _updateBalances(address plugin, address from, address to, uint256 amount) private {\\n        bytes4 selector = IPlugin.updateBalances.selector;\\n        uint256 gasLimit = pluginsCallGasLimit;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let ptr := mload(0x40)\\n            mstore(ptr, selector)\\n            mstore(add(ptr, 0x04), from)\\n            mstore(add(ptr, 0x24), to)\\n            mstore(add(ptr, 0x44), amount)\\n\\n            let gasLeft := gas()\\n            if iszero(call(gasLimit, plugin, 0, ptr, 0x64, 0, 0)) {\\n                if lt(div(mul(gasLeft, 63), 64), gasLimit) {\\n                    returndatacopy(ptr, 0, returndatasize())\\n                    revert(ptr, returndatasize())\\n                }\\n            }\\n        }\\n    }\\n\\n    // ERC20 Overrides\\n\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal nonReentrant(_guard) override virtual {\\n        super._afterTokenTransfer(from, to, amount);\\n\\n        unchecked {\\n            if (amount > 0 && from != to) {\\n                address[] memory a = _plugins[from].items.get();\\n                address[] memory b = _plugins[to].items.get();\\n                uint256 aLength = a.length;\\n                uint256 bLength = b.length;\\n\\n                for (uint256 i = 0; i < aLength; i++) {\\n                    address plugin = a[i];\\n\\n                    uint256 j;\\n                    for (j = 0; j < bLength; j++) {\\n                        if (plugin == b[j]) {\\n                            // Both parties are participating of the same plugin\\n                            _updateBalances(plugin, from, to, amount);\\n                            b[j] = address(0);\\n                            break;\\n                        }\\n                    }\\n\\n                    if (j == bLength) {\\n                        // Sender is participating in a plugin, but receiver is not\\n                        _updateBalances(plugin, from, address(0), amount);\\n                    }\\n                }\\n\\n                for (uint256 j = 0; j < bLength; j++) {\\n                    address plugin = b[j];\\n                    if (plugin != address(0)) {\\n                        // Receiver is participating in a plugin, but sender is not\\n                        _updateBalances(plugin, address(0), to, amount);\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd4b36af9c154f96a1e17b263762c58ccab37287396420a20936159735bed4060\",\"license\":\"MIT\"},\"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IERC20Plugins is IERC20 {\\n    event PluginAdded(address account, address plugin);\\n    event PluginRemoved(address account, address plugin);\\n\\n    function pluginsCountLimit() external view returns(uint256);\\n    function pluginsCallGasLimit() external view returns(uint256);\\n    function hasPlugin(address account, address plugin) external view returns(bool);\\n    function pluginsCount(address account) external view returns(uint256);\\n    function pluginAt(address account, uint256 index) external view returns(address);\\n    function plugins(address account) external view returns(address[] memory);\\n    function pluginBalanceOf(address plugin, address account) external view returns(uint256);\\n\\n    function addPlugin(address plugin) external;\\n    function removePlugin(address plugin) external;\\n    function removeAllPlugins() external;\\n}\\n\",\"keccak256\":\"0x0f5605f00e8bc32568fde89062c559e95a5baf02063ab81fc30e28a6e0627d5c\",\"license\":\"MIT\"},\"@1inch/token-plugins/contracts/interfaces/IPlugin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20Plugins } from \\\"./IERC20Plugins.sol\\\";\\n\\ninterface IPlugin {\\n    function token() external view returns(IERC20Plugins);\\n    function updateBalances(address from, address to, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0xe9d4625460ec99ee9cac2de5edcad4915ca5a2065dfbe5aca73418cc5691be98\",\"license\":\"MIT\"},\"@1inch/token-plugins/contracts/libs/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ReentrancyGuardLib\\n * @dev Library that provides reentrancy protection for functions.\\n */\\nlibrary ReentrancyGuardLib {\\n\\n    /// @dev Emit when reentrancy detected\\n    error ReentrantCall();\\n\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    /// @dev Struct to hold the current status of the contract.\\n    struct Data {\\n        uint256 _status;\\n    }\\n\\n    /**\\n     * @dev Initializes the struct with the current status set to not entered.\\n     * @param self The storage reference to the struct.\\n     */\\n    function init(Data storage self) internal {\\n        self._status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Sets the status to entered if it is not already entered, otherwise reverts.\\n     * @param self The storage reference to the struct.\\n     */\\n    function enter(Data storage self) internal {\\n        if (self._status == _ENTERED) revert ReentrantCall();\\n        self._status = _ENTERED;\\n    }\\n\\n    /**\\n     * @dev Resets the status to not entered.\\n     * @param self The storage reference to the struct.\\n     */\\n    function exit(Data storage self) internal {\\n        self._status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Checks the current status of the contract to ensure that it is not already entered.\\n     * @param self The storage reference to the struct.\\n     * @return Whether or not the contract is currently entered.\\n     */\\n    function check(Data storage self) internal view returns (bool) {\\n        return self._status == _ENTERED;\\n    }\\n}\\n\\n/**\\n * @title ReentrancyGuardExt\\n * @dev Contract that uses the ReentrancyGuardLib to provide reentrancy protection.\\n */\\ncontract ReentrancyGuardExt {\\n    using ReentrancyGuardLib for ReentrancyGuardLib.Data;\\n\\n    /**\\n     * @dev Modifier that ensures a function can only be called once in the same block.\\n     * @param self The storage reference to the struct.\\n     */\\n    modifier nonReentrant(ReentrancyGuardLib.Data storage self) {\\n        self.enter();\\n        _;\\n        self.exit();\\n    }\\n\\n    /**\\n     * @dev Modifier that ensures a function can only be called once in the same block in view mode.\\n     * @param self The storage reference to the struct.\\n     */\\n    modifier nonReentrantView(ReentrancyGuardLib.Data storage self) {\\n        if (self.check()) revert ReentrancyGuardLib.ReentrantCall();\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x7a4cd646d3910ffffe35f6b8e2b4a11fc10b4823643f80e7077e050c131b1967\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1522,"contract":"@1inch/token-plugins/contracts/ERC20Plugins.sol:ERC20Plugins","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1528,"contract":"@1inch/token-plugins/contracts/ERC20Plugins.sol:ERC20Plugins","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1530,"contract":"@1inch/token-plugins/contracts/ERC20Plugins.sol:ERC20Plugins","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1532,"contract":"@1inch/token-plugins/contracts/ERC20Plugins.sol:ERC20Plugins","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1534,"contract":"@1inch/token-plugins/contracts/ERC20Plugins.sol:ERC20Plugins","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":620,"contract":"@1inch/token-plugins/contracts/ERC20Plugins.sol:ERC20Plugins","label":"_guard","offset":0,"slot":"5","type":"t_struct(Data)1399_storage"},{"astId":625,"contract":"@1inch/token-plugins/contracts/ERC20Plugins.sol:ERC20Plugins","label":"_plugins","offset":0,"slot":"6","type":"t_mapping(t_address,t_struct(Data)394_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Data)394_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct AddressSet.Data)","numberOfBytes":"32","value":"t_struct(Data)394_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Data)1399_storage":{"encoding":"inplace","label":"struct ReentrancyGuardLib.Data","members":[{"astId":1398,"contract":"@1inch/token-plugins/contracts/ERC20Plugins.sol:ERC20Plugins","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_struct(Data)13_storage":{"encoding":"inplace","label":"struct AddressArray.Data","members":[{"astId":12,"contract":"@1inch/token-plugins/contracts/ERC20Plugins.sol:ERC20Plugins","label":"_raw","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_uint256)"}],"numberOfBytes":"32"},"t_struct(Data)394_storage":{"encoding":"inplace","label":"struct AddressSet.Data","members":[{"astId":389,"contract":"@1inch/token-plugins/contracts/ERC20Plugins.sol:ERC20Plugins","label":"items","offset":0,"slot":"0","type":"t_struct(Data)13_storage"},{"astId":393,"contract":"@1inch/token-plugins/contracts/ERC20Plugins.sol:ERC20Plugins","label":"lookup","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@1inch/token-plugins/contracts/Plugin.sol":{"Plugin":{"abi":[{"inputs":[],"name":"AccessDenied","type":"error"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20Plugins","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"updateBalances","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"ERC20 extension enabling external smart contract based plugins to track balances of those users who opted-in to these plugins. Could be useful for farming / DAO voting and every case where you need to track user's balances without moving tokens to another contract.","kind":"dev","methods":{"constructor":{"details":"Creates a new plugin contract, initialized with a reference to the parent token contract.","params":{"token_":"The address of the token contract"}},"updateBalances(address,address,uint256)":{"details":"Updates the balances of two addresses in the plugin as a result of any balance changes. Only the Token contract is allowed to call this function.","params":{"amount":"The amount of tokens transferred","from":"The address from which tokens were transferred","to":"The address to which tokens were transferred"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"token()":"fc0c546a","updateBalances(address,address,uint256)":"7a1f1aa9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20Plugins\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateBalances\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 extension enabling external smart contract based plugins to track balances of those users who opted-in to these plugins. Could be useful for farming / DAO voting and every case where you need to track user's balances without moving tokens to another contract.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Creates a new plugin contract, initialized with a reference to the parent token contract.\",\"params\":{\"token_\":\"The address of the token contract\"}},\"updateBalances(address,address,uint256)\":{\"details\":\"Updates the balances of two addresses in the plugin as a result of any balance changes. Only the Token contract is allowed to call this function.\",\"params\":{\"amount\":\"The amount of tokens transferred\",\"from\":\"The address from which tokens were transferred\",\"to\":\"The address to which tokens were transferred\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@1inch/token-plugins/contracts/Plugin.sol\":\"Plugin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@1inch/token-plugins/contracts/Plugin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IPlugin } from \\\"./interfaces/IPlugin.sol\\\";\\nimport { IERC20Plugins } from \\\"./interfaces/IERC20Plugins.sol\\\";\\n\\n\\n/// @dev ERC20 extension enabling external smart contract based plugins to track balances of those users who opted-in to these plugins.\\n/// Could be useful for farming / DAO voting and every case where you need to track user's balances without moving tokens to another contract.\\nabstract contract Plugin is IPlugin {\\n    error AccessDenied();\\n\\n    IERC20Plugins public immutable token;\\n\\n    /// @dev Throws an error if the caller is not the token contract\\n    modifier onlyToken {\\n        if (msg.sender != address(token)) revert AccessDenied();\\n        _;\\n    }\\n\\n    /// @dev Creates a new plugin contract, initialized with a reference to the parent token contract.\\n    /// @param token_ The address of the token contract\\n    constructor(IERC20Plugins token_) {\\n        token = token_;\\n    }\\n\\n    /// @dev Updates the balances of two addresses in the plugin as a result of any balance changes.\\n    /// Only the Token contract is allowed to call this function.\\n    /// @param from The address from which tokens were transferred\\n    /// @param to The address to which tokens were transferred\\n    /// @param amount The amount of tokens transferred\\n    function updateBalances(address from, address to, uint256 amount) external onlyToken {\\n        _updateBalances(from, to, amount);\\n    }\\n\\n    /// @dev Updates the balances of two addresses in the plugin as a result of any balance changes.\\n    /// Only the Token contract is allowed to call this function.\\n    /// @param from The address from which tokens were transferred\\n    /// @param to The address to which tokens were transferred\\n    /// @param amount The amount of tokens transferred\\n    function _updateBalances(address from, address to, uint256 amount) internal virtual;\\n}\\n\",\"keccak256\":\"0x71a38b993d17016b6f94e59bb0f1e53be799a886bfa490e2f2f9833dc3a95abb\",\"license\":\"MIT\"},\"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IERC20Plugins is IERC20 {\\n    event PluginAdded(address account, address plugin);\\n    event PluginRemoved(address account, address plugin);\\n\\n    function pluginsCountLimit() external view returns(uint256);\\n    function pluginsCallGasLimit() external view returns(uint256);\\n    function hasPlugin(address account, address plugin) external view returns(bool);\\n    function pluginsCount(address account) external view returns(uint256);\\n    function pluginAt(address account, uint256 index) external view returns(address);\\n    function plugins(address account) external view returns(address[] memory);\\n    function pluginBalanceOf(address plugin, address account) external view returns(uint256);\\n\\n    function addPlugin(address plugin) external;\\n    function removePlugin(address plugin) external;\\n    function removeAllPlugins() external;\\n}\\n\",\"keccak256\":\"0x0f5605f00e8bc32568fde89062c559e95a5baf02063ab81fc30e28a6e0627d5c\",\"license\":\"MIT\"},\"@1inch/token-plugins/contracts/interfaces/IPlugin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20Plugins } from \\\"./IERC20Plugins.sol\\\";\\n\\ninterface IPlugin {\\n    function token() external view returns(IERC20Plugins);\\n    function updateBalances(address from, address to, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0xe9d4625460ec99ee9cac2de5edcad4915ca5a2065dfbe5aca73418cc5691be98\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol":{"IERC20Plugins":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"plugin","type":"address"}],"name":"PluginAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"plugin","type":"address"}],"name":"PluginRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"plugin","type":"address"}],"name":"addPlugin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"plugin","type":"address"}],"name":"hasPlugin","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"pluginAt","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"plugin","type":"address"},{"internalType":"address","name":"account","type":"address"}],"name":"pluginBalanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"plugins","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pluginsCallGasLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"pluginsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pluginsCountLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"removeAllPlugins","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"plugin","type":"address"}],"name":"removePlugin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addPlugin(address)":"d8867fc8","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","hasPlugin(address,address)":"ed6edc82","pluginAt(address,uint256)":"1945f729","pluginBalanceOf(address,address)":"c1255635","plugins(address)":"4b12e643","pluginsCallGasLimit()":"7ee688cb","pluginsCount(address)":"61728134","pluginsCountLimit()":"53cea5df","removeAllPlugins()":"8b822d88","removePlugin(address)":"a4d95b64","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"}],\"name\":\"PluginAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"}],\"name\":\"PluginRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"}],\"name\":\"addPlugin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"}],\"name\":\"hasPlugin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"pluginAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"pluginBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"plugins\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pluginsCallGasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"pluginsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pluginsCountLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeAllPlugins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"}],\"name\":\"removePlugin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol\":\"IERC20Plugins\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IERC20Plugins is IERC20 {\\n    event PluginAdded(address account, address plugin);\\n    event PluginRemoved(address account, address plugin);\\n\\n    function pluginsCountLimit() external view returns(uint256);\\n    function pluginsCallGasLimit() external view returns(uint256);\\n    function hasPlugin(address account, address plugin) external view returns(bool);\\n    function pluginsCount(address account) external view returns(uint256);\\n    function pluginAt(address account, uint256 index) external view returns(address);\\n    function plugins(address account) external view returns(address[] memory);\\n    function pluginBalanceOf(address plugin, address account) external view returns(uint256);\\n\\n    function addPlugin(address plugin) external;\\n    function removePlugin(address plugin) external;\\n    function removeAllPlugins() external;\\n}\\n\",\"keccak256\":\"0x0f5605f00e8bc32568fde89062c559e95a5baf02063ab81fc30e28a6e0627d5c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@1inch/token-plugins/contracts/interfaces/IPlugin.sol":{"IPlugin":{"abi":[{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20Plugins","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"updateBalances","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"token()":"fc0c546a","updateBalances(address,address,uint256)":"7a1f1aa9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20Plugins\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateBalances\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@1inch/token-plugins/contracts/interfaces/IPlugin.sol\":\"IPlugin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IERC20Plugins is IERC20 {\\n    event PluginAdded(address account, address plugin);\\n    event PluginRemoved(address account, address plugin);\\n\\n    function pluginsCountLimit() external view returns(uint256);\\n    function pluginsCallGasLimit() external view returns(uint256);\\n    function hasPlugin(address account, address plugin) external view returns(bool);\\n    function pluginsCount(address account) external view returns(uint256);\\n    function pluginAt(address account, uint256 index) external view returns(address);\\n    function plugins(address account) external view returns(address[] memory);\\n    function pluginBalanceOf(address plugin, address account) external view returns(uint256);\\n\\n    function addPlugin(address plugin) external;\\n    function removePlugin(address plugin) external;\\n    function removeAllPlugins() external;\\n}\\n\",\"keccak256\":\"0x0f5605f00e8bc32568fde89062c559e95a5baf02063ab81fc30e28a6e0627d5c\",\"license\":\"MIT\"},\"@1inch/token-plugins/contracts/interfaces/IPlugin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20Plugins } from \\\"./IERC20Plugins.sol\\\";\\n\\ninterface IPlugin {\\n    function token() external view returns(IERC20Plugins);\\n    function updateBalances(address from, address to, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0xe9d4625460ec99ee9cac2de5edcad4915ca5a2065dfbe5aca73418cc5691be98\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@1inch/token-plugins/contracts/libs/ReentrancyGuard.sol":{"ReentrancyGuardExt":{"abi":[],"devdoc":{"details":"Contract that uses the ReentrancyGuardLib to provide reentrancy protection.","kind":"dev","methods":{},"title":"ReentrancyGuardExt","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601357603a908160198239f35b600080fdfe600080fdfea26469706673582212203ab9a809748e0da8643d11002f762225f2c69f10c794cfdf342738fda26ee4b964736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x13 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x19 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xB9 0xA8 MULMOD PUSH21 0x8E0DA8643D11002F762225F2C69F10C794CFDF3427 CODESIZE REVERT LOG2 PUSH15 0xE4B964736F6C634300081300330000 ","sourceMap":"1705:706:6:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203ab9a809748e0da8643d11002f762225f2c69f10c794cfdf342738fda26ee4b964736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xB9 0xA8 MULMOD PUSH21 0x8E0DA8643D11002F762225F2C69F10C794CFDF3427 CODESIZE REVERT LOG2 PUSH15 0xE4B964736F6C634300081300330000 ","sourceMap":"1705:706:6:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"69","totalCost":"11669"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract that uses the ReentrancyGuardLib to provide reentrancy protection.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ReentrancyGuardExt\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@1inch/token-plugins/contracts/libs/ReentrancyGuard.sol\":\"ReentrancyGuardExt\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@1inch/token-plugins/contracts/libs/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ReentrancyGuardLib\\n * @dev Library that provides reentrancy protection for functions.\\n */\\nlibrary ReentrancyGuardLib {\\n\\n    /// @dev Emit when reentrancy detected\\n    error ReentrantCall();\\n\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    /// @dev Struct to hold the current status of the contract.\\n    struct Data {\\n        uint256 _status;\\n    }\\n\\n    /**\\n     * @dev Initializes the struct with the current status set to not entered.\\n     * @param self The storage reference to the struct.\\n     */\\n    function init(Data storage self) internal {\\n        self._status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Sets the status to entered if it is not already entered, otherwise reverts.\\n     * @param self The storage reference to the struct.\\n     */\\n    function enter(Data storage self) internal {\\n        if (self._status == _ENTERED) revert ReentrantCall();\\n        self._status = _ENTERED;\\n    }\\n\\n    /**\\n     * @dev Resets the status to not entered.\\n     * @param self The storage reference to the struct.\\n     */\\n    function exit(Data storage self) internal {\\n        self._status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Checks the current status of the contract to ensure that it is not already entered.\\n     * @param self The storage reference to the struct.\\n     * @return Whether or not the contract is currently entered.\\n     */\\n    function check(Data storage self) internal view returns (bool) {\\n        return self._status == _ENTERED;\\n    }\\n}\\n\\n/**\\n * @title ReentrancyGuardExt\\n * @dev Contract that uses the ReentrancyGuardLib to provide reentrancy protection.\\n */\\ncontract ReentrancyGuardExt {\\n    using ReentrancyGuardLib for ReentrancyGuardLib.Data;\\n\\n    /**\\n     * @dev Modifier that ensures a function can only be called once in the same block.\\n     * @param self The storage reference to the struct.\\n     */\\n    modifier nonReentrant(ReentrancyGuardLib.Data storage self) {\\n        self.enter();\\n        _;\\n        self.exit();\\n    }\\n\\n    /**\\n     * @dev Modifier that ensures a function can only be called once in the same block in view mode.\\n     * @param self The storage reference to the struct.\\n     */\\n    modifier nonReentrantView(ReentrancyGuardLib.Data storage self) {\\n        if (self.check()) revert ReentrancyGuardLib.ReentrantCall();\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x7a4cd646d3910ffffe35f6b8e2b4a11fc10b4823643f80e7077e050c131b1967\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"ReentrancyGuardLib":{"abi":[{"inputs":[],"name":"ReentrantCall","type":"error"}],"devdoc":{"details":"Library that provides reentrancy protection for functions.","errors":{"ReentrantCall()":[{"details":"Emit when reentrancy detected"}]},"kind":"dev","methods":{},"title":"ReentrancyGuardLib","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c77d32aa41392b14328b3aa73a2b8d5234812cf242b4a1f9efc16c5da0ab5f1264736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 PUSH30 0x32AA41392B14328B3AA73A2B8D5234812CF242B4A1F9EFC16C5DA0AB5F12 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"162:1420:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220c77d32aa41392b14328b3aa73a2b8d5234812cf242b4a1f9efc16c5da0ab5f1264736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 PUSH30 0x32AA41392B14328B3AA73A2B8D5234812CF242B4A1F9EFC16C5DA0AB5F12 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"162:1420:6:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"check(struct ReentrancyGuardLib.Data storage pointer)":"infinite","enter(struct ReentrancyGuardLib.Data storage pointer)":"infinite","exit(struct ReentrancyGuardLib.Data storage pointer)":"infinite","init(struct ReentrancyGuardLib.Data storage pointer)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Library that provides reentrancy protection for functions.\",\"errors\":{\"ReentrantCall()\":[{\"details\":\"Emit when reentrancy detected\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"ReentrancyGuardLib\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@1inch/token-plugins/contracts/libs/ReentrancyGuard.sol\":\"ReentrancyGuardLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@1inch/token-plugins/contracts/libs/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ReentrancyGuardLib\\n * @dev Library that provides reentrancy protection for functions.\\n */\\nlibrary ReentrancyGuardLib {\\n\\n    /// @dev Emit when reentrancy detected\\n    error ReentrantCall();\\n\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    /// @dev Struct to hold the current status of the contract.\\n    struct Data {\\n        uint256 _status;\\n    }\\n\\n    /**\\n     * @dev Initializes the struct with the current status set to not entered.\\n     * @param self The storage reference to the struct.\\n     */\\n    function init(Data storage self) internal {\\n        self._status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Sets the status to entered if it is not already entered, otherwise reverts.\\n     * @param self The storage reference to the struct.\\n     */\\n    function enter(Data storage self) internal {\\n        if (self._status == _ENTERED) revert ReentrantCall();\\n        self._status = _ENTERED;\\n    }\\n\\n    /**\\n     * @dev Resets the status to not entered.\\n     * @param self The storage reference to the struct.\\n     */\\n    function exit(Data storage self) internal {\\n        self._status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Checks the current status of the contract to ensure that it is not already entered.\\n     * @param self The storage reference to the struct.\\n     * @return Whether or not the contract is currently entered.\\n     */\\n    function check(Data storage self) internal view returns (bool) {\\n        return self._status == _ENTERED;\\n    }\\n}\\n\\n/**\\n * @title ReentrancyGuardExt\\n * @dev Contract that uses the ReentrancyGuardLib to provide reentrancy protection.\\n */\\ncontract ReentrancyGuardExt {\\n    using ReentrancyGuardLib for ReentrancyGuardLib.Data;\\n\\n    /**\\n     * @dev Modifier that ensures a function can only be called once in the same block.\\n     * @param self The storage reference to the struct.\\n     */\\n    modifier nonReentrant(ReentrancyGuardLib.Data storage self) {\\n        self.enter();\\n        _;\\n        self.exit();\\n    }\\n\\n    /**\\n     * @dev Modifier that ensures a function can only be called once in the same block in view mode.\\n     * @param self The storage reference to the struct.\\n     */\\n    modifier nonReentrantView(ReentrancyGuardLib.Data storage self) {\\n        if (self.check()) revert ReentrancyGuardLib.ReentrantCall();\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x7a4cd646d3910ffffe35f6b8e2b4a11fc10b4823643f80e7077e050c131b1967\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_string_fromMemory":{"entryPoint":840,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":802,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080604052346200031d57620010be803803806200001d8162000322565b9283398101906040818303126200031d5780516001600160401b03908181116200031d57836200004f91840162000348565b91602093848201518381116200031d576200006b920162000348565b82518281116200021d576003918254916001958684811c9416801562000312575b88851014620002fc578190601f94858111620002a6575b5088908583116001146200023f5760009262000233575b505060001982861b1c191690861b1783555b80519384116200021d5760049586548681811c9116801562000212575b82821014620001fd57838111620001b2575b508092851160011462000144575093839491849260009562000138575b50501b92600019911b1c19161790555b604051610d039081620003bb8239f35b01519350388062000118565b92919084601f1981168860005285600020956000905b898383106200019757505050106200017c575b50505050811b01905562000128565b01519060f884600019921b161c19169055388080806200016d565b8587015189559097019694850194889350908101906200015a565b87600052816000208480880160051c820192848910620001f3575b0160051c019087905b828110620001e6575050620000fb565b60008155018790620001d6565b92508192620001cd565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000e9565b634e487b7160e01b600052604160045260246000fd5b015190503880620000ba565b90889350601f19831691876000528a6000209260005b8c8282106200028f575050841162000276575b505050811b018355620000cc565b015160001983881b60f8161c1916905538808062000268565b8385015186558c9790950194938401930162000255565b90915085600052886000208580850160051c8201928b8610620002f2575b918a91869594930160051c01915b828110620002e2575050620000a3565b600081558594508a9101620002d2565b92508192620002c4565b634e487b7160e01b600052602260045260246000fd5b93607f16936200008c565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200021d57604052565b919080601f840112156200031d5782516001600160401b0381116200021d576020906200037e601f8201601f1916830162000322565b928184528282870101116200031d5760005b818110620003a657508260009394955001015290565b85810183015184820184015282016200039056fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461075657508163095ea7b31461070e57816318160ddd146106d157816323b872dd146105a3578163313ce5671461056957816339509351146104bf57816370a082311461045e57816395d89b4114610268578163a457c2d71461016257508063a9059cbb146101145763dd62ed3e1461009e57600080fd5b3461011057807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011057806020926100d86108fe565b6100e0610926565b73ffffffffffffffffffffffffffffffffffffffff91821683526001865283832091168252845220549051908152f35b5080fd5b503461011057807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101105760209061015b6101516108fe565b6024359033610949565b5160018152f35b9050823461026557827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102655761019b6108fe565b918360243592338152600160205281812073ffffffffffffffffffffffffffffffffffffffff861682526020522054908282106101e25760208561015b8585038733610b58565b60849060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b80fd5b83833461011057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011057805190828454600181811c90808316928315610454575b60209384841081146104285783885287959493929181156103cd5750600114610351575b50505003601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019267ffffffffffffffff8411838510176103255750829182610321925282610898565b0390f35b806041867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b8888529193925086917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106103b757505050907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092601f928201019181936102d3565b805488850187015287945092850192810161037c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016848701525050151560051b830101905081601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06102d3565b60248960228c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b91607f16916102af565b5050346101105760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610110578060209273ffffffffffffffffffffffffffffffffffffffff6104b06108fe565b16815280845220549051908152f35b82843461026557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610265576104f76108fe565b338252600160205282822073ffffffffffffffffffffffffffffffffffffffff821683526020528282205491602435830180931161053d5760208461015b858533610b58565b806011867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b50503461011057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610110576020905160128152f35b839150346101105760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610110576105dd6108fe565b6105e5610926565b91846044359473ffffffffffffffffffffffffffffffffffffffff8416815260016020528181203382526020522054907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361064b575b60208661015b878787610949565b84821061067457509183916106696020969561015b95033383610b58565b91939481935061063d565b60649060208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b50503461011057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610110576020906002549051908152f35b50503461011057807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101105760209061015b61074c6108fe565b6024359033610b58565b8490843461089457827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126108945782600354600181811c9080831692831561088a575b60209384841081146104285783885287959493929181156103cd575060011461080d5750505003601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019267ffffffffffffffff8411838510176103255750829182610321925282610898565b600388529193925086917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b82841061087457505050907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092601f928201019181936102d3565b8054888501870152879450928501928101610839565b91607f169161079c565b8280fd5b60208082528251818301819052939260005b8581106108ea575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b8181018301518482016040015282016108aa565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361092157565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361092157565b73ffffffffffffffffffffffffffffffffffffffff809116918215610ad45716918215610a50576000828152806020526040812054918083106109cc57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff809116918215610c4a5716918215610bc65760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fdfea2646970667358221220e99411d36d80ed33d7abed2e0306b9cc8b7f2bfeb11074b1982cec552a4ceef764736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x31D JUMPI PUSH3 0x10BE DUP1 CODESIZE SUB DUP1 PUSH3 0x1D DUP2 PUSH3 0x322 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x40 DUP2 DUP4 SUB SLT PUSH3 0x31D JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 GT PUSH3 0x31D JUMPI DUP4 PUSH3 0x4F SWAP2 DUP5 ADD PUSH3 0x348 JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP4 DUP5 DUP3 ADD MLOAD DUP4 DUP2 GT PUSH3 0x31D JUMPI PUSH3 0x6B SWAP3 ADD PUSH3 0x348 JUMP JUMPDEST DUP3 MLOAD DUP3 DUP2 GT PUSH3 0x21D JUMPI PUSH1 0x3 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x1 SWAP6 DUP7 DUP5 DUP2 SHR SWAP5 AND DUP1 ISZERO PUSH3 0x312 JUMPI JUMPDEST DUP9 DUP6 LT EQ PUSH3 0x2FC JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP5 DUP6 DUP2 GT PUSH3 0x2A6 JUMPI JUMPDEST POP DUP9 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH3 0x23F JUMPI PUSH1 0x0 SWAP3 PUSH3 0x233 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND SWAP1 DUP7 SHL OR DUP4 SSTORE JUMPDEST DUP1 MLOAD SWAP4 DUP5 GT PUSH3 0x21D JUMPI PUSH1 0x4 SWAP6 DUP7 SLOAD DUP7 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x212 JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH3 0x1FD JUMPI DUP4 DUP2 GT PUSH3 0x1B2 JUMPI JUMPDEST POP DUP1 SWAP3 DUP6 GT PUSH1 0x1 EQ PUSH3 0x144 JUMPI POP SWAP4 DUP4 SWAP5 SWAP2 DUP5 SWAP3 PUSH1 0x0 SWAP6 PUSH3 0x138 JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD03 SWAP1 DUP2 PUSH3 0x3BB DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH3 0x118 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1F NOT DUP2 AND DUP9 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 SWAP6 PUSH1 0x0 SWAP1 JUMPDEST DUP10 DUP4 DUP4 LT PUSH3 0x197 JUMPI POP POP POP LT PUSH3 0x17C JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x128 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x16D JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP10 SSTORE SWAP1 SWAP8 ADD SWAP7 SWAP5 DUP6 ADD SWAP5 DUP9 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x15A JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP9 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP5 DUP10 LT PUSH3 0x1F3 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP8 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x1E6 JUMPI POP POP PUSH3 0xFB JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP8 SWAP1 PUSH3 0x1D6 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x1CD JUMP JUMPDEST PUSH1 0x22 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xE9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xBA JUMP JUMPDEST SWAP1 DUP9 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP8 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP13 DUP3 DUP3 LT PUSH3 0x28F JUMPI POP POP DUP5 GT PUSH3 0x276 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH3 0xCC JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x268 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP13 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x255 JUMP JUMPDEST SWAP1 SWAP2 POP DUP6 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP12 DUP7 LT PUSH3 0x2F2 JUMPI JUMPDEST SWAP2 DUP11 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x2E2 JUMPI POP POP PUSH3 0xA3 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP11 SWAP2 ADD PUSH3 0x2D2 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x2C4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH3 0x8C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x21D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0x31D JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x21D JUMPI PUSH1 0x20 SWAP1 PUSH3 0x37E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD PUSH3 0x322 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH3 0x31D JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x3A6 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0x390 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x756 JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x70E JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x6D1 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x5A3 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x569 JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x4BF JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x45E JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x268 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x114 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x110 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x110 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xD8 PUSH2 0x8FE JUMP JUMPDEST PUSH2 0xE0 PUSH2 0x926 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x110 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x110 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x15B PUSH2 0x151 PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x949 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x265 JUMPI DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x265 JUMPI PUSH2 0x19B PUSH2 0x8FE JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x1E2 JUMPI PUSH1 0x20 DUP6 PUSH2 0x15B DUP6 DUP6 SUB DUP8 CALLER PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x110 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x110 JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x454 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x428 JUMPI DUP4 DUP9 MSTORE DUP8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 DUP2 ISZERO PUSH2 0x3CD JUMPI POP PUSH1 0x1 EQ PUSH2 0x351 JUMPI JUMPDEST POP POP POP SUB PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x325 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x321 SWAP3 MSTORE DUP3 PUSH2 0x898 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x41 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP5 MSTORE MSTORE REVERT JUMPDEST DUP9 DUP9 MSTORE SWAP2 SWAP4 SWAP3 POP DUP7 SWAP2 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x3B7 JUMPI POP POP POP SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP3 PUSH1 0x1F SWAP3 DUP3 ADD ADD SWAP2 DUP2 SWAP4 PUSH2 0x2D3 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP6 ADD DUP8 ADD MSTORE DUP8 SWAP5 POP SWAP3 DUP6 ADD SWAP3 DUP2 ADD PUSH2 0x37C JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP5 DUP8 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP1 POP DUP2 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x24 DUP10 PUSH1 0x22 DUP13 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2AF JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x110 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x110 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x4B0 PUSH2 0x8FE JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x265 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x265 JUMPI PUSH2 0x4F7 PUSH2 0x8FE JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP4 MSTORE PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SLOAD SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 ADD DUP1 SWAP4 GT PUSH2 0x53D JUMPI PUSH1 0x20 DUP5 PUSH2 0x15B DUP6 DUP6 CALLER PUSH2 0xB58 JUMP JUMPDEST DUP1 PUSH1 0x11 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP5 MSTORE MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x110 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x110 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x110 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x110 JUMPI PUSH2 0x5DD PUSH2 0x8FE JUMP JUMPDEST PUSH2 0x5E5 PUSH2 0x926 JUMP JUMPDEST SWAP2 DUP5 PUSH1 0x44 CALLDATALOAD SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x64B JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x15B DUP8 DUP8 DUP8 PUSH2 0x949 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x674 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x669 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x15B SWAP6 SUB CALLER DUP4 PUSH2 0xB58 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x63D JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x110 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x110 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x110 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x110 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x15B PUSH2 0x74C PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xB58 JUMP JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x894 JUMPI DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x894 JUMPI DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x88A JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x428 JUMPI DUP4 DUP9 MSTORE DUP8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 DUP2 ISZERO PUSH2 0x3CD JUMPI POP PUSH1 0x1 EQ PUSH2 0x80D JUMPI POP POP POP SUB PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x325 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x321 SWAP3 MSTORE DUP3 PUSH2 0x898 JUMP JUMPDEST PUSH1 0x3 DUP9 MSTORE SWAP2 SWAP4 SWAP3 POP DUP7 SWAP2 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x874 JUMPI POP POP POP SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP3 PUSH1 0x1F SWAP3 DUP3 ADD ADD SWAP2 DUP2 SWAP4 PUSH2 0x2D3 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP6 ADD DUP8 ADD MSTORE DUP8 SWAP5 POP SWAP3 DUP6 ADD SWAP3 DUP2 ADD PUSH2 0x839 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x79C JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x8EA JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 PUSH1 0x0 PUSH1 0x40 DUP1 SWAP7 SWAP8 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x921 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x921 JUMPI JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP2 DUP3 ISZERO PUSH2 0xAD4 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0xA50 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x9CC JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP2 DUP3 ISZERO PUSH2 0xC4A JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0xBC6 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 SWAP5 GT 0xD3 PUSH14 0x80ED33D7ABED2E0306B9CC8B7F2B INVALID 0xB1 LT PUSH21 0xB1982CEC552A4CEEF764736F6C6343000813003300 ","sourceMap":"1532:11312:7:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1532:11312:7;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2046:13;1532:11312;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:7;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:7;;;;;;;;;;-1:-1:-1;1532:11312:7;;;;-1:-1:-1;;;;1532:11312:7;;;;;;;;;;;;;;;;;;;;2069:17;1532:11312;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:7;;;;;;;;;;;;;;-1:-1:-1;1532:11312:7;;-1:-1:-1;1532:11312:7;;-1:-1:-1;1532:11312:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:7;;;;;;;;-1:-1:-1;1532:11312:7;;-1:-1:-1;1532:11312:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:7;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:7;;;-1:-1:-1;1532:11312:7;;;;;;;;;;;;-1:-1:-1;1532:11312:7;;2069:17;1532:11312;;-1:-1:-1;1532:11312:7;;;;;-1:-1:-1;1532:11312:7;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:7;;-1:-1:-1;1532:11312:7;;-1:-1:-1;1532:11312:7;;;;;;;;;;-1:-1:-1;1532:11312:7;;;;;;;;;;;;;;;;-1:-1:-1;;1532:11312:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:7;;-1:-1:-1;1532:11312:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:7;;;;-1:-1:-1;1532:11312:7;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:7;;;;;-1:-1:-1;1532:11312:7;;;;;;;;;-1:-1:-1;1532:11312:7;;;;;;;;;-1:-1:-1;;1532:11312:7;;;-1:-1:-1;;;;;1532:11312:7;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1532:11312:7;;;;;;;;;;-1:-1:-1;;1532:11312:7;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1532:11312:7;;;;;;;;-1:-1:-1;1532:11312:7;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":2302,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_4782":{"entryPoint":2342,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_string":{"entryPoint":2200,"id":null,"parameterSlots":2,"returnSlots":1},"fun_approve":{"entryPoint":2904,"id":2027,"parameterSlots":3,"returnSlots":0},"fun_transfer":{"entryPoint":2377,"id":1853,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461075657508163095ea7b31461070e57816318160ddd146106d157816323b872dd146105a3578163313ce5671461056957816339509351146104bf57816370a082311461045e57816395d89b4114610268578163a457c2d71461016257508063a9059cbb146101145763dd62ed3e1461009e57600080fd5b3461011057807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011057806020926100d86108fe565b6100e0610926565b73ffffffffffffffffffffffffffffffffffffffff91821683526001865283832091168252845220549051908152f35b5080fd5b503461011057807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101105760209061015b6101516108fe565b6024359033610949565b5160018152f35b9050823461026557827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102655761019b6108fe565b918360243592338152600160205281812073ffffffffffffffffffffffffffffffffffffffff861682526020522054908282106101e25760208561015b8585038733610b58565b60849060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b80fd5b83833461011057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011057805190828454600181811c90808316928315610454575b60209384841081146104285783885287959493929181156103cd5750600114610351575b50505003601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019267ffffffffffffffff8411838510176103255750829182610321925282610898565b0390f35b806041867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b8888529193925086917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106103b757505050907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092601f928201019181936102d3565b805488850187015287945092850192810161037c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016848701525050151560051b830101905081601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06102d3565b60248960228c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b91607f16916102af565b5050346101105760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610110578060209273ffffffffffffffffffffffffffffffffffffffff6104b06108fe565b16815280845220549051908152f35b82843461026557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610265576104f76108fe565b338252600160205282822073ffffffffffffffffffffffffffffffffffffffff821683526020528282205491602435830180931161053d5760208461015b858533610b58565b806011867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b50503461011057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610110576020905160128152f35b839150346101105760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610110576105dd6108fe565b6105e5610926565b91846044359473ffffffffffffffffffffffffffffffffffffffff8416815260016020528181203382526020522054907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361064b575b60208661015b878787610949565b84821061067457509183916106696020969561015b95033383610b58565b91939481935061063d565b60649060208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b50503461011057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610110576020906002549051908152f35b50503461011057807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101105760209061015b61074c6108fe565b6024359033610b58565b8490843461089457827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126108945782600354600181811c9080831692831561088a575b60209384841081146104285783885287959493929181156103cd575060011461080d5750505003601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019267ffffffffffffffff8411838510176103255750829182610321925282610898565b600388529193925086917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b82841061087457505050907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092601f928201019181936102d3565b8054888501870152879450928501928101610839565b91607f169161079c565b8280fd5b60208082528251818301819052939260005b8581106108ea575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b8181018301518482016040015282016108aa565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361092157565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361092157565b73ffffffffffffffffffffffffffffffffffffffff809116918215610ad45716918215610a50576000828152806020526040812054918083106109cc57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff809116918215610c4a5716918215610bc65760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fdfea2646970667358221220e99411d36d80ed33d7abed2e0306b9cc8b7f2bfeb11074b1982cec552a4ceef764736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x756 JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x70E JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x6D1 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x5A3 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x569 JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x4BF JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x45E JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x268 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x114 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x110 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x110 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xD8 PUSH2 0x8FE JUMP JUMPDEST PUSH2 0xE0 PUSH2 0x926 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x110 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x110 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x15B PUSH2 0x151 PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x949 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x265 JUMPI DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x265 JUMPI PUSH2 0x19B PUSH2 0x8FE JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x1E2 JUMPI PUSH1 0x20 DUP6 PUSH2 0x15B DUP6 DUP6 SUB DUP8 CALLER PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x110 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x110 JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x454 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x428 JUMPI DUP4 DUP9 MSTORE DUP8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 DUP2 ISZERO PUSH2 0x3CD JUMPI POP PUSH1 0x1 EQ PUSH2 0x351 JUMPI JUMPDEST POP POP POP SUB PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x325 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x321 SWAP3 MSTORE DUP3 PUSH2 0x898 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x41 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP5 MSTORE MSTORE REVERT JUMPDEST DUP9 DUP9 MSTORE SWAP2 SWAP4 SWAP3 POP DUP7 SWAP2 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x3B7 JUMPI POP POP POP SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP3 PUSH1 0x1F SWAP3 DUP3 ADD ADD SWAP2 DUP2 SWAP4 PUSH2 0x2D3 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP6 ADD DUP8 ADD MSTORE DUP8 SWAP5 POP SWAP3 DUP6 ADD SWAP3 DUP2 ADD PUSH2 0x37C JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP5 DUP8 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP1 POP DUP2 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x24 DUP10 PUSH1 0x22 DUP13 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2AF JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x110 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x110 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x4B0 PUSH2 0x8FE JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x265 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x265 JUMPI PUSH2 0x4F7 PUSH2 0x8FE JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP4 MSTORE PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SLOAD SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 ADD DUP1 SWAP4 GT PUSH2 0x53D JUMPI PUSH1 0x20 DUP5 PUSH2 0x15B DUP6 DUP6 CALLER PUSH2 0xB58 JUMP JUMPDEST DUP1 PUSH1 0x11 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP5 MSTORE MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x110 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x110 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x110 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x110 JUMPI PUSH2 0x5DD PUSH2 0x8FE JUMP JUMPDEST PUSH2 0x5E5 PUSH2 0x926 JUMP JUMPDEST SWAP2 DUP5 PUSH1 0x44 CALLDATALOAD SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x64B JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x15B DUP8 DUP8 DUP8 PUSH2 0x949 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x674 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x669 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x15B SWAP6 SUB CALLER DUP4 PUSH2 0xB58 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x63D JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x110 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x110 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x110 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x110 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x15B PUSH2 0x74C PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xB58 JUMP JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x894 JUMPI DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x894 JUMPI DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x88A JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x428 JUMPI DUP4 DUP9 MSTORE DUP8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 DUP2 ISZERO PUSH2 0x3CD JUMPI POP PUSH1 0x1 EQ PUSH2 0x80D JUMPI POP POP POP SUB PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x325 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x321 SWAP3 MSTORE DUP3 PUSH2 0x898 JUMP JUMPDEST PUSH1 0x3 DUP9 MSTORE SWAP2 SWAP4 SWAP3 POP DUP7 SWAP2 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x874 JUMPI POP POP POP SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP3 PUSH1 0x1F SWAP3 DUP3 ADD ADD SWAP2 DUP2 SWAP4 PUSH2 0x2D3 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP6 ADD DUP8 ADD MSTORE DUP8 SWAP5 POP SWAP3 DUP6 ADD SWAP3 DUP2 ADD PUSH2 0x839 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x79C JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x8EA JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 PUSH1 0x0 PUSH1 0x40 DUP1 SWAP7 SWAP8 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x921 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x921 JUMPI JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP2 DUP3 ISZERO PUSH2 0xAD4 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0xA50 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x9CC JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP2 DUP3 ISZERO PUSH2 0xC4A JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0xBC6 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 SWAP5 GT 0xD3 PUSH14 0x80ED33D7ABED2E0306B9CC8B7F2B INVALID 0xB1 LT PUSH21 0xB1982CEC552A4CEEF764736F6C6343000813003300 ","sourceMap":"1532:11312:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;4102:11;1532:11312;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3894:6;1532:11312;;:::i;:::-;;;719:10:10;;3894:6:7;:::i;:::-;1532:11312;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;719:10:10;;1532:11312:7;;;;;;;;;;;;;;;;;6792:35;;;;1532:11312;;;;6928:34;1532:11312;;;;719:10:10;6928:34:7;:::i;1532:11312::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1532:11312:7;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:7;;;;;;;;;;;;;;;-1:-1:-1;;1532:11312:7;;;;;;;;-1:-1:-1;1532:11312:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;719:10:10;1532:11312:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;719:10:10;6021:38:7;719:10:10;;;6021:38:7;:::i;1532:11312::-;;;;;;;;;;;;;;;;;;;;;;;;;;3186:2;1532:11312;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;719:10:10;1532:11312:7;;;;;;11244:37;11264:17;11244:37;;11240:243;;1532:11312;;5424:6;;;;;;:::i;11240:243::-;11305:26;;;1532:11312;;;;;;11432:25;1532:11312;;;5424:6;1532:11312;;719:10:10;11432:25:7;;:::i;:::-;11240:243;;;;;;;;1532:11312;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3342:12;1532:11312;;;;;;;;;;;;;;;;;;;;;;4606:6;1532:11312;;:::i;:::-;;;719:10:10;;4606:6:7;:::i;1532:11312::-;;;;;;;;;;;;;;;2244:5;1532:11312;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1532:11312:7;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2244:5;1532:11312;;;;;-1:-1:-1;1532:11312:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:7;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;7456:788::-;1532:11312;;;;7552:18;;;1532:11312;;;7630:16;;;1532:11312;;7568:1;1532:11312;;;;;;;;;;7801:21;;;;1532:11312;;;;;8163:26;1532:11312;;;;;;;;;;;;;;;;;;;;;;;;;;;;8163:26;7456:788::o;1532:11312::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10457:340;1532:11312;;;;10558:19;;;1532:11312;;;10636:21;;;1532:11312;;;10758:32;1532:11312;;10575:1;1532:11312;10707:11;1532:11312;;;10575:1;1532:11312;;10575:1;1532:11312;;;;;10575:1;1532:11312;;;;;;;10758:32;10457:340::o;1532:11312::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"666200","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"2749","approve(address,uint256)":"24360","balanceOf(address)":"2533","decimals()":"259","decreaseAllowance(address,uint256)":"26789","increaseAllowance(address,uint256)":"26718","name()":"infinite","symbol()":"infinite","totalSupply()":"2321","transfer(address,uint256)":"50939","transferFrom(address,address,uint256)":"77319"},"internal":{"_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1522,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1528,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1530,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1532,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1534,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/CompanyStock.sol":{"CompanyStock":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"uint256","name":"maxUserPlugins_","type":"uint256"},{"internalType":"uint256","name":"pluginCallGasLimit_","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"IndexOutOfBounds","type":"error"},{"inputs":[],"name":"InvalidPluginAddress","type":"error"},{"inputs":[],"name":"InvalidTokenInPlugin","type":"error"},{"inputs":[],"name":"NotOwnerPlugin","type":"error"},{"inputs":[],"name":"OutputArrayTooSmall","type":"error"},{"inputs":[],"name":"PluginAlreadyAdded","type":"error"},{"inputs":[],"name":"PluginNotFound","type":"error"},{"inputs":[],"name":"PluginsLimitReachedForAccount","type":"error"},{"inputs":[],"name":"PopFromEmptyArray","type":"error"},{"inputs":[],"name":"ReentrantCall","type":"error"},{"inputs":[],"name":"ZeroPluginsLimit","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"plugin","type":"address"}],"name":"PluginAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"plugin","type":"address"}],"name":"PluginRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"plugin","type":"address"}],"name":"addPlugin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"plugin","type":"address"}],"name":"hasPlugin","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ownerPlugin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"pluginAt","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"plugin","type":"address"},{"internalType":"address","name":"account","type":"address"}],"name":"pluginBalanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"plugins","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pluginsCallGasLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"pluginsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pluginsCountLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"removeAllPlugins","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"plugin","type":"address"}],"name":"removePlugin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"CompanyStock is a specialized version of an ERC20 token with additional functionalities that acts as the stock in the company.","errors":{"ReentrantCall()":[{"details":"Emit when reentrancy detected"}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"addPlugin(address)":{"details":"Adds a new plugin for the calling account.","params":{"plugin":"The address of the plugin to add."}},"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"Returns the balance of a given account.","params":{"account":"The address of the account."},"returns":{"_0":"balance The account balance."}},"burn(address,uint256)":{"details":"Only callable by the owner plugin.","params":{"account":"The address to burn tokens from.","amount":"The amount of tokens to burn."}},"constructor":{"params":{"maxUserPlugins_":"The maximum number of user plugins.","name_":"The name of the token.","pluginCallGasLimit_":"The gas limit for plugin calls.","symbol_":"The symbol of the token."}},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"hasPlugin(address,address)":{"details":"Returns whether an account has a specific plugin.","params":{"account":"The address of the account.","plugin":"The address of the plugin."},"returns":{"_0":"bool A boolean indicating whether the account has the specified plugin."}},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(address,uint256)":{"details":"Only callable by the owner plugin.","params":{"account":"The address to mint tokens to.","amount":"The amount of tokens to mint."}},"name()":{"details":"Returns the name of the token."},"pluginAt(address,uint256)":{"details":"Returns the address of a plugin at a specified index for a given account .","params":{"account":"The address of the account.","index":"The index of the plugin to retrieve."},"returns":{"_0":"plugin The address of the plugin."}},"pluginBalanceOf(address,address)":{"details":"Returns the balance of a given account if a specified plugin is added or zero.","params":{"account":"The address of the account to query.","plugin":"The address of the plugin to query."},"returns":{"_0":"balance The account balance if the specified plugin is added and zero otherwise."}},"plugins(address)":{"details":"Returns an array of all plugins owned by a given account.","params":{"account":"The address of the account to query."},"returns":{"_0":"plugins An array of plugin addresses."}},"pluginsCount(address)":{"details":"Returns the number of plugins registered for an account.","params":{"account":"The address of the account."},"returns":{"_0":"uint256 A number of plugins registered for the account."}},"removeAllPlugins()":{"details":"Removes all plugins for the calling account."},"removePlugin(address)":{"details":"Removes a plugin for the calling account.","params":{"plugin":"The address of the plugin to remove."}},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"title":"CompanyStock","version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_string_fromMemory":{"entryPoint":967,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":929,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60e0604052346200039c57620027c4803803806200001d81620003a1565b92833981016080828203126200039c5781516001600160401b03908181116200039c57826200004e918501620003c7565b9260209283820151908382116200039c576200006c918301620003c7565b606060408301519201519285518181116200029c576003908154906001988983811c9316801562000391575b898410146200037b578190601f9384811162000325575b508990848311600114620002be57600092620002b2575b505060001982851b1c191690891b1782555b83519283116200029c576004938454978989811c9916801562000291575b818a10146200027c5782891162000230575b84959697985080928511600114620001c25750600093620001b6575b505082871b92600019911b1c19161781555b8115620001a7575060805260a0526005553360c05260405161238a90816200043a82396080518181816102f60152610eda015260a051818181610dcd01528181611c0301528181611c8a01528181611d190152611f70015260c05181818161078301528181610c280152610ff20152f35b60405163cdaf747b60e01b8152fd5b01519150388062000124565b929190899550601f1985168760005284600020946000905b828210620002165750508511620001fb575b50505050811b01815562000136565b01519060f884600019921b161c1916905538808080620001ec565b8484015187558c98909601959384019390810190620001da565b856000528060002083860160051c81019982871062000271575b840160051c01988a905b8a81106200026457505062000108565b60008155018a9062000254565b90995089906200024a565b602286634e487b7160e01b6000525260246000fd5b98607f1698620000f6565b634e487b7160e01b600052604160045260246000fd5b015190503880620000c6565b908b9350601f19831691866000528b6000209260005b8d8282106200030e5750508411620002f5575b505050811b018255620000d8565b015160001983871b60f8161c19169055388080620002e7565b8385015186558f97909501949384019301620002d4565b90915084600052896000208480850160051c8201928c861062000371575b918d91869594930160051c01915b82811062000361575050620000af565b600081558594508d910162000351565b9250819262000343565b634e487b7160e01b600052602260045260246000fd5b92607f169262000098565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200029c57604052565b919080601f840112156200039c5782516001600160401b0381116200029c57602090620003fd601f8201601f19168301620003a1565b928184528282870101116200039c5760005b8181106200042557508260009394955001015290565b85810183015184820184015282016200040f56fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146114c657508163095ea7b31461147e57816318160ddd146114415781631945f729146113d357816323b872dd146112a5578163313ce5671461126b57816339509351146111f157816340c10f1914610f9b5781634b12e64314610efd57816353cea5df14610ea45781636172813414610e3457816370a0823114610df05781637ee688cb14610d975781638b822d8814610c4c5781638e371bef14610bdd57816395d89b4114610a855781639dc29fac1461072c578163a457c2d714610629578163a4d95b641461054a578163a9059cbb146104fb578163c125563514610471578163d8867fc81461021b57508063dd62ed3e146101a85763ed6edc821461012d57600080fd5b346101a457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a45780602092610167611672565b61016f61169a565b73ffffffffffffffffffffffffffffffffffffffff918216835260068652838320911682526001018452205490519015158152f35b5080fd5b50346101a457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a457806020926101e3611672565b6101eb61169a565b73ffffffffffffffffffffffffffffffffffffffff91821683526001865283832091168252845220549051908152f35b9190503461046d57602091827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261046957610257611672565b9273ffffffffffffffffffffffffffffffffffffffff808516801561044157908284928651938480927ffc0c546a0000000000000000000000000000000000000000000000000000000082525afa9182156104375787926103fb575b50309116036103d357338552600681526102cf84848720611957565b156103ab57600690338652526102f48285206000805260205260406000205460a01c90565b7f00000000000000000000000000000000000000000000000000000000000000001061038457505133815273ffffffffffffffffffffffffffffffffffffffff821660208201527f68aafb7a848a8e6e0e8fe992de5812474789ddec166ce06be4de83b3aaa2864e90604090a161036a336118ae565b80610373578280f35b61037e913390611bfe565b38808280f35b90517f2846f78a000000000000000000000000000000000000000000000000000000008152fd5b5090517ffce323d6000000000000000000000000000000000000000000000000000000008152fd5b5090517f5940fcc8000000000000000000000000000000000000000000000000000000008152fd5b9091508281813d8311610430575b61041381836116bd565b8101031261042c5751818116810361042c5790386102b3565b8680fd5b503d610409565b85513d89823e3d90fd5b8385517f4c6ea03c000000000000000000000000000000000000000000000000000000008152fd5b8380fd5b8280fd5b8284346104f857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f857506104aa611672565b6104b261169a565b926002600554146104d157506020926104ca91611909565b9051908152f35b82517f37ed32e8000000000000000000000000000000000000000000000000000000008152fd5b80fd5b5050346101a457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a457602090610543610539611672565b6024359033611dc2565b5160018152f35b9190503461046d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261046d57610584611672565b91338452600660205261059983838620611a20565b1561060257505133815273ffffffffffffffffffffffffffffffffffffffff821660208201527f550ef13f654f6fc7054e7c556d2647cb8838befbfa68640bb3050fc458ad473590604090a16105ee336118ae565b806105f7578280f35b61037e913390611d14565b90517f108a506d000000000000000000000000000000000000000000000000000000008152fd5b905082346104f857827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f857610662611672565b918360243592338152600160205281812073ffffffffffffffffffffffffffffffffffffffff861682526020522054908282106106a95760208561054385850387336121df565b60849060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b9190503461046d57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261046d57610765611672565b906024359173ffffffffffffffffffffffffffffffffffffffff91827f0000000000000000000000000000000000000000000000000000000000000000163303610a5d578282169081156109db5781875260209587875281882054868110610959578690848a528989520382892055856002540360025587837fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8985518a8152a3600260055414610932575060026005558415158061092a575b61082d575b86600160055580f35b610850918752600686526006610844828920611745565b96888052528620611745565b90845190825195875b8381106108a25750505050845b8481106108735780610824565b80836108816001938561186b565b51168581610892575b505001610866565b61089b91611c87565b388561088a565b856108ad828461186b565b51169089915b88858b8086106108e1575b600195146108d0575b50505001610859565b6108d992611d14565b3888856108c7565b8d8b6108f1888d9997989961186b565b51168614610907575050505060010191906108b3565b938594610918858560019a99611d14565b610922828d61186b565b5295506108be565b50600161081f565b90517f37ed32e8000000000000000000000000000000000000000000000000000000008152fd5b508660849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152fd5b517f08c379a0000000000000000000000000000000000000000000000000000000008152602081870152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608490fd5b8490517fb6559712000000000000000000000000000000000000000000000000000000008152fd5b8383346101a457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a457805191809380549160019083821c92828516948515610bd3575b6020958686108114610ba757858952908115610b655750600114610b0d575b610b098787610aff828c03836116bd565b519182918261160c565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610b525750505082610b0994610aff92820101948680610aee565b8054868501880152928601928101610b34565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168887015250505050151560051b8301019250610aff82610b098680610aee565b6024846022857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b93607f1693610acf565b5050346101a457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5050346101a457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a457338252600690602091808352610c93828520611745565b610c9c336118ae565b9181519081841515925b610cae578780f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9033895282885286892086838301610d0973ffffffffffffffffffffffffffffffffffffffff9384610d01848c61186b565b511690611a20565b50867f550ef13f654f6fc7054e7c556d2647cb8838befbfa68640bb3050fc458ad4735610d6785610d3a858d61186b565b518e51338152911673ffffffffffffffffffffffffffffffffffffffff1660208201529081906040820190565b0390a1610d79575b5050500180610ca6565b610d8f92610d8833928a61186b565b5116611d14565b388681610d6f565b5050346101a457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5050346101a45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4576020906104ca610e2f611672565b6118ae565b5050346101a45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4576104ca8160209373ffffffffffffffffffffffffffffffffffffffff610e89611672565b16815260068552206000805260205260406000205460a01c90565b5050346101a457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b8284346104f8576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4578273ffffffffffffffffffffffffffffffffffffffff9283610f4f611672565b16815260068352610f61828220611745565b918051938080860192818752855180945286019401925b828110610f855785850386f35b8351871685529381019392810192600101610f78565b9190503461046d57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261046d57610fd4611672565b906024359073ffffffffffffffffffffffffffffffffffffffff90817f0000000000000000000000000000000000000000000000000000000000000000163303610a5d578184169485156111955761102e84600254611d86565b6002558587528660205281872084815401905585877fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60208551888152a3600260055414610932575060026005558215158061118d575b611093575b85600160055580f35b6110b99086805260066020526110aa818820611745565b95875260066020528620611745565b8451815195875b82811061110b57505050855b8581106110d9575061108a565b80836110e76001938561186b565b51168587826110fa575b505050016110cc565b61110392611bfe565b3885876110f1565b84611116828461186b565b51169089915b878a808510611147575b60019414611137575b5050016110c0565b61114091611c87565b388761112f565b88611156868a9795969761186b565b5116841461116a575050600101919061111c565b839261117a838d60019897611bfe565b8d611185828b61186b565b529450611126565b506001611085565b602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b5050346101a457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a457610543602092611264611232611672565b913381526001865284812073ffffffffffffffffffffffffffffffffffffffff84168252865284602435912054611d86565b90336121df565b5050346101a457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4576020905160128152f35b839150346101a45760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4576112df611672565b6112e761169a565b91846044359473ffffffffffffffffffffffffffffffffffffffff8416815260016020528181203382526020522054907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361134d575b602086610543878787611dc2565b848210611376575091839161136b60209695610543950333836121df565b91939481935061133f565b60649060208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346101a457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4576020918173ffffffffffffffffffffffffffffffffffffffff9182611426611672565b16815260068552818120602435825285522054169051908152f35b5050346101a457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4576020906002549051908152f35b5050346101a457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4576020906105436114bc611672565b60243590336121df565b9291503461046957837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261046957600354600181811c9186908281168015611602575b60209586861082146115d65750848852908115611596575060011461153d575b610b098686610aff828b03836116bd565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106115835750505082610b0994610aff92820101943861152c565b8054868501880152928601928101611566565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001687860152505050151560051b8301019250610aff82610b093861152c565b8360226024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b93607f169361150c565b60208082528251818301819052939260005b85811061165e575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b81810183015184820160400152820161161e565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361169557565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361169557565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176116fe57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff81116116fe5760051b60200190565b906000808052602090838252604090818120548060a01c926117668461172d565b92611773825194856116bd565b84845261177f8561172d565b977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08786019901368a3784988551871161184257866117c3575b5050505050505050565b8551156118155773ffffffffffffffffffffffffffffffffffffffff8095169052600196875b8781106117f657506117b9565b808991855283835286868620541661180e828a61186b565b52016117e9565b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b600484517ff9a99b25000000000000000000000000000000000000000000000000000000008152fd5b805182101561187f5760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002600554146118df5773ffffffffffffffffffffffffffffffffffffffff16600052600060205260406000205490565b60046040517f37ed32e8000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff80921690600092828452600660205260016040852001911683526020526040822054611948575090565b90604091815280602052205490565b9073ffffffffffffffffffffffffffffffffffffffff600183019116600092818452826020526040842054611a1a5760409260019285805282602052848620928354938460a01c9485156000146119f257505086805260205274ffffffffffffffffffffffffffffffffffffffffff81740100000000000000000000000000000000000000000116858720555b855260205201912055600190565b74010000000000000000000000000000000000000000019055508286528486208190556119e4565b50505090565b906001820173ffffffffffffffffffffffffffffffffffffffff8092169260009380855260209183835260409485872054908115611bf457611a6f836000805260205260406000205460a01c90565b8210611b29575b505085805280835284862054908160a01c908115611b0057906001917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820189528552878781205511611ad0575b50845252812055600190565b7fffffffffffffffffffffffff000000000000000000000000000000000000000090868052018486205538611ac4565b600487517f06a2af9e000000000000000000000000000000000000000000000000000000008152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9081611b63856000805260205260406000205460a01c90565b0189528386528789205416908201611b88846000805260205260406000205460a01c90565b9081811015611bcb5782919080611bb9575089805284875260a01b17878920555b8752848452858720553880611a76565b91505088528285528087892055611ba9565b600489517f4e23d035000000000000000000000000000000000000000000000000000000008152fd5b5050505050505090565b9190917f000000000000000000000000000000000000000000000000000000000000000091604051937f7a1f1aa90000000000000000000000000000000000000000000000000000000085526000600486015260248501526044840152600080606485825a9587f115611c7057505050565b603f0260061c10611c7e5750565b3d6000823e3d90fd5b907f0000000000000000000000000000000000000000000000000000000000000000604051927f7a1f1aa900000000000000000000000000000000000000000000000000000000845260009283600486015283602486015260448501528280606486825a9587f115611cfa575b50505050565b603f0260061c10611d0c578080611cf4565b3d90823e3d90fd5b9190917f000000000000000000000000000000000000000000000000000000000000000091604051937f7a1f1aa90000000000000000000000000000000000000000000000000000000085526004850152600060248501526044840152600080606485825a9587f115611c7057505050565b91908201809211611d9357565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9173ffffffffffffffffffffffffffffffffffffffff808416801561215b578184169485156120d75760009082825260209282845260409384842054878110612054578790838652858352038585205588845284842087815401905588827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8388518b8152a360026005541461202b57600260055586151580612021575b611e75575b5050505050505050506001600555565b6006918452818152611e88858520611745565b98845252611e97838320611745565b92875191845198845b848110611eee5750505050505b858110611ebc57808080611e65565b8083611eca6001938561186b565b5116858782611edd575b50505001611ead565b611ee692611bfe565b388587611ed4565b808a8a858e8c8b81611f018f998b61186b565b51169581925b848410611f36575b5050506001965014611f25575b50505001611ea0565b611f2e92611d14565b388a85611f1c565b611f45848b989796959861186b565b51168714611f6957505050505060019192935001908a858e8b95948f8c908f611f07565b94919293947f00000000000000000000000000000000000000000000000000000000000000008c51917f7a1f1aa900000000000000000000000000000000000000000000000000000000835286600484015260248301528660448301525a8380606485828d87f115611ff2575b505050611fe58260019961186b565b528f8d97508c908f611f0f565b93979899509450945050603f91500260061c1061201957858e8b9594938b8f948080611fd6565b3d89823e3d90fd5b5088821415611e60565b600485517f37ed32e8000000000000000000000000000000000000000000000000000000008152fd5b6084828751907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff8091169182156122d1571691821561224d5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fdfea26469706673582212202ccde52373e82050c255373476c61164e77b1cc8b3bce60d248a35c01039b8e064736f6c63430008130033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x39C JUMPI PUSH3 0x27C4 DUP1 CODESIZE SUB DUP1 PUSH3 0x1D DUP2 PUSH3 0x3A1 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH3 0x39C JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 GT PUSH3 0x39C JUMPI DUP3 PUSH3 0x4E SWAP2 DUP6 ADD PUSH3 0x3C7 JUMP JUMPDEST SWAP3 PUSH1 0x20 SWAP3 DUP4 DUP3 ADD MLOAD SWAP1 DUP4 DUP3 GT PUSH3 0x39C JUMPI PUSH3 0x6C SWAP2 DUP4 ADD PUSH3 0x3C7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 DUP4 ADD MLOAD SWAP3 ADD MLOAD SWAP3 DUP6 MLOAD DUP2 DUP2 GT PUSH3 0x29C JUMPI PUSH1 0x3 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x1 SWAP9 DUP10 DUP4 DUP2 SHR SWAP4 AND DUP1 ISZERO PUSH3 0x391 JUMPI JUMPDEST DUP10 DUP5 LT EQ PUSH3 0x37B JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP4 DUP5 DUP2 GT PUSH3 0x325 JUMPI JUMPDEST POP DUP10 SWAP1 DUP5 DUP4 GT PUSH1 0x1 EQ PUSH3 0x2BE JUMPI PUSH1 0x0 SWAP3 PUSH3 0x2B2 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP6 SHL SHR NOT AND SWAP1 DUP10 SHL OR DUP3 SSTORE JUMPDEST DUP4 MLOAD SWAP3 DUP4 GT PUSH3 0x29C JUMPI PUSH1 0x4 SWAP4 DUP5 SLOAD SWAP8 DUP10 DUP10 DUP2 SHR SWAP10 AND DUP1 ISZERO PUSH3 0x291 JUMPI JUMPDEST DUP2 DUP11 LT EQ PUSH3 0x27C JUMPI DUP3 DUP10 GT PUSH3 0x230 JUMPI JUMPDEST DUP5 SWAP6 SWAP7 SWAP8 SWAP9 POP DUP1 SWAP3 DUP6 GT PUSH1 0x1 EQ PUSH3 0x1C2 JUMPI POP PUSH1 0x0 SWAP4 PUSH3 0x1B6 JUMPI JUMPDEST POP POP DUP3 DUP8 SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR DUP2 SSTORE JUMPDEST DUP2 ISZERO PUSH3 0x1A7 JUMPI POP PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH1 0x5 SSTORE CALLER PUSH1 0xC0 MSTORE PUSH1 0x40 MLOAD PUSH2 0x238A SWAP1 DUP2 PUSH3 0x43A DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x2F6 ADD MSTORE PUSH2 0xEDA ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0xDCD ADD MSTORE DUP2 DUP2 PUSH2 0x1C03 ADD MSTORE DUP2 DUP2 PUSH2 0x1C8A ADD MSTORE DUP2 DUP2 PUSH2 0x1D19 ADD MSTORE PUSH2 0x1F70 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x783 ADD MSTORE DUP2 DUP2 PUSH2 0xC28 ADD MSTORE PUSH2 0xFF2 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCDAF747B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST ADD MLOAD SWAP2 POP CODESIZE DUP1 PUSH3 0x124 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 DUP10 SWAP6 POP PUSH1 0x1F NOT DUP6 AND DUP8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0x216 JUMPI POP POP DUP6 GT PUSH3 0x1FB JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH3 0x136 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x1EC JUMP JUMPDEST DUP5 DUP5 ADD MLOAD DUP8 SSTORE DUP13 SWAP9 SWAP1 SWAP7 ADD SWAP6 SWAP4 DUP5 ADD SWAP4 SWAP1 DUP2 ADD SWAP1 PUSH3 0x1DA JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 DUP4 DUP7 ADD PUSH1 0x5 SHR DUP2 ADD SWAP10 DUP3 DUP8 LT PUSH3 0x271 JUMPI JUMPDEST DUP5 ADD PUSH1 0x5 SHR ADD SWAP9 DUP11 SWAP1 JUMPDEST DUP11 DUP2 LT PUSH3 0x264 JUMPI POP POP PUSH3 0x108 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP11 SWAP1 PUSH3 0x254 JUMP JUMPDEST SWAP1 SWAP10 POP DUP10 SWAP1 PUSH3 0x24A JUMP JUMPDEST PUSH1 0x22 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP9 PUSH1 0x7F AND SWAP9 PUSH3 0xF6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xC6 JUMP JUMPDEST SWAP1 DUP12 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP7 PUSH1 0x0 MSTORE DUP12 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP14 DUP3 DUP3 LT PUSH3 0x30E JUMPI POP POP DUP5 GT PUSH3 0x2F5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH3 0xD8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP8 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x2E7 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP16 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x2D4 JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP13 DUP7 LT PUSH3 0x371 JUMPI JUMPDEST SWAP2 DUP14 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x361 JUMPI POP POP PUSH3 0xAF JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP14 SWAP2 ADD PUSH3 0x351 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x343 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH3 0x98 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x29C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0x39C JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x29C JUMPI PUSH1 0x20 SWAP1 PUSH3 0x3FD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD PUSH3 0x3A1 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH3 0x39C JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x425 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0x40F JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x14C6 JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x147E JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x1441 JUMPI DUP2 PUSH4 0x1945F729 EQ PUSH2 0x13D3 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x12A5 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x126B JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x11F1 JUMPI DUP2 PUSH4 0x40C10F19 EQ PUSH2 0xF9B JUMPI DUP2 PUSH4 0x4B12E643 EQ PUSH2 0xEFD JUMPI DUP2 PUSH4 0x53CEA5DF EQ PUSH2 0xEA4 JUMPI DUP2 PUSH4 0x61728134 EQ PUSH2 0xE34 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0xDF0 JUMPI DUP2 PUSH4 0x7EE688CB EQ PUSH2 0xD97 JUMPI DUP2 PUSH4 0x8B822D88 EQ PUSH2 0xC4C JUMPI DUP2 PUSH4 0x8E371BEF EQ PUSH2 0xBDD JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0xA85 JUMPI DUP2 PUSH4 0x9DC29FAC EQ PUSH2 0x72C JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x629 JUMPI DUP2 PUSH4 0xA4D95B64 EQ PUSH2 0x54A JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0x4FB JUMPI DUP2 PUSH4 0xC1255635 EQ PUSH2 0x471 JUMPI DUP2 PUSH4 0xD8867FC8 EQ PUSH2 0x21B JUMPI POP DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1A8 JUMPI PUSH4 0xED6EDC82 EQ PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x167 PUSH2 0x1672 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x169A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x6 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE PUSH1 0x1 ADD DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A4 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x1E3 PUSH2 0x1672 JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x169A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x46D JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x469 JUMPI PUSH2 0x257 PUSH2 0x1672 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND DUP1 ISZERO PUSH2 0x441 JUMPI SWAP1 DUP3 DUP5 SWAP3 DUP7 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH32 0xFC0C546A00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x437 JUMPI DUP8 SWAP3 PUSH2 0x3FB JUMPI JUMPDEST POP ADDRESS SWAP2 AND SUB PUSH2 0x3D3 JUMPI CALLER DUP6 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH2 0x2CF DUP5 DUP5 DUP8 KECCAK256 PUSH2 0x1957 JUMP JUMPDEST ISZERO PUSH2 0x3AB JUMPI PUSH1 0x6 SWAP1 CALLER DUP7 MSTORE MSTORE PUSH2 0x2F4 DUP3 DUP6 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xA0 SHR SWAP1 JUMP JUMPDEST PUSH32 0x0 LT PUSH2 0x384 JUMPI POP MLOAD CALLER DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x68AAFB7A848A8E6E0E8FE992DE5812474789DDEC166CE06BE4DE83B3AAA2864E SWAP1 PUSH1 0x40 SWAP1 LOG1 PUSH2 0x36A CALLER PUSH2 0x18AE JUMP JUMPDEST DUP1 PUSH2 0x373 JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH2 0x37E SWAP2 CALLER SWAP1 PUSH2 0x1BFE JUMP JUMPDEST CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST SWAP1 MLOAD PUSH32 0x2846F78A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP SWAP1 MLOAD PUSH32 0xFCE323D600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP SWAP1 MLOAD PUSH32 0x5940FCC800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x430 JUMPI JUMPDEST PUSH2 0x413 DUP2 DUP4 PUSH2 0x16BD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42C JUMPI MLOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x42C JUMPI SWAP1 CODESIZE PUSH2 0x2B3 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x409 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP6 MLOAD PUSH32 0x4C6EA03C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x4F8 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F8 JUMPI POP PUSH2 0x4AA PUSH2 0x1672 JUMP JUMPDEST PUSH2 0x4B2 PUSH2 0x169A JUMP JUMPDEST SWAP3 PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x4D1 JUMPI POP PUSH1 0x20 SWAP3 PUSH2 0x4CA SWAP2 PUSH2 0x1909 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 MLOAD PUSH32 0x37ED32E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x543 PUSH2 0x539 PUSH2 0x1672 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1DC2 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x46D JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x46D JUMPI PUSH2 0x584 PUSH2 0x1672 JUMP JUMPDEST SWAP2 CALLER DUP5 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x599 DUP4 DUP4 DUP7 KECCAK256 PUSH2 0x1A20 JUMP JUMPDEST ISZERO PUSH2 0x602 JUMPI POP MLOAD CALLER DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x550EF13F654F6FC7054E7C556D2647CB8838BEFBFA68640BB3050FC458AD4735 SWAP1 PUSH1 0x40 SWAP1 LOG1 PUSH2 0x5EE CALLER PUSH2 0x18AE JUMP JUMPDEST DUP1 PUSH2 0x5F7 JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH2 0x37E SWAP2 CALLER SWAP1 PUSH2 0x1D14 JUMP JUMPDEST SWAP1 MLOAD PUSH32 0x108A506D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x4F8 JUMPI DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F8 JUMPI PUSH2 0x662 PUSH2 0x1672 JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x6A9 JUMPI PUSH1 0x20 DUP6 PUSH2 0x543 DUP6 DUP6 SUB DUP8 CALLER PUSH2 0x21DF JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x46D JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x46D JUMPI PUSH2 0x765 PUSH2 0x1672 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH32 0x0 AND CALLER SUB PUSH2 0xA5D JUMPI DUP3 DUP3 AND SWAP1 DUP2 ISZERO PUSH2 0x9DB JUMPI DUP2 DUP8 MSTORE PUSH1 0x20 SWAP6 DUP8 DUP8 MSTORE DUP2 DUP9 KECCAK256 SLOAD DUP7 DUP2 LT PUSH2 0x959 JUMPI DUP7 SWAP1 DUP5 DUP11 MSTORE DUP10 DUP10 MSTORE SUB DUP3 DUP10 KECCAK256 SSTORE DUP6 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE DUP8 DUP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP10 DUP6 MLOAD DUP11 DUP2 MSTORE LOG3 PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x932 JUMPI POP PUSH1 0x2 PUSH1 0x5 SSTORE DUP5 ISZERO ISZERO DUP1 PUSH2 0x92A JUMPI JUMPDEST PUSH2 0x82D JUMPI JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x5 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x850 SWAP2 DUP8 MSTORE PUSH1 0x6 DUP7 MSTORE PUSH1 0x6 PUSH2 0x844 DUP3 DUP10 KECCAK256 PUSH2 0x1745 JUMP JUMPDEST SWAP7 DUP9 DUP1 MSTORE MSTORE DUP7 KECCAK256 PUSH2 0x1745 JUMP JUMPDEST SWAP1 DUP5 MLOAD SWAP1 DUP3 MLOAD SWAP6 DUP8 JUMPDEST DUP4 DUP2 LT PUSH2 0x8A2 JUMPI POP POP POP POP DUP5 JUMPDEST DUP5 DUP2 LT PUSH2 0x873 JUMPI DUP1 PUSH2 0x824 JUMP JUMPDEST DUP1 DUP4 PUSH2 0x881 PUSH1 0x1 SWAP4 DUP6 PUSH2 0x186B JUMP JUMPDEST MLOAD AND DUP6 DUP2 PUSH2 0x892 JUMPI JUMPDEST POP POP ADD PUSH2 0x866 JUMP JUMPDEST PUSH2 0x89B SWAP2 PUSH2 0x1C87 JUMP JUMPDEST CODESIZE DUP6 PUSH2 0x88A JUMP JUMPDEST DUP6 PUSH2 0x8AD DUP3 DUP5 PUSH2 0x186B JUMP JUMPDEST MLOAD AND SWAP1 DUP10 SWAP2 JUMPDEST DUP9 DUP6 DUP12 DUP1 DUP7 LT PUSH2 0x8E1 JUMPI JUMPDEST PUSH1 0x1 SWAP6 EQ PUSH2 0x8D0 JUMPI JUMPDEST POP POP POP ADD PUSH2 0x859 JUMP JUMPDEST PUSH2 0x8D9 SWAP3 PUSH2 0x1D14 JUMP JUMPDEST CODESIZE DUP9 DUP6 PUSH2 0x8C7 JUMP JUMPDEST DUP14 DUP12 PUSH2 0x8F1 DUP9 DUP14 SWAP10 SWAP8 SWAP9 SWAP10 PUSH2 0x186B JUMP JUMPDEST MLOAD AND DUP7 EQ PUSH2 0x907 JUMPI POP POP POP POP PUSH1 0x1 ADD SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP4 DUP6 SWAP5 PUSH2 0x918 DUP6 DUP6 PUSH1 0x1 SWAP11 SWAP10 PUSH2 0x1D14 JUMP JUMPDEST PUSH2 0x922 DUP3 DUP14 PUSH2 0x186B JUMP JUMPDEST MSTORE SWAP6 POP PUSH2 0x8BE JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x81F JUMP JUMPDEST SWAP1 MLOAD PUSH32 0x37ED32E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP DUP7 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP5 SWAP1 MLOAD PUSH32 0xB655971200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1A4 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 DUP3 SHR SWAP3 DUP3 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0xBD3 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0xBA7 JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xB65 JUMPI POP PUSH1 0x1 EQ PUSH2 0xB0D JUMPI JUMPDEST PUSH2 0xB09 DUP8 DUP8 PUSH2 0xAFF DUP3 DUP13 SUB DUP4 PUSH2 0x16BD JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x160C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xB52 JUMPI POP POP POP DUP3 PUSH2 0xB09 SWAP5 PUSH2 0xAFF SWAP3 DUP3 ADD ADD SWAP5 DUP7 DUP1 PUSH2 0xAEE JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xB34 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xAFF DUP3 PUSH2 0xB09 DUP7 DUP1 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xACF JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI CALLER DUP3 MSTORE PUSH1 0x6 SWAP1 PUSH1 0x20 SWAP2 DUP1 DUP4 MSTORE PUSH2 0xC93 DUP3 DUP6 KECCAK256 PUSH2 0x1745 JUMP JUMPDEST PUSH2 0xC9C CALLER PUSH2 0x18AE JUMP JUMPDEST SWAP2 DUP2 MLOAD SWAP1 DUP2 DUP5 ISZERO ISZERO SWAP3 JUMPDEST PUSH2 0xCAE JUMPI DUP8 DUP1 RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 CALLER DUP10 MSTORE DUP3 DUP9 MSTORE DUP7 DUP10 KECCAK256 DUP7 DUP4 DUP4 ADD PUSH2 0xD09 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 PUSH2 0xD01 DUP5 DUP13 PUSH2 0x186B JUMP JUMPDEST MLOAD AND SWAP1 PUSH2 0x1A20 JUMP JUMPDEST POP DUP7 PUSH32 0x550EF13F654F6FC7054E7C556D2647CB8838BEFBFA68640BB3050FC458AD4735 PUSH2 0xD67 DUP6 PUSH2 0xD3A DUP6 DUP14 PUSH2 0x186B JUMP JUMPDEST MLOAD DUP15 MLOAD CALLER DUP2 MSTORE SWAP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x40 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0xD79 JUMPI JUMPDEST POP POP POP ADD DUP1 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0xD8F SWAP3 PUSH2 0xD88 CALLER SWAP3 DUP11 PUSH2 0x186B JUMP JUMPDEST MLOAD AND PUSH2 0x1D14 JUMP JUMPDEST CODESIZE DUP7 DUP2 PUSH2 0xD6F JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x4CA PUSH2 0xE2F PUSH2 0x1672 JUMP JUMPDEST PUSH2 0x18AE JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH2 0x4CA DUP2 PUSH1 0x20 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xE89 PUSH2 0x1672 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 DUP6 MSTORE KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xA0 SHR SWAP1 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x4F8 JUMPI PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 PUSH2 0xF4F PUSH2 0x1672 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH2 0xF61 DUP3 DUP3 KECCAK256 PUSH2 0x1745 JUMP JUMPDEST SWAP2 DUP1 MLOAD SWAP4 DUP1 DUP1 DUP7 ADD SWAP3 DUP2 DUP8 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE DUP7 ADD SWAP5 ADD SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0xF85 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP8 AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xF78 JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x46D JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x46D JUMPI PUSH2 0xFD4 PUSH2 0x1672 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0xA5D JUMPI DUP2 DUP5 AND SWAP5 DUP6 ISZERO PUSH2 0x1195 JUMPI PUSH2 0x102E DUP5 PUSH1 0x2 SLOAD PUSH2 0x1D86 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP6 DUP8 MSTORE DUP7 PUSH1 0x20 MSTORE DUP2 DUP8 KECCAK256 DUP5 DUP2 SLOAD ADD SWAP1 SSTORE DUP6 DUP8 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP6 MLOAD DUP9 DUP2 MSTORE LOG3 PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x932 JUMPI POP PUSH1 0x2 PUSH1 0x5 SSTORE DUP3 ISZERO ISZERO DUP1 PUSH2 0x118D JUMPI JUMPDEST PUSH2 0x1093 JUMPI JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x5 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x10B9 SWAP1 DUP7 DUP1 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x10AA DUP2 DUP9 KECCAK256 PUSH2 0x1745 JUMP JUMPDEST SWAP6 DUP8 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP7 KECCAK256 PUSH2 0x1745 JUMP JUMPDEST DUP5 MLOAD DUP2 MLOAD SWAP6 DUP8 JUMPDEST DUP3 DUP2 LT PUSH2 0x110B JUMPI POP POP POP DUP6 JUMPDEST DUP6 DUP2 LT PUSH2 0x10D9 JUMPI POP PUSH2 0x108A JUMP JUMPDEST DUP1 DUP4 PUSH2 0x10E7 PUSH1 0x1 SWAP4 DUP6 PUSH2 0x186B JUMP JUMPDEST MLOAD AND DUP6 DUP8 DUP3 PUSH2 0x10FA JUMPI JUMPDEST POP POP POP ADD PUSH2 0x10CC JUMP JUMPDEST PUSH2 0x1103 SWAP3 PUSH2 0x1BFE JUMP JUMPDEST CODESIZE DUP6 DUP8 PUSH2 0x10F1 JUMP JUMPDEST DUP5 PUSH2 0x1116 DUP3 DUP5 PUSH2 0x186B JUMP JUMPDEST MLOAD AND SWAP1 DUP10 SWAP2 JUMPDEST DUP8 DUP11 DUP1 DUP6 LT PUSH2 0x1147 JUMPI JUMPDEST PUSH1 0x1 SWAP5 EQ PUSH2 0x1137 JUMPI JUMPDEST POP POP ADD PUSH2 0x10C0 JUMP JUMPDEST PUSH2 0x1140 SWAP2 PUSH2 0x1C87 JUMP JUMPDEST CODESIZE DUP8 PUSH2 0x112F JUMP JUMPDEST DUP9 PUSH2 0x1156 DUP7 DUP11 SWAP8 SWAP6 SWAP7 SWAP8 PUSH2 0x186B JUMP JUMPDEST MLOAD AND DUP5 EQ PUSH2 0x116A JUMPI POP POP PUSH1 0x1 ADD SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST DUP4 SWAP3 PUSH2 0x117A DUP4 DUP14 PUSH1 0x1 SWAP9 SWAP8 PUSH2 0x1BFE JUMP JUMPDEST DUP14 PUSH2 0x1185 DUP3 DUP12 PUSH2 0x186B JUMP JUMPDEST MSTORE SWAP5 POP PUSH2 0x1126 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1085 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH2 0x543 PUSH1 0x20 SWAP3 PUSH2 0x1264 PUSH2 0x1232 PUSH2 0x1672 JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE DUP5 DUP2 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP3 MSTORE DUP7 MSTORE DUP5 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 SLOAD PUSH2 0x1D86 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x21DF JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH2 0x12DF PUSH2 0x1672 JUMP JUMPDEST PUSH2 0x12E7 PUSH2 0x169A JUMP JUMPDEST SWAP2 DUP5 PUSH1 0x44 CALLDATALOAD SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x134D JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x543 DUP8 DUP8 DUP8 PUSH2 0x1DC2 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x1376 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x136B PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x543 SWAP6 SUB CALLER DUP4 PUSH2 0x21DF JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x133F JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH2 0x1426 PUSH2 0x1672 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 DUP6 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x543 PUSH2 0x14BC PUSH2 0x1672 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x21DF JUMP JUMPDEST SWAP3 SWAP2 POP CALLVALUE PUSH2 0x469 JUMPI DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x469 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 DUP7 SWAP1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1602 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0x15D6 JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1596 JUMPI POP PUSH1 0x1 EQ PUSH2 0x153D JUMPI JUMPDEST PUSH2 0xB09 DUP7 DUP7 PUSH2 0xAFF DUP3 DUP12 SUB DUP4 PUSH2 0x16BD JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x1583 JUMPI POP POP POP DUP3 PUSH2 0xB09 SWAP5 PUSH2 0xAFF SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x152C JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x1566 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xAFF DUP3 PUSH2 0xB09 CODESIZE PUSH2 0x152C JUMP JUMPDEST DUP4 PUSH1 0x22 PUSH1 0x24 SWAP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x165E JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 PUSH1 0x0 PUSH1 0x40 DUP1 SWAP7 SWAP8 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x161E JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x1695 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x1695 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16FE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x16FE JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x20 SWAP1 DUP4 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 DUP2 KECCAK256 SLOAD DUP1 PUSH1 0xA0 SHR SWAP3 PUSH2 0x1766 DUP5 PUSH2 0x172D JUMP JUMPDEST SWAP3 PUSH2 0x1773 DUP3 MLOAD SWAP5 DUP6 PUSH2 0x16BD JUMP JUMPDEST DUP5 DUP5 MSTORE PUSH2 0x177F DUP6 PUSH2 0x172D JUMP JUMPDEST SWAP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP8 DUP7 ADD SWAP10 ADD CALLDATASIZE DUP11 CALLDATACOPY DUP5 SWAP9 DUP6 MLOAD DUP8 GT PUSH2 0x1842 JUMPI DUP7 PUSH2 0x17C3 JUMPI JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP6 MLOAD ISZERO PUSH2 0x1815 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP6 AND SWAP1 MSTORE PUSH1 0x1 SWAP7 DUP8 JUMPDEST DUP8 DUP2 LT PUSH2 0x17F6 JUMPI POP PUSH2 0x17B9 JUMP JUMPDEST DUP1 DUP10 SWAP2 DUP6 MSTORE DUP4 DUP4 MSTORE DUP7 DUP7 DUP7 KECCAK256 SLOAD AND PUSH2 0x180E DUP3 DUP11 PUSH2 0x186B JUMP JUMPDEST MSTORE ADD PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x4 DUP5 MLOAD PUSH32 0xF9A99B2500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x187F JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x18DF JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x37ED32E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP1 PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 DUP6 KECCAK256 ADD SWAP2 AND DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH2 0x1948 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 SWAP2 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 DUP4 ADD SWAP2 AND PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD PUSH2 0x1A1A JUMPI PUSH1 0x40 SWAP3 PUSH1 0x1 SWAP3 DUP6 DUP1 MSTORE DUP3 PUSH1 0x20 MSTORE DUP5 DUP7 KECCAK256 SWAP3 DUP4 SLOAD SWAP4 DUP5 PUSH1 0xA0 SHR SWAP5 DUP6 ISZERO PUSH1 0x0 EQ PUSH2 0x19F2 JUMPI POP POP DUP7 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 PUSH21 0x10000000000000000000000000000000000000000 ADD AND DUP6 DUP8 KECCAK256 SSTORE JUMPDEST DUP6 MSTORE PUSH1 0x20 MSTORE ADD SWAP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH21 0x10000000000000000000000000000000000000000 ADD SWAP1 SSTORE POP DUP3 DUP7 MSTORE DUP5 DUP7 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x19E4 JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP3 PUSH1 0x0 SWAP4 DUP1 DUP6 MSTORE PUSH1 0x20 SWAP2 DUP4 DUP4 MSTORE PUSH1 0x40 SWAP5 DUP6 DUP8 KECCAK256 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x1BF4 JUMPI PUSH2 0x1A6F DUP4 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xA0 SHR SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x1B29 JUMPI JUMPDEST POP POP DUP6 DUP1 MSTORE DUP1 DUP4 MSTORE DUP5 DUP7 KECCAK256 SLOAD SWAP1 DUP2 PUSH1 0xA0 SHR SWAP1 DUP2 ISZERO PUSH2 0x1B00 JUMPI SWAP1 PUSH1 0x1 SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD DUP10 MSTORE DUP6 MSTORE DUP8 DUP8 DUP2 KECCAK256 SSTORE GT PUSH2 0x1AD0 JUMPI JUMPDEST POP DUP5 MSTORE MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP7 DUP1 MSTORE ADD DUP5 DUP7 KECCAK256 SSTORE CODESIZE PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x4 DUP8 MLOAD PUSH32 0x6A2AF9E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH2 0x1B63 DUP6 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xA0 SHR SWAP1 JUMP JUMPDEST ADD DUP10 MSTORE DUP4 DUP7 MSTORE DUP8 DUP10 KECCAK256 SLOAD AND SWAP1 DUP3 ADD PUSH2 0x1B88 DUP5 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xA0 SHR SWAP1 JUMP JUMPDEST SWAP1 DUP2 DUP2 LT ISZERO PUSH2 0x1BCB JUMPI DUP3 SWAP2 SWAP1 DUP1 PUSH2 0x1BB9 JUMPI POP DUP10 DUP1 MSTORE DUP5 DUP8 MSTORE PUSH1 0xA0 SHL OR DUP8 DUP10 KECCAK256 SSTORE JUMPDEST DUP8 MSTORE DUP5 DUP5 MSTORE DUP6 DUP8 KECCAK256 SSTORE CODESIZE DUP1 PUSH2 0x1A76 JUMP JUMPDEST SWAP2 POP POP DUP9 MSTORE DUP3 DUP6 MSTORE DUP1 DUP8 DUP10 KECCAK256 SSTORE PUSH2 0x1BA9 JUMP JUMPDEST PUSH1 0x4 DUP10 MLOAD PUSH32 0x4E23D03500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH32 0x0 SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH32 0x7A1F1AA900000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x0 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x0 DUP1 PUSH1 0x64 DUP6 DUP3 GAS SWAP6 DUP8 CALL ISZERO PUSH2 0x1C70 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x3F MUL PUSH1 0x6 SHR LT PUSH2 0x1C7E JUMPI POP JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 PUSH32 0x0 PUSH1 0x40 MLOAD SWAP3 PUSH32 0x7A1F1AA900000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x0 SWAP3 DUP4 PUSH1 0x4 DUP7 ADD MSTORE DUP4 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE DUP3 DUP1 PUSH1 0x64 DUP7 DUP3 GAS SWAP6 DUP8 CALL ISZERO PUSH2 0x1CFA JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3F MUL PUSH1 0x6 SHR LT PUSH2 0x1D0C JUMPI DUP1 DUP1 PUSH2 0x1CF4 JUMP JUMPDEST RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH32 0x0 SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH32 0x7A1F1AA900000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x0 DUP1 PUSH1 0x64 DUP6 DUP3 GAS SWAP6 DUP8 CALL ISZERO PUSH2 0x1C70 JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1D93 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND DUP1 ISZERO PUSH2 0x215B JUMPI DUP2 DUP5 AND SWAP5 DUP6 ISZERO PUSH2 0x20D7 JUMPI PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP3 DUP3 DUP5 MSTORE PUSH1 0x40 SWAP4 DUP5 DUP5 KECCAK256 SLOAD DUP8 DUP2 LT PUSH2 0x2054 JUMPI DUP8 SWAP1 DUP4 DUP7 MSTORE DUP6 DUP4 MSTORE SUB DUP6 DUP6 KECCAK256 SSTORE DUP9 DUP5 MSTORE DUP5 DUP5 KECCAK256 DUP8 DUP2 SLOAD ADD SWAP1 SSTORE DUP9 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 DUP9 MLOAD DUP12 DUP2 MSTORE LOG3 PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x202B JUMPI PUSH1 0x2 PUSH1 0x5 SSTORE DUP7 ISZERO ISZERO DUP1 PUSH2 0x2021 JUMPI JUMPDEST PUSH2 0x1E75 JUMPI JUMPDEST POP POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x6 SWAP2 DUP5 MSTORE DUP2 DUP2 MSTORE PUSH2 0x1E88 DUP6 DUP6 KECCAK256 PUSH2 0x1745 JUMP JUMPDEST SWAP9 DUP5 MSTORE MSTORE PUSH2 0x1E97 DUP4 DUP4 KECCAK256 PUSH2 0x1745 JUMP JUMPDEST SWAP3 DUP8 MLOAD SWAP2 DUP5 MLOAD SWAP9 DUP5 JUMPDEST DUP5 DUP2 LT PUSH2 0x1EEE JUMPI POP POP POP POP POP JUMPDEST DUP6 DUP2 LT PUSH2 0x1EBC JUMPI DUP1 DUP1 DUP1 PUSH2 0x1E65 JUMP JUMPDEST DUP1 DUP4 PUSH2 0x1ECA PUSH1 0x1 SWAP4 DUP6 PUSH2 0x186B JUMP JUMPDEST MLOAD AND DUP6 DUP8 DUP3 PUSH2 0x1EDD JUMPI JUMPDEST POP POP POP ADD PUSH2 0x1EAD JUMP JUMPDEST PUSH2 0x1EE6 SWAP3 PUSH2 0x1BFE JUMP JUMPDEST CODESIZE DUP6 DUP8 PUSH2 0x1ED4 JUMP JUMPDEST DUP1 DUP11 DUP11 DUP6 DUP15 DUP13 DUP12 DUP2 PUSH2 0x1F01 DUP16 SWAP10 DUP12 PUSH2 0x186B JUMP JUMPDEST MLOAD AND SWAP6 DUP2 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1F36 JUMPI JUMPDEST POP POP POP PUSH1 0x1 SWAP7 POP EQ PUSH2 0x1F25 JUMPI JUMPDEST POP POP POP ADD PUSH2 0x1EA0 JUMP JUMPDEST PUSH2 0x1F2E SWAP3 PUSH2 0x1D14 JUMP JUMPDEST CODESIZE DUP11 DUP6 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x1F45 DUP5 DUP12 SWAP9 SWAP8 SWAP7 SWAP6 SWAP9 PUSH2 0x186B JUMP JUMPDEST MLOAD AND DUP8 EQ PUSH2 0x1F69 JUMPI POP POP POP POP POP PUSH1 0x1 SWAP2 SWAP3 SWAP4 POP ADD SWAP1 DUP11 DUP6 DUP15 DUP12 SWAP6 SWAP5 DUP16 DUP13 SWAP1 DUP16 PUSH2 0x1F07 JUMP JUMPDEST SWAP5 SWAP2 SWAP3 SWAP4 SWAP5 PUSH32 0x0 DUP13 MLOAD SWAP2 PUSH32 0x7A1F1AA900000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP7 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE DUP7 PUSH1 0x44 DUP4 ADD MSTORE GAS DUP4 DUP1 PUSH1 0x64 DUP6 DUP3 DUP14 DUP8 CALL ISZERO PUSH2 0x1FF2 JUMPI JUMPDEST POP POP POP PUSH2 0x1FE5 DUP3 PUSH1 0x1 SWAP10 PUSH2 0x186B JUMP JUMPDEST MSTORE DUP16 DUP14 SWAP8 POP DUP13 SWAP1 DUP16 PUSH2 0x1F0F JUMP JUMPDEST SWAP4 SWAP8 SWAP9 SWAP10 POP SWAP5 POP SWAP5 POP POP PUSH1 0x3F SWAP2 POP MUL PUSH1 0x6 SHR LT PUSH2 0x2019 JUMPI DUP6 DUP15 DUP12 SWAP6 SWAP5 SWAP4 DUP12 DUP16 SWAP5 DUP1 DUP1 PUSH2 0x1FD6 JUMP JUMPDEST RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP9 DUP3 EQ ISZERO PUSH2 0x1E60 JUMP JUMPDEST PUSH1 0x4 DUP6 MLOAD PUSH32 0x37ED32E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x84 DUP3 DUP8 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP2 DUP3 ISZERO PUSH2 0x22D1 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x224D JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xCD 0xE5 0x23 PUSH20 0xE82050C255373476C61164E77B1CC8B3BCE60D24 DUP11 CALLDATALOAD 0xC0 LT CODECOPY 0xB8 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"442:1374:11:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;442:1374:11;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2046:13:7;442:1374:11;;;;;;;;;;;;;;;;-1:-1:-1;442:1374:11;;;;;;;;;;;;;;;-1:-1:-1;442:1374:11;;;;;;;;;;-1:-1:-1;442:1374:11;;;;-1:-1:-1;;;;442:1374:11;;;;;;;;;;;;;;;;;;;;2069:17:7;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;442:1374:11;;;;;;;;;;;;;;;;;;;;;1790:18:2;;1786:49;;1845:33;442:1374:11;1845:33:2;1888:41;;1939:6;307:1:6;1229:10:11;1215:24;;442:1374;;;;;;;;;;;;;;;;;;;1888:41:2;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;;1215:24;442:1374;;;;;;;;;;;;;;;;1786:49:2;442:1374:11;;-1:-1:-1;;;1817:18:2;;;442:1374:11;;;;-1:-1:-1;442:1374:11;;;;;;;;;;;;;;;;-1:-1:-1;442:1374:11;;-1:-1:-1;442:1374:11;;-1:-1:-1;442:1374:11;;;;;;;;;;-1:-1:-1;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;442:1374:11;;-1:-1:-1;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;442:1374:11;;;;;;;;;;-1:-1:-1;442:1374:11;;;;;;;;;;-1:-1:-1;442:1374:11;;;-1:-1:-1;442:1374:11;;;;;;;;;;;;-1:-1:-1;442:1374:11;;2069:17:7;442:1374:11;;-1:-1:-1;442:1374:11;;;;;-1:-1:-1;442:1374:11;;;;;;;;;;;;;;;-1:-1:-1;442:1374:11;;-1:-1:-1;442:1374:11;;-1:-1:-1;442:1374:11;;;;;;;;;;-1:-1:-1;442:1374:11;;;;;;;;;;;;;;;;-1:-1:-1;;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;442:1374:11;;-1:-1:-1;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;442:1374:11;;;;-1:-1:-1;442:1374:11;;;;;;;;;;;;;;;;-1:-1:-1;442:1374:11;;;;;-1:-1:-1;442:1374:11;;;;;;;;;-1:-1:-1;442:1374:11;;;;;;;;;-1:-1:-1;;442:1374:11;;;-1:-1:-1;;;;;442:1374:11;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;442:1374:11;;;;;;;;;;-1:-1:-1;;442:1374:11;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;442:1374:11;;;;;;;;-1:-1:-1;442:1374:11;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":5786,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_16994":{"entryPoint":5746,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":5644,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":5933,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":7558,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":5821,"id":null,"parameterSlots":2,"returnSlots":0},"fun_add":{"entryPoint":6487,"id":482,"parameterSlots":2,"returnSlots":1},"fun_approve":{"entryPoint":8671,"id":2027,"parameterSlots":3,"returnSlots":0},"fun_get":{"entryPoint":5957,"id":87,"parameterSlots":1,"returnSlots":1},"fun_length":{"entryPoint":null,"id":30,"parameterSlots":1,"returnSlots":1},"fun_pluginBalanceOf_inner":{"entryPoint":6409,"id":null,"parameterSlots":2,"returnSlots":1},"fun_remove":{"entryPoint":6688,"id":564,"parameterSlots":2,"returnSlots":1},"fun_transfer":{"entryPoint":7618,"id":1853,"parameterSlots":3,"returnSlots":0},"fun_updateBalances":{"entryPoint":7166,"id":1033,"parameterSlots":3,"returnSlots":0},"fun_updateBalances_17001":{"entryPoint":7303,"id":1033,"parameterSlots":2,"returnSlots":0},"fun_updateBalances_17008":{"entryPoint":7444,"id":1033,"parameterSlots":3,"returnSlots":0},"memory_array_index_access_address_dyn":{"entryPoint":6251,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_nonReentrantView":{"entryPoint":6318,"id":1505,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"immutableReferences":{"614":[{"length":32,"start":758},{"length":32,"start":3802}],"617":[{"length":32,"start":3533},{"length":32,"start":7171},{"length":32,"start":7306},{"length":32,"start":7449},{"length":32,"start":8048}],"2237":[{"length":32,"start":1923},{"length":32,"start":3112},{"length":32,"start":4082}]},"linkReferences":{},"object":"608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146114c657508163095ea7b31461147e57816318160ddd146114415781631945f729146113d357816323b872dd146112a5578163313ce5671461126b57816339509351146111f157816340c10f1914610f9b5781634b12e64314610efd57816353cea5df14610ea45781636172813414610e3457816370a0823114610df05781637ee688cb14610d975781638b822d8814610c4c5781638e371bef14610bdd57816395d89b4114610a855781639dc29fac1461072c578163a457c2d714610629578163a4d95b641461054a578163a9059cbb146104fb578163c125563514610471578163d8867fc81461021b57508063dd62ed3e146101a85763ed6edc821461012d57600080fd5b346101a457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a45780602092610167611672565b61016f61169a565b73ffffffffffffffffffffffffffffffffffffffff918216835260068652838320911682526001018452205490519015158152f35b5080fd5b50346101a457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a457806020926101e3611672565b6101eb61169a565b73ffffffffffffffffffffffffffffffffffffffff91821683526001865283832091168252845220549051908152f35b9190503461046d57602091827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261046957610257611672565b9273ffffffffffffffffffffffffffffffffffffffff808516801561044157908284928651938480927ffc0c546a0000000000000000000000000000000000000000000000000000000082525afa9182156104375787926103fb575b50309116036103d357338552600681526102cf84848720611957565b156103ab57600690338652526102f48285206000805260205260406000205460a01c90565b7f00000000000000000000000000000000000000000000000000000000000000001061038457505133815273ffffffffffffffffffffffffffffffffffffffff821660208201527f68aafb7a848a8e6e0e8fe992de5812474789ddec166ce06be4de83b3aaa2864e90604090a161036a336118ae565b80610373578280f35b61037e913390611bfe565b38808280f35b90517f2846f78a000000000000000000000000000000000000000000000000000000008152fd5b5090517ffce323d6000000000000000000000000000000000000000000000000000000008152fd5b5090517f5940fcc8000000000000000000000000000000000000000000000000000000008152fd5b9091508281813d8311610430575b61041381836116bd565b8101031261042c5751818116810361042c5790386102b3565b8680fd5b503d610409565b85513d89823e3d90fd5b8385517f4c6ea03c000000000000000000000000000000000000000000000000000000008152fd5b8380fd5b8280fd5b8284346104f857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f857506104aa611672565b6104b261169a565b926002600554146104d157506020926104ca91611909565b9051908152f35b82517f37ed32e8000000000000000000000000000000000000000000000000000000008152fd5b80fd5b5050346101a457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a457602090610543610539611672565b6024359033611dc2565b5160018152f35b9190503461046d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261046d57610584611672565b91338452600660205261059983838620611a20565b1561060257505133815273ffffffffffffffffffffffffffffffffffffffff821660208201527f550ef13f654f6fc7054e7c556d2647cb8838befbfa68640bb3050fc458ad473590604090a16105ee336118ae565b806105f7578280f35b61037e913390611d14565b90517f108a506d000000000000000000000000000000000000000000000000000000008152fd5b905082346104f857827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f857610662611672565b918360243592338152600160205281812073ffffffffffffffffffffffffffffffffffffffff861682526020522054908282106106a95760208561054385850387336121df565b60849060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b9190503461046d57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261046d57610765611672565b906024359173ffffffffffffffffffffffffffffffffffffffff91827f0000000000000000000000000000000000000000000000000000000000000000163303610a5d578282169081156109db5781875260209587875281882054868110610959578690848a528989520382892055856002540360025587837fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8985518a8152a3600260055414610932575060026005558415158061092a575b61082d575b86600160055580f35b610850918752600686526006610844828920611745565b96888052528620611745565b90845190825195875b8381106108a25750505050845b8481106108735780610824565b80836108816001938561186b565b51168581610892575b505001610866565b61089b91611c87565b388561088a565b856108ad828461186b565b51169089915b88858b8086106108e1575b600195146108d0575b50505001610859565b6108d992611d14565b3888856108c7565b8d8b6108f1888d9997989961186b565b51168614610907575050505060010191906108b3565b938594610918858560019a99611d14565b610922828d61186b565b5295506108be565b50600161081f565b90517f37ed32e8000000000000000000000000000000000000000000000000000000008152fd5b508660849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152fd5b517f08c379a0000000000000000000000000000000000000000000000000000000008152602081870152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608490fd5b8490517fb6559712000000000000000000000000000000000000000000000000000000008152fd5b8383346101a457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a457805191809380549160019083821c92828516948515610bd3575b6020958686108114610ba757858952908115610b655750600114610b0d575b610b098787610aff828c03836116bd565b519182918261160c565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610b525750505082610b0994610aff92820101948680610aee565b8054868501880152928601928101610b34565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168887015250505050151560051b8301019250610aff82610b098680610aee565b6024846022857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b93607f1693610acf565b5050346101a457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5050346101a457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a457338252600690602091808352610c93828520611745565b610c9c336118ae565b9181519081841515925b610cae578780f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9033895282885286892086838301610d0973ffffffffffffffffffffffffffffffffffffffff9384610d01848c61186b565b511690611a20565b50867f550ef13f654f6fc7054e7c556d2647cb8838befbfa68640bb3050fc458ad4735610d6785610d3a858d61186b565b518e51338152911673ffffffffffffffffffffffffffffffffffffffff1660208201529081906040820190565b0390a1610d79575b5050500180610ca6565b610d8f92610d8833928a61186b565b5116611d14565b388681610d6f565b5050346101a457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5050346101a45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4576020906104ca610e2f611672565b6118ae565b5050346101a45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4576104ca8160209373ffffffffffffffffffffffffffffffffffffffff610e89611672565b16815260068552206000805260205260406000205460a01c90565b5050346101a457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b8284346104f8576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4578273ffffffffffffffffffffffffffffffffffffffff9283610f4f611672565b16815260068352610f61828220611745565b918051938080860192818752855180945286019401925b828110610f855785850386f35b8351871685529381019392810192600101610f78565b9190503461046d57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261046d57610fd4611672565b906024359073ffffffffffffffffffffffffffffffffffffffff90817f0000000000000000000000000000000000000000000000000000000000000000163303610a5d578184169485156111955761102e84600254611d86565b6002558587528660205281872084815401905585877fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60208551888152a3600260055414610932575060026005558215158061118d575b611093575b85600160055580f35b6110b99086805260066020526110aa818820611745565b95875260066020528620611745565b8451815195875b82811061110b57505050855b8581106110d9575061108a565b80836110e76001938561186b565b51168587826110fa575b505050016110cc565b61110392611bfe565b3885876110f1565b84611116828461186b565b51169089915b878a808510611147575b60019414611137575b5050016110c0565b61114091611c87565b388761112f565b88611156868a9795969761186b565b5116841461116a575050600101919061111c565b839261117a838d60019897611bfe565b8d611185828b61186b565b529450611126565b506001611085565b602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b5050346101a457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a457610543602092611264611232611672565b913381526001865284812073ffffffffffffffffffffffffffffffffffffffff84168252865284602435912054611d86565b90336121df565b5050346101a457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4576020905160128152f35b839150346101a45760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4576112df611672565b6112e761169a565b91846044359473ffffffffffffffffffffffffffffffffffffffff8416815260016020528181203382526020522054907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361134d575b602086610543878787611dc2565b848210611376575091839161136b60209695610543950333836121df565b91939481935061133f565b60649060208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346101a457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4576020918173ffffffffffffffffffffffffffffffffffffffff9182611426611672565b16815260068552818120602435825285522054169051908152f35b5050346101a457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4576020906002549051908152f35b5050346101a457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a4576020906105436114bc611672565b60243590336121df565b9291503461046957837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261046957600354600181811c9186908281168015611602575b60209586861082146115d65750848852908115611596575060011461153d575b610b098686610aff828b03836116bd565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106115835750505082610b0994610aff92820101943861152c565b8054868501880152928601928101611566565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001687860152505050151560051b8301019250610aff82610b093861152c565b8360226024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b93607f169361150c565b60208082528251818301819052939260005b85811061165e575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b81810183015184820160400152820161161e565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361169557565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361169557565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176116fe57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff81116116fe5760051b60200190565b906000808052602090838252604090818120548060a01c926117668461172d565b92611773825194856116bd565b84845261177f8561172d565b977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08786019901368a3784988551871161184257866117c3575b5050505050505050565b8551156118155773ffffffffffffffffffffffffffffffffffffffff8095169052600196875b8781106117f657506117b9565b808991855283835286868620541661180e828a61186b565b52016117e9565b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b600484517ff9a99b25000000000000000000000000000000000000000000000000000000008152fd5b805182101561187f5760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002600554146118df5773ffffffffffffffffffffffffffffffffffffffff16600052600060205260406000205490565b60046040517f37ed32e8000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff80921690600092828452600660205260016040852001911683526020526040822054611948575090565b90604091815280602052205490565b9073ffffffffffffffffffffffffffffffffffffffff600183019116600092818452826020526040842054611a1a5760409260019285805282602052848620928354938460a01c9485156000146119f257505086805260205274ffffffffffffffffffffffffffffffffffffffffff81740100000000000000000000000000000000000000000116858720555b855260205201912055600190565b74010000000000000000000000000000000000000000019055508286528486208190556119e4565b50505090565b906001820173ffffffffffffffffffffffffffffffffffffffff8092169260009380855260209183835260409485872054908115611bf457611a6f836000805260205260406000205460a01c90565b8210611b29575b505085805280835284862054908160a01c908115611b0057906001917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820189528552878781205511611ad0575b50845252812055600190565b7fffffffffffffffffffffffff000000000000000000000000000000000000000090868052018486205538611ac4565b600487517f06a2af9e000000000000000000000000000000000000000000000000000000008152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9081611b63856000805260205260406000205460a01c90565b0189528386528789205416908201611b88846000805260205260406000205460a01c90565b9081811015611bcb5782919080611bb9575089805284875260a01b17878920555b8752848452858720553880611a76565b91505088528285528087892055611ba9565b600489517f4e23d035000000000000000000000000000000000000000000000000000000008152fd5b5050505050505090565b9190917f000000000000000000000000000000000000000000000000000000000000000091604051937f7a1f1aa90000000000000000000000000000000000000000000000000000000085526000600486015260248501526044840152600080606485825a9587f115611c7057505050565b603f0260061c10611c7e5750565b3d6000823e3d90fd5b907f0000000000000000000000000000000000000000000000000000000000000000604051927f7a1f1aa900000000000000000000000000000000000000000000000000000000845260009283600486015283602486015260448501528280606486825a9587f115611cfa575b50505050565b603f0260061c10611d0c578080611cf4565b3d90823e3d90fd5b9190917f000000000000000000000000000000000000000000000000000000000000000091604051937f7a1f1aa90000000000000000000000000000000000000000000000000000000085526004850152600060248501526044840152600080606485825a9587f115611c7057505050565b91908201809211611d9357565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9173ffffffffffffffffffffffffffffffffffffffff808416801561215b578184169485156120d75760009082825260209282845260409384842054878110612054578790838652858352038585205588845284842087815401905588827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8388518b8152a360026005541461202b57600260055586151580612021575b611e75575b5050505050505050506001600555565b6006918452818152611e88858520611745565b98845252611e97838320611745565b92875191845198845b848110611eee5750505050505b858110611ebc57808080611e65565b8083611eca6001938561186b565b5116858782611edd575b50505001611ead565b611ee692611bfe565b388587611ed4565b808a8a858e8c8b81611f018f998b61186b565b51169581925b848410611f36575b5050506001965014611f25575b50505001611ea0565b611f2e92611d14565b388a85611f1c565b611f45848b989796959861186b565b51168714611f6957505050505060019192935001908a858e8b95948f8c908f611f07565b94919293947f00000000000000000000000000000000000000000000000000000000000000008c51917f7a1f1aa900000000000000000000000000000000000000000000000000000000835286600484015260248301528660448301525a8380606485828d87f115611ff2575b505050611fe58260019961186b565b528f8d97508c908f611f0f565b93979899509450945050603f91500260061c1061201957858e8b9594938b8f948080611fd6565b3d89823e3d90fd5b5088821415611e60565b600485517f37ed32e8000000000000000000000000000000000000000000000000000000008152fd5b6084828751907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff8091169182156122d1571691821561224d5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fdfea26469706673582212202ccde52373e82050c255373476c61164e77b1cc8b3bce60d248a35c01039b8e064736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x14C6 JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x147E JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x1441 JUMPI DUP2 PUSH4 0x1945F729 EQ PUSH2 0x13D3 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x12A5 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x126B JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x11F1 JUMPI DUP2 PUSH4 0x40C10F19 EQ PUSH2 0xF9B JUMPI DUP2 PUSH4 0x4B12E643 EQ PUSH2 0xEFD JUMPI DUP2 PUSH4 0x53CEA5DF EQ PUSH2 0xEA4 JUMPI DUP2 PUSH4 0x61728134 EQ PUSH2 0xE34 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0xDF0 JUMPI DUP2 PUSH4 0x7EE688CB EQ PUSH2 0xD97 JUMPI DUP2 PUSH4 0x8B822D88 EQ PUSH2 0xC4C JUMPI DUP2 PUSH4 0x8E371BEF EQ PUSH2 0xBDD JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0xA85 JUMPI DUP2 PUSH4 0x9DC29FAC EQ PUSH2 0x72C JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x629 JUMPI DUP2 PUSH4 0xA4D95B64 EQ PUSH2 0x54A JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0x4FB JUMPI DUP2 PUSH4 0xC1255635 EQ PUSH2 0x471 JUMPI DUP2 PUSH4 0xD8867FC8 EQ PUSH2 0x21B JUMPI POP DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1A8 JUMPI PUSH4 0xED6EDC82 EQ PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A4 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x167 PUSH2 0x1672 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x169A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x6 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE PUSH1 0x1 ADD DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A4 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x1E3 PUSH2 0x1672 JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x169A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x46D JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x469 JUMPI PUSH2 0x257 PUSH2 0x1672 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND DUP1 ISZERO PUSH2 0x441 JUMPI SWAP1 DUP3 DUP5 SWAP3 DUP7 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH32 0xFC0C546A00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x437 JUMPI DUP8 SWAP3 PUSH2 0x3FB JUMPI JUMPDEST POP ADDRESS SWAP2 AND SUB PUSH2 0x3D3 JUMPI CALLER DUP6 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH2 0x2CF DUP5 DUP5 DUP8 KECCAK256 PUSH2 0x1957 JUMP JUMPDEST ISZERO PUSH2 0x3AB JUMPI PUSH1 0x6 SWAP1 CALLER DUP7 MSTORE MSTORE PUSH2 0x2F4 DUP3 DUP6 KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xA0 SHR SWAP1 JUMP JUMPDEST PUSH32 0x0 LT PUSH2 0x384 JUMPI POP MLOAD CALLER DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x68AAFB7A848A8E6E0E8FE992DE5812474789DDEC166CE06BE4DE83B3AAA2864E SWAP1 PUSH1 0x40 SWAP1 LOG1 PUSH2 0x36A CALLER PUSH2 0x18AE JUMP JUMPDEST DUP1 PUSH2 0x373 JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH2 0x37E SWAP2 CALLER SWAP1 PUSH2 0x1BFE JUMP JUMPDEST CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST SWAP1 MLOAD PUSH32 0x2846F78A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP SWAP1 MLOAD PUSH32 0xFCE323D600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP SWAP1 MLOAD PUSH32 0x5940FCC800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x430 JUMPI JUMPDEST PUSH2 0x413 DUP2 DUP4 PUSH2 0x16BD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42C JUMPI MLOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x42C JUMPI SWAP1 CODESIZE PUSH2 0x2B3 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x409 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP6 MLOAD PUSH32 0x4C6EA03C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x4F8 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F8 JUMPI POP PUSH2 0x4AA PUSH2 0x1672 JUMP JUMPDEST PUSH2 0x4B2 PUSH2 0x169A JUMP JUMPDEST SWAP3 PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x4D1 JUMPI POP PUSH1 0x20 SWAP3 PUSH2 0x4CA SWAP2 PUSH2 0x1909 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 MLOAD PUSH32 0x37ED32E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x543 PUSH2 0x539 PUSH2 0x1672 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1DC2 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x46D JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x46D JUMPI PUSH2 0x584 PUSH2 0x1672 JUMP JUMPDEST SWAP2 CALLER DUP5 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x599 DUP4 DUP4 DUP7 KECCAK256 PUSH2 0x1A20 JUMP JUMPDEST ISZERO PUSH2 0x602 JUMPI POP MLOAD CALLER DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x550EF13F654F6FC7054E7C556D2647CB8838BEFBFA68640BB3050FC458AD4735 SWAP1 PUSH1 0x40 SWAP1 LOG1 PUSH2 0x5EE CALLER PUSH2 0x18AE JUMP JUMPDEST DUP1 PUSH2 0x5F7 JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH2 0x37E SWAP2 CALLER SWAP1 PUSH2 0x1D14 JUMP JUMPDEST SWAP1 MLOAD PUSH32 0x108A506D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x4F8 JUMPI DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F8 JUMPI PUSH2 0x662 PUSH2 0x1672 JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x6A9 JUMPI PUSH1 0x20 DUP6 PUSH2 0x543 DUP6 DUP6 SUB DUP8 CALLER PUSH2 0x21DF JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x46D JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x46D JUMPI PUSH2 0x765 PUSH2 0x1672 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH32 0x0 AND CALLER SUB PUSH2 0xA5D JUMPI DUP3 DUP3 AND SWAP1 DUP2 ISZERO PUSH2 0x9DB JUMPI DUP2 DUP8 MSTORE PUSH1 0x20 SWAP6 DUP8 DUP8 MSTORE DUP2 DUP9 KECCAK256 SLOAD DUP7 DUP2 LT PUSH2 0x959 JUMPI DUP7 SWAP1 DUP5 DUP11 MSTORE DUP10 DUP10 MSTORE SUB DUP3 DUP10 KECCAK256 SSTORE DUP6 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE DUP8 DUP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP10 DUP6 MLOAD DUP11 DUP2 MSTORE LOG3 PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x932 JUMPI POP PUSH1 0x2 PUSH1 0x5 SSTORE DUP5 ISZERO ISZERO DUP1 PUSH2 0x92A JUMPI JUMPDEST PUSH2 0x82D JUMPI JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x5 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x850 SWAP2 DUP8 MSTORE PUSH1 0x6 DUP7 MSTORE PUSH1 0x6 PUSH2 0x844 DUP3 DUP10 KECCAK256 PUSH2 0x1745 JUMP JUMPDEST SWAP7 DUP9 DUP1 MSTORE MSTORE DUP7 KECCAK256 PUSH2 0x1745 JUMP JUMPDEST SWAP1 DUP5 MLOAD SWAP1 DUP3 MLOAD SWAP6 DUP8 JUMPDEST DUP4 DUP2 LT PUSH2 0x8A2 JUMPI POP POP POP POP DUP5 JUMPDEST DUP5 DUP2 LT PUSH2 0x873 JUMPI DUP1 PUSH2 0x824 JUMP JUMPDEST DUP1 DUP4 PUSH2 0x881 PUSH1 0x1 SWAP4 DUP6 PUSH2 0x186B JUMP JUMPDEST MLOAD AND DUP6 DUP2 PUSH2 0x892 JUMPI JUMPDEST POP POP ADD PUSH2 0x866 JUMP JUMPDEST PUSH2 0x89B SWAP2 PUSH2 0x1C87 JUMP JUMPDEST CODESIZE DUP6 PUSH2 0x88A JUMP JUMPDEST DUP6 PUSH2 0x8AD DUP3 DUP5 PUSH2 0x186B JUMP JUMPDEST MLOAD AND SWAP1 DUP10 SWAP2 JUMPDEST DUP9 DUP6 DUP12 DUP1 DUP7 LT PUSH2 0x8E1 JUMPI JUMPDEST PUSH1 0x1 SWAP6 EQ PUSH2 0x8D0 JUMPI JUMPDEST POP POP POP ADD PUSH2 0x859 JUMP JUMPDEST PUSH2 0x8D9 SWAP3 PUSH2 0x1D14 JUMP JUMPDEST CODESIZE DUP9 DUP6 PUSH2 0x8C7 JUMP JUMPDEST DUP14 DUP12 PUSH2 0x8F1 DUP9 DUP14 SWAP10 SWAP8 SWAP9 SWAP10 PUSH2 0x186B JUMP JUMPDEST MLOAD AND DUP7 EQ PUSH2 0x907 JUMPI POP POP POP POP PUSH1 0x1 ADD SWAP2 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST SWAP4 DUP6 SWAP5 PUSH2 0x918 DUP6 DUP6 PUSH1 0x1 SWAP11 SWAP10 PUSH2 0x1D14 JUMP JUMPDEST PUSH2 0x922 DUP3 DUP14 PUSH2 0x186B JUMP JUMPDEST MSTORE SWAP6 POP PUSH2 0x8BE JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x81F JUMP JUMPDEST SWAP1 MLOAD PUSH32 0x37ED32E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP DUP7 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP5 SWAP1 MLOAD PUSH32 0xB655971200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1A4 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 DUP3 SHR SWAP3 DUP3 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0xBD3 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0xBA7 JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xB65 JUMPI POP PUSH1 0x1 EQ PUSH2 0xB0D JUMPI JUMPDEST PUSH2 0xB09 DUP8 DUP8 PUSH2 0xAFF DUP3 DUP13 SUB DUP4 PUSH2 0x16BD JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x160C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xB52 JUMPI POP POP POP DUP3 PUSH2 0xB09 SWAP5 PUSH2 0xAFF SWAP3 DUP3 ADD ADD SWAP5 DUP7 DUP1 PUSH2 0xAEE JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xB34 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xAFF DUP3 PUSH2 0xB09 DUP7 DUP1 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xACF JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI CALLER DUP3 MSTORE PUSH1 0x6 SWAP1 PUSH1 0x20 SWAP2 DUP1 DUP4 MSTORE PUSH2 0xC93 DUP3 DUP6 KECCAK256 PUSH2 0x1745 JUMP JUMPDEST PUSH2 0xC9C CALLER PUSH2 0x18AE JUMP JUMPDEST SWAP2 DUP2 MLOAD SWAP1 DUP2 DUP5 ISZERO ISZERO SWAP3 JUMPDEST PUSH2 0xCAE JUMPI DUP8 DUP1 RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 CALLER DUP10 MSTORE DUP3 DUP9 MSTORE DUP7 DUP10 KECCAK256 DUP7 DUP4 DUP4 ADD PUSH2 0xD09 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 PUSH2 0xD01 DUP5 DUP13 PUSH2 0x186B JUMP JUMPDEST MLOAD AND SWAP1 PUSH2 0x1A20 JUMP JUMPDEST POP DUP7 PUSH32 0x550EF13F654F6FC7054E7C556D2647CB8838BEFBFA68640BB3050FC458AD4735 PUSH2 0xD67 DUP6 PUSH2 0xD3A DUP6 DUP14 PUSH2 0x186B JUMP JUMPDEST MLOAD DUP15 MLOAD CALLER DUP2 MSTORE SWAP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x40 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0xD79 JUMPI JUMPDEST POP POP POP ADD DUP1 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0xD8F SWAP3 PUSH2 0xD88 CALLER SWAP3 DUP11 PUSH2 0x186B JUMP JUMPDEST MLOAD AND PUSH2 0x1D14 JUMP JUMPDEST CODESIZE DUP7 DUP2 PUSH2 0xD6F JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x4CA PUSH2 0xE2F PUSH2 0x1672 JUMP JUMPDEST PUSH2 0x18AE JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH2 0x4CA DUP2 PUSH1 0x20 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xE89 PUSH2 0x1672 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 DUP6 MSTORE KECCAK256 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xA0 SHR SWAP1 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x4F8 JUMPI PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 PUSH2 0xF4F PUSH2 0x1672 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH2 0xF61 DUP3 DUP3 KECCAK256 PUSH2 0x1745 JUMP JUMPDEST SWAP2 DUP1 MLOAD SWAP4 DUP1 DUP1 DUP7 ADD SWAP3 DUP2 DUP8 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE DUP7 ADD SWAP5 ADD SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0xF85 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP8 AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xF78 JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x46D JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x46D JUMPI PUSH2 0xFD4 PUSH2 0x1672 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0xA5D JUMPI DUP2 DUP5 AND SWAP5 DUP6 ISZERO PUSH2 0x1195 JUMPI PUSH2 0x102E DUP5 PUSH1 0x2 SLOAD PUSH2 0x1D86 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP6 DUP8 MSTORE DUP7 PUSH1 0x20 MSTORE DUP2 DUP8 KECCAK256 DUP5 DUP2 SLOAD ADD SWAP1 SSTORE DUP6 DUP8 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP6 MLOAD DUP9 DUP2 MSTORE LOG3 PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x932 JUMPI POP PUSH1 0x2 PUSH1 0x5 SSTORE DUP3 ISZERO ISZERO DUP1 PUSH2 0x118D JUMPI JUMPDEST PUSH2 0x1093 JUMPI JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x5 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x10B9 SWAP1 DUP7 DUP1 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x10AA DUP2 DUP9 KECCAK256 PUSH2 0x1745 JUMP JUMPDEST SWAP6 DUP8 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP7 KECCAK256 PUSH2 0x1745 JUMP JUMPDEST DUP5 MLOAD DUP2 MLOAD SWAP6 DUP8 JUMPDEST DUP3 DUP2 LT PUSH2 0x110B JUMPI POP POP POP DUP6 JUMPDEST DUP6 DUP2 LT PUSH2 0x10D9 JUMPI POP PUSH2 0x108A JUMP JUMPDEST DUP1 DUP4 PUSH2 0x10E7 PUSH1 0x1 SWAP4 DUP6 PUSH2 0x186B JUMP JUMPDEST MLOAD AND DUP6 DUP8 DUP3 PUSH2 0x10FA JUMPI JUMPDEST POP POP POP ADD PUSH2 0x10CC JUMP JUMPDEST PUSH2 0x1103 SWAP3 PUSH2 0x1BFE JUMP JUMPDEST CODESIZE DUP6 DUP8 PUSH2 0x10F1 JUMP JUMPDEST DUP5 PUSH2 0x1116 DUP3 DUP5 PUSH2 0x186B JUMP JUMPDEST MLOAD AND SWAP1 DUP10 SWAP2 JUMPDEST DUP8 DUP11 DUP1 DUP6 LT PUSH2 0x1147 JUMPI JUMPDEST PUSH1 0x1 SWAP5 EQ PUSH2 0x1137 JUMPI JUMPDEST POP POP ADD PUSH2 0x10C0 JUMP JUMPDEST PUSH2 0x1140 SWAP2 PUSH2 0x1C87 JUMP JUMPDEST CODESIZE DUP8 PUSH2 0x112F JUMP JUMPDEST DUP9 PUSH2 0x1156 DUP7 DUP11 SWAP8 SWAP6 SWAP7 SWAP8 PUSH2 0x186B JUMP JUMPDEST MLOAD AND DUP5 EQ PUSH2 0x116A JUMPI POP POP PUSH1 0x1 ADD SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST DUP4 SWAP3 PUSH2 0x117A DUP4 DUP14 PUSH1 0x1 SWAP9 SWAP8 PUSH2 0x1BFE JUMP JUMPDEST DUP14 PUSH2 0x1185 DUP3 DUP12 PUSH2 0x186B JUMP JUMPDEST MSTORE SWAP5 POP PUSH2 0x1126 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1085 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH2 0x543 PUSH1 0x20 SWAP3 PUSH2 0x1264 PUSH2 0x1232 PUSH2 0x1672 JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE DUP5 DUP2 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP3 MSTORE DUP7 MSTORE DUP5 PUSH1 0x24 CALLDATALOAD SWAP2 KECCAK256 SLOAD PUSH2 0x1D86 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x21DF JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x1A4 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH2 0x12DF PUSH2 0x1672 JUMP JUMPDEST PUSH2 0x12E7 PUSH2 0x169A JUMP JUMPDEST SWAP2 DUP5 PUSH1 0x44 CALLDATALOAD SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x134D JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x543 DUP8 DUP8 DUP8 PUSH2 0x1DC2 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x1376 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x136B PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x543 SWAP6 SUB CALLER DUP4 PUSH2 0x21DF JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x133F JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH2 0x1426 PUSH2 0x1672 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 DUP6 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1A4 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A4 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x543 PUSH2 0x14BC PUSH2 0x1672 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x21DF JUMP JUMPDEST SWAP3 SWAP2 POP CALLVALUE PUSH2 0x469 JUMPI DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x469 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 DUP7 SWAP1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1602 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0x15D6 JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1596 JUMPI POP PUSH1 0x1 EQ PUSH2 0x153D JUMPI JUMPDEST PUSH2 0xB09 DUP7 DUP7 PUSH2 0xAFF DUP3 DUP12 SUB DUP4 PUSH2 0x16BD JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x1583 JUMPI POP POP POP DUP3 PUSH2 0xB09 SWAP5 PUSH2 0xAFF SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x152C JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x1566 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xAFF DUP3 PUSH2 0xB09 CODESIZE PUSH2 0x152C JUMP JUMPDEST DUP4 PUSH1 0x22 PUSH1 0x24 SWAP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x165E JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 PUSH1 0x0 PUSH1 0x40 DUP1 SWAP7 SWAP8 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x161E JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x1695 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x1695 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16FE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x16FE JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x20 SWAP1 DUP4 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 DUP2 KECCAK256 SLOAD DUP1 PUSH1 0xA0 SHR SWAP3 PUSH2 0x1766 DUP5 PUSH2 0x172D JUMP JUMPDEST SWAP3 PUSH2 0x1773 DUP3 MLOAD SWAP5 DUP6 PUSH2 0x16BD JUMP JUMPDEST DUP5 DUP5 MSTORE PUSH2 0x177F DUP6 PUSH2 0x172D JUMP JUMPDEST SWAP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP8 DUP7 ADD SWAP10 ADD CALLDATASIZE DUP11 CALLDATACOPY DUP5 SWAP9 DUP6 MLOAD DUP8 GT PUSH2 0x1842 JUMPI DUP7 PUSH2 0x17C3 JUMPI JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP6 MLOAD ISZERO PUSH2 0x1815 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP6 AND SWAP1 MSTORE PUSH1 0x1 SWAP7 DUP8 JUMPDEST DUP8 DUP2 LT PUSH2 0x17F6 JUMPI POP PUSH2 0x17B9 JUMP JUMPDEST DUP1 DUP10 SWAP2 DUP6 MSTORE DUP4 DUP4 MSTORE DUP7 DUP7 DUP7 KECCAK256 SLOAD AND PUSH2 0x180E DUP3 DUP11 PUSH2 0x186B JUMP JUMPDEST MSTORE ADD PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x4 DUP5 MLOAD PUSH32 0xF9A99B2500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x187F JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x18DF JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x37ED32E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP1 PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 DUP6 KECCAK256 ADD SWAP2 AND DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH2 0x1948 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 SWAP2 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 DUP4 ADD SWAP2 AND PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD PUSH2 0x1A1A JUMPI PUSH1 0x40 SWAP3 PUSH1 0x1 SWAP3 DUP6 DUP1 MSTORE DUP3 PUSH1 0x20 MSTORE DUP5 DUP7 KECCAK256 SWAP3 DUP4 SLOAD SWAP4 DUP5 PUSH1 0xA0 SHR SWAP5 DUP6 ISZERO PUSH1 0x0 EQ PUSH2 0x19F2 JUMPI POP POP DUP7 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 PUSH21 0x10000000000000000000000000000000000000000 ADD AND DUP6 DUP8 KECCAK256 SSTORE JUMPDEST DUP6 MSTORE PUSH1 0x20 MSTORE ADD SWAP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH21 0x10000000000000000000000000000000000000000 ADD SWAP1 SSTORE POP DUP3 DUP7 MSTORE DUP5 DUP7 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x19E4 JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP3 PUSH1 0x0 SWAP4 DUP1 DUP6 MSTORE PUSH1 0x20 SWAP2 DUP4 DUP4 MSTORE PUSH1 0x40 SWAP5 DUP6 DUP8 KECCAK256 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x1BF4 JUMPI PUSH2 0x1A6F DUP4 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xA0 SHR SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x1B29 JUMPI JUMPDEST POP POP DUP6 DUP1 MSTORE DUP1 DUP4 MSTORE DUP5 DUP7 KECCAK256 SLOAD SWAP1 DUP2 PUSH1 0xA0 SHR SWAP1 DUP2 ISZERO PUSH2 0x1B00 JUMPI SWAP1 PUSH1 0x1 SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD DUP10 MSTORE DUP6 MSTORE DUP8 DUP8 DUP2 KECCAK256 SSTORE GT PUSH2 0x1AD0 JUMPI JUMPDEST POP DUP5 MSTORE MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP7 DUP1 MSTORE ADD DUP5 DUP7 KECCAK256 SSTORE CODESIZE PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x4 DUP8 MLOAD PUSH32 0x6A2AF9E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH2 0x1B63 DUP6 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xA0 SHR SWAP1 JUMP JUMPDEST ADD DUP10 MSTORE DUP4 DUP7 MSTORE DUP8 DUP10 KECCAK256 SLOAD AND SWAP1 DUP3 ADD PUSH2 0x1B88 DUP5 PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xA0 SHR SWAP1 JUMP JUMPDEST SWAP1 DUP2 DUP2 LT ISZERO PUSH2 0x1BCB JUMPI DUP3 SWAP2 SWAP1 DUP1 PUSH2 0x1BB9 JUMPI POP DUP10 DUP1 MSTORE DUP5 DUP8 MSTORE PUSH1 0xA0 SHL OR DUP8 DUP10 KECCAK256 SSTORE JUMPDEST DUP8 MSTORE DUP5 DUP5 MSTORE DUP6 DUP8 KECCAK256 SSTORE CODESIZE DUP1 PUSH2 0x1A76 JUMP JUMPDEST SWAP2 POP POP DUP9 MSTORE DUP3 DUP6 MSTORE DUP1 DUP8 DUP10 KECCAK256 SSTORE PUSH2 0x1BA9 JUMP JUMPDEST PUSH1 0x4 DUP10 MLOAD PUSH32 0x4E23D03500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH32 0x0 SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH32 0x7A1F1AA900000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x0 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x0 DUP1 PUSH1 0x64 DUP6 DUP3 GAS SWAP6 DUP8 CALL ISZERO PUSH2 0x1C70 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x3F MUL PUSH1 0x6 SHR LT PUSH2 0x1C7E JUMPI POP JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 PUSH32 0x0 PUSH1 0x40 MLOAD SWAP3 PUSH32 0x7A1F1AA900000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x0 SWAP3 DUP4 PUSH1 0x4 DUP7 ADD MSTORE DUP4 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE DUP3 DUP1 PUSH1 0x64 DUP7 DUP3 GAS SWAP6 DUP8 CALL ISZERO PUSH2 0x1CFA JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3F MUL PUSH1 0x6 SHR LT PUSH2 0x1D0C JUMPI DUP1 DUP1 PUSH2 0x1CF4 JUMP JUMPDEST RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH32 0x0 SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH32 0x7A1F1AA900000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x0 DUP1 PUSH1 0x64 DUP6 DUP3 GAS SWAP6 DUP8 CALL ISZERO PUSH2 0x1C70 JUMPI POP POP POP JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1D93 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND DUP1 ISZERO PUSH2 0x215B JUMPI DUP2 DUP5 AND SWAP5 DUP6 ISZERO PUSH2 0x20D7 JUMPI PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP3 DUP3 DUP5 MSTORE PUSH1 0x40 SWAP4 DUP5 DUP5 KECCAK256 SLOAD DUP8 DUP2 LT PUSH2 0x2054 JUMPI DUP8 SWAP1 DUP4 DUP7 MSTORE DUP6 DUP4 MSTORE SUB DUP6 DUP6 KECCAK256 SSTORE DUP9 DUP5 MSTORE DUP5 DUP5 KECCAK256 DUP8 DUP2 SLOAD ADD SWAP1 SSTORE DUP9 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 DUP9 MLOAD DUP12 DUP2 MSTORE LOG3 PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x202B JUMPI PUSH1 0x2 PUSH1 0x5 SSTORE DUP7 ISZERO ISZERO DUP1 PUSH2 0x2021 JUMPI JUMPDEST PUSH2 0x1E75 JUMPI JUMPDEST POP POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x6 SWAP2 DUP5 MSTORE DUP2 DUP2 MSTORE PUSH2 0x1E88 DUP6 DUP6 KECCAK256 PUSH2 0x1745 JUMP JUMPDEST SWAP9 DUP5 MSTORE MSTORE PUSH2 0x1E97 DUP4 DUP4 KECCAK256 PUSH2 0x1745 JUMP JUMPDEST SWAP3 DUP8 MLOAD SWAP2 DUP5 MLOAD SWAP9 DUP5 JUMPDEST DUP5 DUP2 LT PUSH2 0x1EEE JUMPI POP POP POP POP POP JUMPDEST DUP6 DUP2 LT PUSH2 0x1EBC JUMPI DUP1 DUP1 DUP1 PUSH2 0x1E65 JUMP JUMPDEST DUP1 DUP4 PUSH2 0x1ECA PUSH1 0x1 SWAP4 DUP6 PUSH2 0x186B JUMP JUMPDEST MLOAD AND DUP6 DUP8 DUP3 PUSH2 0x1EDD JUMPI JUMPDEST POP POP POP ADD PUSH2 0x1EAD JUMP JUMPDEST PUSH2 0x1EE6 SWAP3 PUSH2 0x1BFE JUMP JUMPDEST CODESIZE DUP6 DUP8 PUSH2 0x1ED4 JUMP JUMPDEST DUP1 DUP11 DUP11 DUP6 DUP15 DUP13 DUP12 DUP2 PUSH2 0x1F01 DUP16 SWAP10 DUP12 PUSH2 0x186B JUMP JUMPDEST MLOAD AND SWAP6 DUP2 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1F36 JUMPI JUMPDEST POP POP POP PUSH1 0x1 SWAP7 POP EQ PUSH2 0x1F25 JUMPI JUMPDEST POP POP POP ADD PUSH2 0x1EA0 JUMP JUMPDEST PUSH2 0x1F2E SWAP3 PUSH2 0x1D14 JUMP JUMPDEST CODESIZE DUP11 DUP6 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x1F45 DUP5 DUP12 SWAP9 SWAP8 SWAP7 SWAP6 SWAP9 PUSH2 0x186B JUMP JUMPDEST MLOAD AND DUP8 EQ PUSH2 0x1F69 JUMPI POP POP POP POP POP PUSH1 0x1 SWAP2 SWAP3 SWAP4 POP ADD SWAP1 DUP11 DUP6 DUP15 DUP12 SWAP6 SWAP5 DUP16 DUP13 SWAP1 DUP16 PUSH2 0x1F07 JUMP JUMPDEST SWAP5 SWAP2 SWAP3 SWAP4 SWAP5 PUSH32 0x0 DUP13 MLOAD SWAP2 PUSH32 0x7A1F1AA900000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP7 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE DUP7 PUSH1 0x44 DUP4 ADD MSTORE GAS DUP4 DUP1 PUSH1 0x64 DUP6 DUP3 DUP14 DUP8 CALL ISZERO PUSH2 0x1FF2 JUMPI JUMPDEST POP POP POP PUSH2 0x1FE5 DUP3 PUSH1 0x1 SWAP10 PUSH2 0x186B JUMP JUMPDEST MSTORE DUP16 DUP14 SWAP8 POP DUP13 SWAP1 DUP16 PUSH2 0x1F0F JUMP JUMPDEST SWAP4 SWAP8 SWAP9 SWAP10 POP SWAP5 POP SWAP5 POP POP PUSH1 0x3F SWAP2 POP MUL PUSH1 0x6 SHR LT PUSH2 0x2019 JUMPI DUP6 DUP15 DUP12 SWAP6 SWAP5 SWAP4 DUP12 DUP16 SWAP5 DUP1 DUP1 PUSH2 0x1FD6 JUMP JUMPDEST RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP9 DUP3 EQ ISZERO PUSH2 0x1E60 JUMP JUMPDEST PUSH1 0x4 DUP6 MLOAD PUSH32 0x37ED32E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x84 DUP3 DUP8 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP2 DUP3 ISZERO PUSH2 0x22D1 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x224D JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xCD 0xE5 0x23 PUSH20 0xE82050C255373476C61164E77B1CC8B3BCE60D24 DUP11 CALLDATALOAD 0xC0 LT CODECOPY 0xB8 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"442:1374:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;2331:8:2;442:1374:11;;;;;;;;;1030:8:1;;442:1374:11;;;;;;1030:19:1;;;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;4102:11:7;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;5080:20:2;;5076:55;;442:1374:11;;;;;;5145:23:2;;;;442:1374:11;5145:23:2;;;;;;;;;;;;;442:1374:11;5194:4:2;;442:1374:11;;5145:55:2;5141:90;;4559:10;442:1374:11;;5246:8:2;442:1374:11;;5246:29:2;442:1374:11;;;;5246:29:2;:::i;:::-;5245:30;5241:63;;5246:8;4559:10;;442:1374:11;;;672:16:1;442:1374:11;;;503:9:0;442:1374:11;;;;;503:9:0;442:1374:11;;519:3:0;442:1374:11;419:110:0;;672:16:1;5347:17:2;-1:-1:-1;5314:90:2;;-1:-1:-1;442:1374:11;4559:10:2;442:1374:11;;;;;;;;;5420:28:2;;442:1374:11;;5420:28:2;3732:7;4559:10;3732:7;:::i;:::-;5508:11;5504:95;;442:1374:11;;;5504:95:2;5580:7;4559:10;;5580:7;;:::i;:::-;5504:95;;442:1374:11;;;5314:90:2;442:1374:11;;5373:31:2;;;;5241:63;442:1374:11;;;5284:20:2;;;;5141:90;442:1374:11;;;5209:22:2;;;;5145:23;;;;;;;;;;;;;;;;;:::i;:::-;;;442:1374:11;;;;;;;;;;;;5145:23:2;;;;442:1374:11;;;;5145:23:2;;;;;;442:1374:11;;;;;;;;;5076:55:2;442:1374:11;;;5109:22:2;;;;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;350:1:6;4196:6:2;442:1374:11;1549:24:6;2332:59;;2401:1;442:1374:11;2401:1:6;;;;:::i;:::-;442:1374:11;;;;;;2332:59:6;442:1374:11;;2357:34:6;;;;442:1374:11;;;;;;;;;;;;;;;;;;3894:6:7;442:1374:11;;:::i;:::-;;;719:10:10;;3894:6:7;:::i;:::-;442:1374:11;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4796:10:2;;442:1374:11;;5699:8:2;442:1374:11;;5699:32:2;442:1374:11;;;;5699:32:2;:::i;:::-;5698:33;5694:62;;-1:-1:-1;442:1374:11;4796:10:2;442:1374:11;;;;;;;;;5772:30:2;;442:1374:11;;5772:30:2;3732:7;4796:10;3732:7;:::i;:::-;5862:11;5858:95;;442:1374:11;;;5858:95:2;5934:7;4796:10;;5934:7;;:::i;5694:62::-;442:1374:11;;5740:16:2;;;;442:1374:11;;;;;;;;;;;;;;;;:::i;:::-;;;;;719:10:10;;442:1374:11;;;;;;;;;;;;;;;;;6792:35:7;;;;442:1374:11;;;;6928:34:7;442:1374:11;;;;719:10:10;6928:34:7;:::i;442:1374:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;736:11;;;442:1374;722:10;:25;718:54;;442:1374;;;9458:21:7;;;442:1374:11;;;;;;;;;;;;;;9649:24:7;;;442:1374:11;;;;;;;;;;;;;;;;9883:22:7;442:1374:11;;9883:22:7;442:1374:11;;;9931:37:7;442:1374:11;;;;;;9931:37:7;9883:22;7719:6:2;442:1374:11;932:24:6;928:52;;442:1374:11;9883:22:7;7719:6:2;442:1374:11;7836:10:2;;;:24;;;442:1374:11;7832:1358:2;;442:1374:11;;;7719:6:2;442:1374:11;;;7832:1358:2;7966:24;442:1374:11;;;7901:8:2;442:1374:11;;7901:8:2;:26;442:1374:11;;;7901:26:2;:::i;:::-;442:1374:11;;;;;;;7966:24:2;:::i;:::-;442:1374:11;;;;;;8102:13:2;;8117:11;;;;;;8854:13;;;;;8869:11;;;;;;7832:1358;;;8882:3;8926:4;;;442:1374:11;8926:4:2;;;:::i;:::-;442:1374:11;;8956:20:2;;8952:206;;8882:3;;;442:1374:11;8854:13:2;;8952:206;9128:6;;;:::i;:::-;8952:206;;;;8130:3;8174:4;;;;;:::i;:::-;442:1374:11;;8201:9:2;;8232:359;8244:11;;;;;;;;;8232:359;442:1374:11;8617:12:2;;8613:200;;8232:359;8130:3;;;442:1374:11;8102:13:2;;8613:200;8783:6;;;:::i;:::-;8613:200;;;;;8257:3;8302:4;;;;;;;;;;:::i;:::-;442:1374:11;;8292:14:2;;8288:281;;8257:3;;;;442:1374:11;;8237:5:2;;;;8288:281;8453:6;;;;;;442:1374:11;8453:6:2;;;:::i;:::-;8490:17;;;;:::i;:::-;442:1374:11;8537:5:2;;;;7836:24;;9458:21:7;7836:24:2;;928:52:6;442:1374:11;;965:15:6;;;;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;718:54;442:1374;;;756:16;;;;442:1374;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;442:1374:11;;;;;;;;-1:-1:-1;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;573:36;442:1374;;;;;;;;;;;;;;;;;4972:10:2;442:1374:11;;6061:8:2;442:1374:11;;;;;;6061:29:2;442:1374:11;;;6061:29:2;:::i;:::-;3732:7;4972:10;3732:7;:::i;:::-;442:1374:11;;;6350:11:2;;;;;6170:307;6201:5;;;442:1374:11;;;6208:3:2;442:1374:11;4972:10:2;;442:1374:11;;;;;;;;;;;;6231:38:2;442:1374:11;6256:12:2;;;;;;:::i;:::-;442:1374:11;;6231:38:2;;:::i;:::-;;6315:12;6292:36;;6315:12;;;;;:::i;:::-;442:1374:11;;;4972:10:2;442:1374:11;;;;;;;;;;;;;;;;;;6292:36:2;;;;6346:117;;6208:3;;;;442:1374:11;6175:24:2;;;6346:117;6436:7;4972:10;6401:12;4972:10;6401:12;;;:::i;:::-;442:1374:11;;6436:7:2;:::i;:::-;6346:117;;;;;442:1374:11;;;;;;;;;;;;;;;;1272:44:2;442:1374:11;;;;;;;;;;;;;;;;;;3732:7:2;442:1374:11;;:::i;:::-;3732:7:2;:::i;442:1374:11:-;;;;;;;;;;;;;672:16:1;442:1374:11;;;;;;:::i;:::-;;;;2677:8:2;442:1374:11;;;503:9:0;442:1374:11;;;;;503:9:0;442:1374:11;;519:3:0;442:1374:11;419:110:0;;442:1374:11;;;;;;;;;;;;;;;;1176:42:2;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;3414:8:2;442:1374:11;;3414:29:2;442:1374:11;;;3414:29:2;:::i;:::-;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;736:11;;;442:1374;722:10;:25;718:54;;442:1374;;;8603:21:7;;;442:1374:11;;8731:22:7;442:1374:11;8731:22:7;442:1374:11;8731:22:7;:::i;:::-;;442:1374:11;;;;;;;;;;;;;;;;;;8952:37:7;442:1374:11;;;;;;8952:37:7;8731:22;7719:6:2;442:1374:11;932:24:6;928:52;;442:1374:11;8731:22:7;7719:6:2;442:1374:11;7836:10:2;;;:24;;;442:1374:11;7832:1358:2;;442:1374:11;;;7719:6:2;442:1374:11;;;7832:1358:2;7966:24;442:1374:11;;;;7901:8:2;442:1374:11;;7901:26:2;442:1374:11;;;7901:26:2;:::i;:::-;442:1374:11;;;7901:8:2;442:1374:11;;;;7966:24:2;:::i;:::-;442:1374:11;;;;8102:13:2;;8117:11;;;;;;8854:13;;;;8869:11;;;;;;7832:1358;;;8882:3;8926:4;;;442:1374:11;8926:4:2;;;:::i;:::-;442:1374:11;;8956:20:2;;;8952:206;;8882:3;;;;442:1374:11;8854:13:2;;8952:206;9128:6;;;:::i;:::-;8952:206;;;;;8130:3;8174:4;;;;;:::i;:::-;442:1374:11;;8201:9:2;;8232:359;8244:11;;;;;;;;8232:359;442:1374:11;8617:12:2;;8613:200;;8232:359;8130:3;;442:1374:11;8102:13:2;;8613:200;8783:6;;;:::i;:::-;8613:200;;;;8257:3;8302:4;;;;;;;;;:::i;:::-;442:1374:11;;8292:14:2;;8288:281;;8257:3;;442:1374:11;;8237:5:2;;;;8288:281;8453:6;;;;;442:1374:11;8453:6:2;;;:::i;:::-;8490:17;;;;;:::i;:::-;442:1374:11;8537:5:2;;;;7836:24;;8603:21:7;7836:24:2;;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6021:38:7;442:1374:11;;6021:38:7;442:1374:11;;:::i;:::-;719:10:10;;442:1374:11;;;;;;;;;;;;;;;;;;;;;6021:38:7;:::i;:::-;719:10:10;;6021:38:7;:::i;442:1374:11:-;;;;;;;;;;;;;;;;3186:2:7;442:1374:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;719:10:10;442:1374:11;;;;;;11244:37:7;11264:17;11244:37;;11240:243;;442:1374:11;;5424:6:7;;;;;;:::i;11240:243::-;11305:26;;;442:1374:11;;;;;;11432:25:7;442:1374:11;;;5424:6:7;442:1374:11;;719:10:10;11432:25:7;;:::i;:::-;11240:243;;;;;;;;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;3079:8:2;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3342:12:7;442:1374:11;;;;;;;;;;;;;;;;;;;;;;4606:6:7;442:1374:11;;:::i;:::-;;;719:10:10;;4606:6:7;:::i;442:1374:11:-;;;;;;;;;;;;;;2244:5:7;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2244:5:7;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;442:1374:11;;;;;;;;-1:-1:-1;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;788:224:0:-;;900:9;442:1374:11;;;;;;;;;;;;;;;960:3:0;442:1374:11;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;922:42:0;442:1374:11;;;1466:19:0;;1462:53;;1529:7;1525:254;;788:224;;;;;;;;;:::o;1525:254::-;442:1374:11;;;;;;;;;;;1655:1:0;1643:13;;1658:7;;;;;;1525:254;;;1667:3;442:1374:11;;;;;;;;;;;;;;1694:42:0;;;;:::i;:::-;442:1374:11;;1643:13:0;;442:1374:11;;;;;;;;;;1462:53:0;1494:21;442:1374:11;;1494:21:0;;;;442:1374:11;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;2258:151:6;350:1;3679:6:2;442:1374:11;1549:24:6;2332:59;;442:1374:11;;;;;;;;;;;2258:151:6;:::o;2332:59::-;2357:34;442:1374:11;;2357:34:6;;;;4114:242:2;442:1374:11;;;;;;;;;;2331:8:2;442:1374:11;;1030:8:1;442:1374:11;;;1030:8:1;442:1374:11;;;;;;;;;;4244:88:2;;4341:8;4114:242;:::o;4244:88::-;442:1374:11;;;;;;;;;;4290:31:2;:::o;1136:210:1:-;;442:1374:11;1217:8:1;;;442:1374:11;;-1:-1:-1;442:1374:11;;;;;;;;;;;1213:61:1;;442:1374:11;;1217:8:1;442:1374:11;;;;;;;;;;;;;;;2076:3:0;442:1374:11;2097:8:0;;;2093:223;2097:8;;;442:1374:11;;;;;;;;;2141:8:0;442:1374:11;;;;;;2093:223:0;442:1374:11;;;;;;;;1217:8:1;1136:210;:::o;2093:223:0:-;2241:8;442:1374:11;;;-1:-1:-1;442:1374:11;;;;;;;;;2093:223:0;;1213:61:1;1251:12;;;;:::o;1429:505::-;;1525:8;;;442:1374:11;;;;-1:-1:-1;;442:1374:11;;;;;;;;;;;;;;;1553:10:1;;;1549:53;;1623:16;;503:9:0;442:1374:11;;;;;503:9:0;442:1374:11;;519:3:0;442:1374:11;419:110:0;;1623:16:1;1615:24;;1611:242;;1429:505;442:1374:11;;;;;;;;;;;;;;2582:3:0;442:1374:11;2603:8:0;;;2599:40;;442:1374:11;1525:8:1;442:1374:11;;;;;;;;;;;;;2693:7:0;2689:88;;1429:505:1;442:1374:11;;;;;;;1525:8:1;1429:505;:::o;2689:88:0:-;442:1374:11;;;;;;;;;;2689:88:0;;;2599:40;2620:19;442:1374:11;;2620:19:0;;;;1611:242:1;442:1374:11;1713:16:1;;;;503:9:0;442:1374:11;;;;;503:9:0;442:1374:11;;519:3:0;442:1374:11;419:110:0;;1713:16:1;442:1374:11;;;;;;;;;;;;;;2995:12:0;;503:9;442:1374:11;;;;;503:9:0;442:1374:11;;519:3:0;442:1374:11;419:110:0;;2995:12;3021;;;;;3017:43;;3075:10;;;;;;442:1374:11;;;;;;;3124:3:0;442:1374:11;3116:31:0;442:1374:11;;;;3071:153:0;442:1374:11;;;;;;;;;1611:242:1;;;;3071:153:0;442:1374:11;;;;;;;;;;;;;3071:153:0;;3017:43;3042:18;442:1374:11;;3042:18:0;;;;1549:53:1;1579:12;;;;;;;;:::o;6805:791:2:-;;;;6984:19;7013:577;;;;6924:31;7013:577;;442:1374:11;7013:577:2;;;;;;;;;;;;442:1374:11;7013:577:2;;;;;;;;;;;6805:791;;;:::o;7013:577::-;;;;;;;;6805:791;:::o;7013:577::-;;442:1374:11;7013:577:2;;;;;6805:791;;6984:19;7013:577;;;6924:31;7013:577;;442:1374:11;7013:577:2;;;;;;;;;;;;;;;;;;;;;;;;;;;6805:791;;;;;:::o;7013:577::-;;;;;;;;;;;;;;;;;;;;6805:791;;;;6984:19;7013:577;;;;6924:31;7013:577;;;;;;442:1374:11;7013:577:2;;;;;;;;442:1374:11;7013:577:2;;;;;;;;;;;6805:791;;;:::o;442:1374:11:-;;;;;;;;;;:::o;:::-;;;;;;;;;;7456:788:7;;442:1374:11;;;;7552:18:7;;442:1374:11;;;;;7630:16:7;;;442:1374:11;;7568:1:7;442:1374:11;;;;;;;;;;;;;;;7801:21:7;;;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8163:26:7;442:1374:11;;;;;;8163:26:7;350:1:6;7719:6:2;442:1374:11;932:24:6;928:52;;350:1;7719:6:2;442:1374:11;7836:10:2;;;:24;;;7456:788:7;7832:1358:2;;7456:788:7;442:1374:11;;;;;;;;;307:1:6;7719:6:2;442:1374:11;7456:788:7:o;7832:1358:2:-;7901:8;442:1374:11;;;;;;7901:26:2;442:1374:11;;;7901:26:2;:::i;:::-;442:1374:11;;;;7966:24:2;442:1374:11;;;7966:24:2;:::i;:::-;442:1374:11;;;;;;8102:13:2;;8117:11;;;;;;8854:13;;;;;8869:11;;;;;;7832:1358;;;;;8882:3;8926:4;;;442:1374:11;8926:4:2;;;:::i;:::-;442:1374:11;;8956:20:2;;;8952:206;;8882:3;;;;442:1374:11;8854:13:2;;8952:206;9128:6;;;:::i;:::-;8952:206;;;;;8130:3;8174:4;;;;;;;;;;;;;:::i;:::-;442:1374:11;;8201:9:2;;8232:359;8244:11;;;;;;8232:359;8617:12;;;442:1374:11;8617:12:2;;;8613:200;;8232:359;8130:3;;;442:1374:11;8102:13:2;;8613:200;8783:6;;;:::i;:::-;8613:200;;;;;8257:3;8302:4;;;;;;;;;:::i;:::-;442:1374:11;;8292:14:2;;8288:281;;8257:3;;;;;442:1374:11;8257:3:2;;;;442:1374:11;8237:5:2;;;;;;;;;;;;;8288:281;6984:19;;;;;;7013:577;;;6924:31;7013:577;;;;;;;;;;;;;;;;;;;;;;;;;;;;8288:281;8490:17;;;;;442:1374:11;8490:17:2;;:::i;:::-;442:1374:11;8537:5:2;;;;;;;;;7013:577;;;;;;;;;;;;;;;7901:8;7013:577;;;;;;;;;;;;;;;;;;;;;;;;;7836:24;7850:10;;;;;7836:24;;928:52:6;965:15;442:1374:11;;965:15:6;;;;442:1374:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10457:340:7;442:1374:11;;;;10558:19:7;;;442:1374:11;;;10636:21:7;;;442:1374:11;;;10758:32:7;442:1374:11;;10575:1:7;442:1374:11;10707:11:7;442:1374:11;;;10575:1:7;442:1374:11;;10575:1:7;442:1374:11;;;;;10575:1:7;442:1374:11;;;;;;;10758:32:7;10457:340::o;442:1374:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"1819600","executionCost":"infinite","totalCost":"infinite"},"external":{"addPlugin(address)":"infinite","allowance(address,address)":"3018","approve(address,uint256)":"24360","balanceOf(address)":"4795","burn(address,uint256)":"infinite","decimals()":"281","decreaseAllowance(address,uint256)":"26987","hasPlugin(address,address)":"3047","increaseAllowance(address,uint256)":"26765","mint(address,uint256)":"infinite","name()":"infinite","ownerPlugin()":"infinite","pluginAt(address,uint256)":"2542","pluginBalanceOf(address,address)":"7336","plugins(address)":"infinite","pluginsCallGasLimit()":"infinite","pluginsCount(address)":"2705","pluginsCountLimit()":"infinite","removeAllPlugins()":"infinite","removePlugin(address)":"infinite","symbol()":"infinite","totalSupply()":"2321","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"addPlugin(address)":"d8867fc8","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address,uint256)":"9dc29fac","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","hasPlugin(address,address)":"ed6edc82","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","ownerPlugin()":"8e371bef","pluginAt(address,uint256)":"1945f729","pluginBalanceOf(address,address)":"c1255635","plugins(address)":"4b12e643","pluginsCallGasLimit()":"7ee688cb","pluginsCount(address)":"61728134","pluginsCountLimit()":"53cea5df","removeAllPlugins()":"8b822d88","removePlugin(address)":"a4d95b64","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"maxUserPlugins_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pluginCallGasLimit_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"IndexOutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPluginAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenInPlugin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwnerPlugin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutputArrayTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PluginAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PluginNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PluginsLimitReachedForAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PopFromEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroPluginsLimit\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"}],\"name\":\"PluginAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"}],\"name\":\"PluginRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"}],\"name\":\"addPlugin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"}],\"name\":\"hasPlugin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerPlugin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"pluginAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"pluginBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"plugins\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pluginsCallGasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"pluginsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pluginsCountLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeAllPlugins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"}],\"name\":\"removePlugin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"CompanyStock is a specialized version of an ERC20 token with additional functionalities that acts as the stock in the company.\",\"errors\":{\"ReentrantCall()\":[{\"details\":\"Emit when reentrancy detected\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addPlugin(address)\":{\"details\":\"Adds a new plugin for the calling account.\",\"params\":{\"plugin\":\"The address of the plugin to add.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the balance of a given account.\",\"params\":{\"account\":\"The address of the account.\"},\"returns\":{\"_0\":\"balance The account balance.\"}},\"burn(address,uint256)\":{\"details\":\"Only callable by the owner plugin.\",\"params\":{\"account\":\"The address to burn tokens from.\",\"amount\":\"The amount of tokens to burn.\"}},\"constructor\":{\"params\":{\"maxUserPlugins_\":\"The maximum number of user plugins.\",\"name_\":\"The name of the token.\",\"pluginCallGasLimit_\":\"The gas limit for plugin calls.\",\"symbol_\":\"The symbol of the token.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"hasPlugin(address,address)\":{\"details\":\"Returns whether an account has a specific plugin.\",\"params\":{\"account\":\"The address of the account.\",\"plugin\":\"The address of the plugin.\"},\"returns\":{\"_0\":\"bool A boolean indicating whether the account has the specified plugin.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Only callable by the owner plugin.\",\"params\":{\"account\":\"The address to mint tokens to.\",\"amount\":\"The amount of tokens to mint.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pluginAt(address,uint256)\":{\"details\":\"Returns the address of a plugin at a specified index for a given account .\",\"params\":{\"account\":\"The address of the account.\",\"index\":\"The index of the plugin to retrieve.\"},\"returns\":{\"_0\":\"plugin The address of the plugin.\"}},\"pluginBalanceOf(address,address)\":{\"details\":\"Returns the balance of a given account if a specified plugin is added or zero.\",\"params\":{\"account\":\"The address of the account to query.\",\"plugin\":\"The address of the plugin to query.\"},\"returns\":{\"_0\":\"balance The account balance if the specified plugin is added and zero otherwise.\"}},\"plugins(address)\":{\"details\":\"Returns an array of all plugins owned by a given account.\",\"params\":{\"account\":\"The address of the account to query.\"},\"returns\":{\"_0\":\"plugins An array of plugin addresses.\"}},\"pluginsCount(address)\":{\"details\":\"Returns the number of plugins registered for an account.\",\"params\":{\"account\":\"The address of the account.\"},\"returns\":{\"_0\":\"uint256 A number of plugins registered for the account.\"}},\"removeAllPlugins()\":{\"details\":\"Removes all plugins for the calling account.\"},\"removePlugin(address)\":{\"details\":\"Removes a plugin for the calling account.\",\"params\":{\"plugin\":\"The address of the plugin to remove.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"title\":\"CompanyStock\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address,uint256)\":{\"notice\":\"Burn tokens.\"},\"mint(address,uint256)\":{\"notice\":\"Mint tokens.\"},\"ownerPlugin()\":{\"notice\":\"The address of the owner plugin.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CompanyStock.sol\":\"CompanyStock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@1inch/solidity-utils/contracts/libraries/AddressArray.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title Library that implements address array on mapping, stores array length at 0 index.\\nlibrary AddressArray {\\n    error IndexOutOfBounds();\\n    error PopFromEmptyArray();\\n    error OutputArrayTooSmall();\\n\\n    /// @dev Data struct containing raw mapping.\\n    struct Data {\\n        mapping(uint256 => uint256) _raw;\\n    }\\n\\n    /// @dev Length of array.\\n    function length(Data storage self) internal view returns (uint256) {\\n        return self._raw[0] >> 160;\\n    }\\n\\n    /// @dev Returns data item from `self` storage at `i`.\\n    function at(Data storage self, uint256 i) internal view returns (address) {\\n        return address(uint160(self._raw[i]));\\n    }\\n\\n    /// @dev Returns list of addresses from storage `self`.\\n    function get(Data storage self) internal view returns (address[] memory arr) {\\n        uint256 lengthAndFirst = self._raw[0];\\n        arr = new address[](lengthAndFirst >> 160);\\n        _get(self, arr, lengthAndFirst);\\n    }\\n\\n    /// @dev Puts list of addresses from `self` storage into `output` array.\\n    function get(Data storage self, address[] memory output) internal view returns (address[] memory) {\\n        return _get(self, output, self._raw[0]);\\n    }\\n\\n    function _get(\\n        Data storage self,\\n        address[] memory output,\\n        uint256 lengthAndFirst\\n    ) private view returns (address[] memory) {\\n        uint256 len = lengthAndFirst >> 160;\\n        if (len > output.length) revert OutputArrayTooSmall();\\n        if (len > 0) {\\n            output[0] = address(uint160(lengthAndFirst));\\n            unchecked {\\n                for (uint256 i = 1; i < len; i++) {\\n                    output[i] = address(uint160(self._raw[i]));\\n                }\\n            }\\n        }\\n        return output;\\n    }\\n\\n    /// @dev Array push back `account` operation on storage `self`.\\n    function push(Data storage self, address account) internal returns (uint256) {\\n        unchecked {\\n            uint256 lengthAndFirst = self._raw[0];\\n            uint256 len = lengthAndFirst >> 160;\\n            if (len == 0) {\\n                self._raw[0] = (1 << 160) + uint160(account);\\n            } else {\\n                self._raw[0] = lengthAndFirst + (1 << 160);\\n                self._raw[len] = uint160(account);\\n            }\\n            return len + 1;\\n        }\\n    }\\n\\n    /// @dev Array pop back operation for storage `self`.\\n    function pop(Data storage self) internal {\\n        unchecked {\\n            uint256 lengthAndFirst = self._raw[0];\\n            uint256 len = lengthAndFirst >> 160;\\n            if (len == 0) revert PopFromEmptyArray();\\n            self._raw[len - 1] = 0;\\n            if (len > 1) {\\n                self._raw[0] = lengthAndFirst - (1 << 160);\\n            }\\n        }\\n    }\\n\\n    /// @dev Set element for storage `self` at `index` to `account`.\\n    function set(\\n        Data storage self,\\n        uint256 index,\\n        address account\\n    ) internal {\\n        uint256 len = length(self);\\n        if (index >= len) revert IndexOutOfBounds();\\n\\n        if (index == 0) {\\n            self._raw[0] = (len << 160) | uint160(account);\\n        } else {\\n            self._raw[index] = uint160(account);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5a40948d30b475081eedecc42f33027a5d5cb03021dba7608595c0414252ec0c\",\"license\":\"MIT\"},\"@1inch/solidity-utils/contracts/libraries/AddressSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./AddressArray.sol\\\";\\n\\n/** @title Library that is using AddressArray library for AddressArray.Data\\n * and allows Set operations on address storage data:\\n * 1. add\\n * 2. remove\\n * 3. contains\\n */\\nlibrary AddressSet {\\n    using AddressArray for AddressArray.Data;\\n\\n    /** @dev Data struct from AddressArray.Data items\\n     * and lookup mapping address => index in data array.\\n     */\\n    struct Data {\\n        AddressArray.Data items;\\n        mapping(address => uint256) lookup;\\n    }\\n\\n    /// @dev Length of data storage.\\n    function length(Data storage s) internal view returns (uint256) {\\n        return s.items.length();\\n    }\\n\\n    /// @dev Returns data item from `s` storage at `index`.\\n    function at(Data storage s, uint256 index) internal view returns (address) {\\n        return s.items.at(index);\\n    }\\n\\n    /// @dev Returns true if storage `s` has `item`.\\n    function contains(Data storage s, address item) internal view returns (bool) {\\n        return s.lookup[item] != 0;\\n    }\\n\\n    /// @dev Adds `item` into storage `s` and returns true if successful.\\n    function add(Data storage s, address item) internal returns (bool) {\\n        if (s.lookup[item] > 0) {\\n            return false;\\n        }\\n        s.lookup[item] = s.items.push(item);\\n        return true;\\n    }\\n\\n    /// @dev Removes `item` from storage `s` and returns true if successful.\\n    function remove(Data storage s, address item) internal returns (bool) {\\n        uint256 index = s.lookup[item];\\n        if (index == 0) {\\n            return false;\\n        }\\n        if (index < s.items.length()) {\\n            unchecked {\\n                address lastItem = s.items.at(s.items.length() - 1);\\n                s.items.set(index - 1, lastItem);\\n                s.lookup[lastItem] = index;\\n            }\\n        }\\n        s.items.pop();\\n        delete s.lookup[item];\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x1156b03a2cbd95e0bbf21f22ad8d630a73ec3679b70020dc6d7005bff62c06fd\",\"license\":\"MIT\"},\"@1inch/token-plugins/contracts/ERC20Plugins.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20, ERC20 } from \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport { AddressSet, AddressArray } from \\\"@1inch/solidity-utils/contracts/libraries/AddressSet.sol\\\";\\n\\nimport { IERC20Plugins } from \\\"./interfaces/IERC20Plugins.sol\\\";\\nimport { IPlugin } from \\\"./interfaces/IPlugin.sol\\\";\\nimport { ReentrancyGuardExt, ReentrancyGuardLib } from \\\"./libs/ReentrancyGuard.sol\\\";\\n\\n/**\\n * @title ERC20Plugins\\n * @dev A base implementation of token contract to hold and manage plugins of an ERC20 token with a limited number of plugins per account.\\n * Each plugin is a contract that implements IPlugin interface (and/or derived from plugin).\\n */\\nabstract contract ERC20Plugins is ERC20, IERC20Plugins, ReentrancyGuardExt {\\n    using AddressSet for AddressSet.Data;\\n    using AddressArray for AddressArray.Data;\\n    using ReentrancyGuardLib for ReentrancyGuardLib.Data;\\n\\n    error PluginAlreadyAdded();\\n    error PluginNotFound();\\n    error InvalidPluginAddress();\\n    error InvalidTokenInPlugin();\\n    error PluginsLimitReachedForAccount();\\n    error ZeroPluginsLimit();\\n\\n    /// @dev Limit of plugins per account\\n    uint256 public immutable pluginsCountLimit;\\n    /// @dev Gas limit for a single plugin call\\n    uint256 public immutable pluginsCallGasLimit;\\n\\n    ReentrancyGuardLib.Data private _guard;\\n    mapping(address => AddressSet.Data) private _plugins;\\n\\n    /**\\n     * @dev Constructor that sets the limit of plugins per account and the gas limit for a plugin call.\\n     * @param pluginsLimit_ The limit of plugins per account.\\n     * @param pluginCallGasLimit_ The gas limit for a plugin call. Intended to prevent gas bomb attacks\\n     */\\n    constructor(uint256 pluginsLimit_, uint256 pluginCallGasLimit_) {\\n        if (pluginsLimit_ == 0) revert ZeroPluginsLimit();\\n        pluginsCountLimit = pluginsLimit_;\\n        pluginsCallGasLimit = pluginCallGasLimit_;\\n        _guard.init();\\n    }\\n\\n    /**\\n     * @dev Returns whether an account has a specific plugin.\\n     * @param account The address of the account.\\n     * @param plugin The address of the plugin.\\n     * @return bool A boolean indicating whether the account has the specified plugin.\\n     */\\n    function hasPlugin(address account, address plugin) public view virtual returns(bool) {\\n        return _plugins[account].contains(plugin);\\n    }\\n\\n    /**\\n     * @dev Returns the number of plugins registered for an account.\\n     * @param account The address of the account.\\n     * @return uint256 A number of plugins registered for the account.\\n     */\\n    function pluginsCount(address account) public view virtual returns(uint256) {\\n        return _plugins[account].length();\\n    }\\n\\n    /**\\n     * @dev Returns the address of a plugin at a specified index for a given account .\\n     * @param account The address of the account.\\n     * @param index The index of the plugin to retrieve.\\n     * @return plugin The address of the plugin.\\n     */\\n    function pluginAt(address account, uint256 index) public view virtual returns(address) {\\n        return _plugins[account].at(index);\\n    }\\n\\n    /**\\n     * @dev Returns an array of all plugins owned by a given account.\\n     * @param account The address of the account to query.\\n     * @return plugins An array of plugin addresses.\\n     */\\n    function plugins(address account) public view virtual returns(address[] memory) {\\n        return _plugins[account].items.get();\\n    }\\n\\n\\n    /**\\n     * @dev Returns the balance of a given account.\\n     * @param account The address of the account.\\n     * @return balance The account balance.\\n     */\\n    function balanceOf(address account) public nonReentrantView(_guard) view override(IERC20, ERC20) virtual returns(uint256) {\\n        return super.balanceOf(account);\\n    }\\n\\n    /**\\n     * @dev Returns the balance of a given account if a specified plugin is added or zero.\\n     * @param plugin The address of the plugin to query.\\n     * @param account The address of the account to query.\\n     * @return balance The account balance if the specified plugin is added and zero otherwise.\\n     */\\n    function pluginBalanceOf(address plugin, address account) public nonReentrantView(_guard) view virtual returns(uint256) {\\n        if (hasPlugin(account, plugin)) {\\n            return super.balanceOf(account);\\n        }\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev Adds a new plugin for the calling account.\\n     * @param plugin The address of the plugin to add.\\n     */\\n    function addPlugin(address plugin) public virtual {\\n        _addPlugin(msg.sender, plugin);\\n    }\\n\\n    /**\\n     * @dev Removes a plugin for the calling account.\\n     * @param plugin The address of the plugin to remove.\\n     */\\n    function removePlugin(address plugin) public virtual {\\n        _removePlugin(msg.sender, plugin);\\n    }\\n\\n    /**\\n     * @dev Removes all plugins for the calling account.\\n     */\\n    function removeAllPlugins() public virtual {\\n        _removeAllPlugins(msg.sender);\\n    }\\n\\n    function _addPlugin(address account, address plugin) internal virtual {\\n        if (plugin == address(0)) revert InvalidPluginAddress();\\n        if (IPlugin(plugin).token() != IERC20Plugins(address(this))) revert InvalidTokenInPlugin();\\n        if (!_plugins[account].add(plugin)) revert PluginAlreadyAdded();\\n        if (_plugins[account].length() > pluginsCountLimit) revert PluginsLimitReachedForAccount();\\n\\n        emit PluginAdded(account, plugin);\\n        uint256 balance = balanceOf(account);\\n        if (balance > 0) {\\n            _updateBalances(plugin, address(0), account, balance);\\n        }\\n    }\\n\\n    function _removePlugin(address account, address plugin) internal virtual {\\n        if (!_plugins[account].remove(plugin)) revert PluginNotFound();\\n\\n        emit PluginRemoved(account, plugin);\\n        uint256 balance = balanceOf(account);\\n        if (balance > 0) {\\n            _updateBalances(plugin, account, address(0), balance);\\n        }\\n    }\\n\\n    function _removeAllPlugins(address account) internal virtual {\\n        address[] memory items = _plugins[account].items.get();\\n        uint256 balance = balanceOf(account);\\n        unchecked {\\n            for (uint256 i = items.length; i > 0; i--) {\\n                _plugins[account].remove(items[i - 1]);\\n                emit PluginRemoved(account, items[i - 1]);\\n                if (balance > 0) {\\n                    _updateBalances(items[i - 1], account, address(0), balance);\\n                }\\n            }\\n        }\\n    }\\n\\n    /// @notice Assembly implementation of the gas limited call to avoid return gas bomb,\\n    // moreover call to a destructed plugin would also revert even inside try-catch block in Solidity 0.8.17\\n    /// @dev try IPlugin(plugin).updateBalances{gas: _PLUGIN_CALL_GAS_LIMIT}(from, to, amount) {} catch {}\\n    function _updateBalances(address plugin, address from, address to, uint256 amount) private {\\n        bytes4 selector = IPlugin.updateBalances.selector;\\n        uint256 gasLimit = pluginsCallGasLimit;\\n        assembly (\\\"memory-safe\\\") { // solhint-disable-line no-inline-assembly\\n            let ptr := mload(0x40)\\n            mstore(ptr, selector)\\n            mstore(add(ptr, 0x04), from)\\n            mstore(add(ptr, 0x24), to)\\n            mstore(add(ptr, 0x44), amount)\\n\\n            let gasLeft := gas()\\n            if iszero(call(gasLimit, plugin, 0, ptr, 0x64, 0, 0)) {\\n                if lt(div(mul(gasLeft, 63), 64), gasLimit) {\\n                    returndatacopy(ptr, 0, returndatasize())\\n                    revert(ptr, returndatasize())\\n                }\\n            }\\n        }\\n    }\\n\\n    // ERC20 Overrides\\n\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal nonReentrant(_guard) override virtual {\\n        super._afterTokenTransfer(from, to, amount);\\n\\n        unchecked {\\n            if (amount > 0 && from != to) {\\n                address[] memory a = _plugins[from].items.get();\\n                address[] memory b = _plugins[to].items.get();\\n                uint256 aLength = a.length;\\n                uint256 bLength = b.length;\\n\\n                for (uint256 i = 0; i < aLength; i++) {\\n                    address plugin = a[i];\\n\\n                    uint256 j;\\n                    for (j = 0; j < bLength; j++) {\\n                        if (plugin == b[j]) {\\n                            // Both parties are participating of the same plugin\\n                            _updateBalances(plugin, from, to, amount);\\n                            b[j] = address(0);\\n                            break;\\n                        }\\n                    }\\n\\n                    if (j == bLength) {\\n                        // Sender is participating in a plugin, but receiver is not\\n                        _updateBalances(plugin, from, address(0), amount);\\n                    }\\n                }\\n\\n                for (uint256 j = 0; j < bLength; j++) {\\n                    address plugin = b[j];\\n                    if (plugin != address(0)) {\\n                        // Receiver is participating in a plugin, but sender is not\\n                        _updateBalances(plugin, address(0), to, amount);\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd4b36af9c154f96a1e17b263762c58ccab37287396420a20936159735bed4060\",\"license\":\"MIT\"},\"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IERC20Plugins is IERC20 {\\n    event PluginAdded(address account, address plugin);\\n    event PluginRemoved(address account, address plugin);\\n\\n    function pluginsCountLimit() external view returns(uint256);\\n    function pluginsCallGasLimit() external view returns(uint256);\\n    function hasPlugin(address account, address plugin) external view returns(bool);\\n    function pluginsCount(address account) external view returns(uint256);\\n    function pluginAt(address account, uint256 index) external view returns(address);\\n    function plugins(address account) external view returns(address[] memory);\\n    function pluginBalanceOf(address plugin, address account) external view returns(uint256);\\n\\n    function addPlugin(address plugin) external;\\n    function removePlugin(address plugin) external;\\n    function removeAllPlugins() external;\\n}\\n\",\"keccak256\":\"0x0f5605f00e8bc32568fde89062c559e95a5baf02063ab81fc30e28a6e0627d5c\",\"license\":\"MIT\"},\"@1inch/token-plugins/contracts/interfaces/IPlugin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20Plugins } from \\\"./IERC20Plugins.sol\\\";\\n\\ninterface IPlugin {\\n    function token() external view returns(IERC20Plugins);\\n    function updateBalances(address from, address to, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0xe9d4625460ec99ee9cac2de5edcad4915ca5a2065dfbe5aca73418cc5691be98\",\"license\":\"MIT\"},\"@1inch/token-plugins/contracts/libs/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ReentrancyGuardLib\\n * @dev Library that provides reentrancy protection for functions.\\n */\\nlibrary ReentrancyGuardLib {\\n\\n    /// @dev Emit when reentrancy detected\\n    error ReentrantCall();\\n\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    /// @dev Struct to hold the current status of the contract.\\n    struct Data {\\n        uint256 _status;\\n    }\\n\\n    /**\\n     * @dev Initializes the struct with the current status set to not entered.\\n     * @param self The storage reference to the struct.\\n     */\\n    function init(Data storage self) internal {\\n        self._status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Sets the status to entered if it is not already entered, otherwise reverts.\\n     * @param self The storage reference to the struct.\\n     */\\n    function enter(Data storage self) internal {\\n        if (self._status == _ENTERED) revert ReentrantCall();\\n        self._status = _ENTERED;\\n    }\\n\\n    /**\\n     * @dev Resets the status to not entered.\\n     * @param self The storage reference to the struct.\\n     */\\n    function exit(Data storage self) internal {\\n        self._status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Checks the current status of the contract to ensure that it is not already entered.\\n     * @param self The storage reference to the struct.\\n     * @return Whether or not the contract is currently entered.\\n     */\\n    function check(Data storage self) internal view returns (bool) {\\n        return self._status == _ENTERED;\\n    }\\n}\\n\\n/**\\n * @title ReentrancyGuardExt\\n * @dev Contract that uses the ReentrancyGuardLib to provide reentrancy protection.\\n */\\ncontract ReentrancyGuardExt {\\n    using ReentrancyGuardLib for ReentrancyGuardLib.Data;\\n\\n    /**\\n     * @dev Modifier that ensures a function can only be called once in the same block.\\n     * @param self The storage reference to the struct.\\n     */\\n    modifier nonReentrant(ReentrancyGuardLib.Data storage self) {\\n        self.enter();\\n        _;\\n        self.exit();\\n    }\\n\\n    /**\\n     * @dev Modifier that ensures a function can only be called once in the same block in view mode.\\n     * @param self The storage reference to the struct.\\n     */\\n    modifier nonReentrantView(ReentrancyGuardLib.Data storage self) {\\n        if (self.check()) revert ReentrancyGuardLib.ReentrantCall();\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x7a4cd646d3910ffffe35f6b8e2b4a11fc10b4823643f80e7077e050c131b1967\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/CompanyStock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20, ERC20 } from \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport { ERC20Plugins } from \\\"@1inch/token-plugins/contracts/ERC20Plugins.sol\\\";\\nimport { ICompanyStock } from \\\"./interfaces/ICompanyStock.sol\\\";\\n\\n/// @title CompanyStock\\n/// @dev CompanyStock is a specialized version of an ERC20 token with additional functionalities that acts as the stock in the company.\\ncontract CompanyStock is ICompanyStock, ERC20Plugins {\\n  error NotOwnerPlugin();\\n\\n  /// @notice The address of the owner plugin.\\n  address public immutable ownerPlugin;\\n\\n  /// @dev Throws if called by any account other than the ownerPlugin.\\n  modifier onlyOwnerPlugin() {\\n    if (msg.sender != ownerPlugin) revert NotOwnerPlugin();\\n    _;\\n  }\\n\\n  /// @param name_ The name of the token.\\n  /// @param symbol_ The symbol of the token.\\n  /// @param maxUserPlugins_ The maximum number of user plugins.\\n  /// @param pluginCallGasLimit_ The gas limit for plugin calls.\\n  constructor(\\n    string memory name_,\\n    string memory symbol_,\\n    uint256 maxUserPlugins_,\\n    uint256 pluginCallGasLimit_\\n  ) ERC20(name_, symbol_) ERC20Plugins(maxUserPlugins_, pluginCallGasLimit_) {\\n    ownerPlugin = msg.sender;\\n  }\\n\\n  /// @notice Mint tokens.\\n  /// @dev Only callable by the owner plugin.\\n  /// @param account The address to mint tokens to.\\n  /// @param amount The amount of tokens to mint.\\n  function mint(address account, uint256 amount) external onlyOwnerPlugin {\\n    _mint(account, amount);\\n  }\\n\\n  /// @notice Burn tokens.\\n  /// @dev Only callable by the owner plugin.\\n  /// @param account The address to burn tokens from.\\n  /// @param amount The amount of tokens to burn.\\n  function burn(address account, uint256 amount) external onlyOwnerPlugin {\\n    _burn(account, amount);\\n  }\\n}\\n\",\"keccak256\":\"0xfa882a714789b5c719ffb939c55150274c5bc53eb6c22948887ade02dd8fd034\",\"license\":\"MIT\"},\"contracts/interfaces/ICompanyStock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20Plugins } from \\\"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol\\\";\\n\\ninterface ICompanyStock is IERC20Plugins {\\n    function mint(address account, uint256 amount) external; // onlyOwner\\n    function burn(address account, uint256 amount) external; // onlyOwner\\n}\\n\",\"keccak256\":\"0x96502eb5414bf3d8fc94d54cddd4ac8ffa493350855e2d0bbded00fa76ab1e07\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1522,"contract":"contracts/CompanyStock.sol:CompanyStock","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1528,"contract":"contracts/CompanyStock.sol:CompanyStock","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1530,"contract":"contracts/CompanyStock.sol:CompanyStock","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1532,"contract":"contracts/CompanyStock.sol:CompanyStock","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1534,"contract":"contracts/CompanyStock.sol:CompanyStock","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":620,"contract":"contracts/CompanyStock.sol:CompanyStock","label":"_guard","offset":0,"slot":"5","type":"t_struct(Data)1399_storage"},{"astId":625,"contract":"contracts/CompanyStock.sol:CompanyStock","label":"_plugins","offset":0,"slot":"6","type":"t_mapping(t_address,t_struct(Data)394_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Data)394_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct AddressSet.Data)","numberOfBytes":"32","value":"t_struct(Data)394_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Data)1399_storage":{"encoding":"inplace","label":"struct ReentrancyGuardLib.Data","members":[{"astId":1398,"contract":"contracts/CompanyStock.sol:CompanyStock","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_struct(Data)13_storage":{"encoding":"inplace","label":"struct AddressArray.Data","members":[{"astId":12,"contract":"contracts/CompanyStock.sol:CompanyStock","label":"_raw","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_uint256)"}],"numberOfBytes":"32"},"t_struct(Data)394_storage":{"encoding":"inplace","label":"struct AddressSet.Data","members":[{"astId":389,"contract":"contracts/CompanyStock.sol:CompanyStock","label":"items","offset":0,"slot":"0","type":"t_struct(Data)13_storage"},{"astId":393,"contract":"contracts/CompanyStock.sol:CompanyStock","label":"lookup","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"burn(address,uint256)":{"notice":"Burn tokens."},"mint(address,uint256)":{"notice":"Mint tokens."},"ownerPlugin()":{"notice":"The address of the owner plugin."}},"version":1}}},"contracts/DividendDispatcherPlugin.sol":{"DividendDispatcherPlugin":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"contract IERC20Plugins","name":"token_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessDenied","type":"error"},{"inputs":[],"name":"ApproveDisabled","type":"error"},{"inputs":[],"name":"TransferDisabled","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"ledger","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"payDividend","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20Plugins","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"updateBalances","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"users","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"updateBalances(address,address,uint256)":{"details":"Updates the balances of two addresses in the plugin as a result of any balance changes. Only the Token contract is allowed to call this function.","params":{"amount":"The amount of tokens transferred","from":"The address from which tokens were transferred","to":"The address to which tokens were transferred"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_string_fromMemory":{"entryPoint":890,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":852,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60a0604052346200034f5762000ebd803803806200001d8162000354565b9283398101906060818303126200034f5780516001600160401b03908181116200034f57836200004f9184016200037a565b91602093848201518381116200034f576040916200006f9184016200037a565b9101516001600160a01b03811681036200034f5760805282518281116200024f576003918254916001958684811c9416801562000344575b888510146200032e578190601f94858111620002d8575b508890858311600114620002715760009262000265575b505060001982861b1c191690861b1783555b80519384116200024f5760049586548681811c9116801562000244575b828210146200022f57838111620001e4575b50809285116001146200017657509383949184926000956200016a575b50501b92600019911b1c19161790555b604051610ad09081620003ed823960805181818161011e0152818161047801526106b60152f35b01519350388062000133565b92919084601f1981168860005285600020956000905b89838310620001c95750505010620001ae575b50505050811b01905562000143565b01519060f884600019921b161c19169055388080806200019f565b8587015189559097019694850194889350908101906200018c565b87600052816000208480880160051c82019284891062000225575b0160051c019087905b8281106200021857505062000116565b6000815501879062000208565b92508192620001ff565b602288634e487b7160e01b6000525260246000fd5b90607f169062000104565b634e487b7160e01b600052604160045260246000fd5b015190503880620000d5565b90889350601f19831691876000528a6000209260005b8c828210620002c15750508411620002a8575b505050811b018355620000e7565b015160001983881b60f8161c191690553880806200029a565b8385015186558c9790950194938401930162000287565b90915085600052886000208580850160051c8201928b861062000324575b918a91869594930160051c01915b82811062000314575050620000be565b600081558594508a910162000304565b92508192620002f6565b634e487b7160e01b600052602260045260246000fd5b93607f1693620000a7565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200024f57604052565b919080601f840112156200034f5782516001600160401b0381116200024f57602090620003b0601f8201601f1916830162000354565b928184528282870101116200034f5760005b818110620003d857508260009394955001015290565b8581018301518482018401528201620003c256fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461079057508163095ea7b3146102ef57816318160ddd1461075357816323b872dd146107195781632515994e14610636578163313ce567146105fc57816339509351146102ef57816370a082311461059b5781637a1f1aa91461044c57816395d89b41146102f4578163a457c2d7146102ef578163a87430ba14610288578163a9059cbb1461022557508063dd62ed3e146101a7578063fbfa941f146101465763fc0c546a146100d557600080fd5b3461014257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610142576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5080fd5b50346101425760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610142578060209273ffffffffffffffffffffffffffffffffffffffff610197610940565b1681526005845220549051908152f35b503461014257807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610142576101de610940565b6024359073ffffffffffffffffffffffffffffffffffffffff90818316809303610221579160209491849316825260018552828220908252845220549051908152f35b8480fd5b82843461028557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610285575061025e610940565b50517fa24e573d000000000000000000000000000000000000000000000000000000008152fd5b80fd5b5050346101425760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101425760ff8160209373ffffffffffffffffffffffffffffffffffffffff6102dc610940565b1681526006855220541690519015158152f35b610968565b83833461014257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014257805191809380549160019083821c92828516948515610442575b6020958686108114610416578589529081156103d4575060011461037c575b610378878761036e828c0383610a2a565b51918291826108da565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106103c157505050826103789461036e9282010194868061035d565b80548685018801529286019281016103a3565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168887015250505050151560051b830101925061036e82610378868061035d565b6024846022857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b93607f169361033e565b919050346105975761045d366109ca565b939073ffffffffffffffffffffffffffffffffffffffff90817f000000000000000000000000000000000000000000000000000000000000000016330361056f57811692838752600660205284872060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905516808652600560205283862054908582039182116105435786526005602052838620558185528285205493840180941161051757508352600560205282205580f35b8460116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6024876011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8285517f4ca88867000000000000000000000000000000000000000000000000000000008152fd5b8280fd5b5050346101425760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610142578060209273ffffffffffffffffffffffffffffffffffffffff6105ed610940565b16815280845220549051908152f35b50503461014257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610142576020905160128152f35b919050346105975760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610597578051917fc1255635000000000000000000000000000000000000000000000000000000008352309083015233602483015260208260448173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa90811561071057506106e8575080f35b602090813d8111610709575b6106fe8183610a2a565b810103126102855780f35b503d6106f4565b513d84823e3d90fd5b828434610285575061072a366109ca565b505050517fa24e573d000000000000000000000000000000000000000000000000000000008152fd5b50503461014257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610142576020906002549051908152f35b929150346108d657837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126108d657600354600181811c91869082811680156108cc575b60209586861082146108a057508488529081156108605750600114610807575b610378868661036e828b0383610a2a565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b82841061084d57505050826103789461036e9282010194386107f6565b8054868501880152928601928101610830565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001687860152505050151560051b830101925061036e82610378386107f6565b8360226024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b93607f16936107d6565b8380fd5b60208082528251818301819052939260005b85811061092c575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b8181018301518482016040015282016108ec565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361096357565b600080fd5b346109635760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126109635761099f610940565b5060046040517feb60c2c4000000000000000000000000000000000000000000000000000000008152fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126109635773ffffffffffffffffffffffffffffffffffffffff90600435828116810361096357916024359081168103610963579060443590565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610a6b57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220bd3ed91222b3ef00446c364834b028da6e5227a9a98e8c684a4cd46c6ecccd7864736f6c63430008130033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x34F JUMPI PUSH3 0xEBD DUP1 CODESIZE SUB DUP1 PUSH3 0x1D DUP2 PUSH3 0x354 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x60 DUP2 DUP4 SUB SLT PUSH3 0x34F JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 GT PUSH3 0x34F JUMPI DUP4 PUSH3 0x4F SWAP2 DUP5 ADD PUSH3 0x37A JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP4 DUP5 DUP3 ADD MLOAD DUP4 DUP2 GT PUSH3 0x34F JUMPI PUSH1 0x40 SWAP2 PUSH3 0x6F SWAP2 DUP5 ADD PUSH3 0x37A JUMP JUMPDEST SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH3 0x34F JUMPI PUSH1 0x80 MSTORE DUP3 MLOAD DUP3 DUP2 GT PUSH3 0x24F JUMPI PUSH1 0x3 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x1 SWAP6 DUP7 DUP5 DUP2 SHR SWAP5 AND DUP1 ISZERO PUSH3 0x344 JUMPI JUMPDEST DUP9 DUP6 LT EQ PUSH3 0x32E JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP5 DUP6 DUP2 GT PUSH3 0x2D8 JUMPI JUMPDEST POP DUP9 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH3 0x271 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x265 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND SWAP1 DUP7 SHL OR DUP4 SSTORE JUMPDEST DUP1 MLOAD SWAP4 DUP5 GT PUSH3 0x24F JUMPI PUSH1 0x4 SWAP6 DUP7 SLOAD DUP7 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x244 JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH3 0x22F JUMPI DUP4 DUP2 GT PUSH3 0x1E4 JUMPI JUMPDEST POP DUP1 SWAP3 DUP6 GT PUSH1 0x1 EQ PUSH3 0x176 JUMPI POP SWAP4 DUP4 SWAP5 SWAP2 DUP5 SWAP3 PUSH1 0x0 SWAP6 PUSH3 0x16A JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD0 SWAP1 DUP2 PUSH3 0x3ED DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x11E ADD MSTORE DUP2 DUP2 PUSH2 0x478 ADD MSTORE PUSH2 0x6B6 ADD MSTORE RETURN JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH3 0x133 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1F NOT DUP2 AND DUP9 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 SWAP6 PUSH1 0x0 SWAP1 JUMPDEST DUP10 DUP4 DUP4 LT PUSH3 0x1C9 JUMPI POP POP POP LT PUSH3 0x1AE JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x143 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x19F JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP10 SSTORE SWAP1 SWAP8 ADD SWAP7 SWAP5 DUP6 ADD SWAP5 DUP9 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x18C JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP9 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP5 DUP10 LT PUSH3 0x225 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP8 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x218 JUMPI POP POP PUSH3 0x116 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP8 SWAP1 PUSH3 0x208 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x1FF JUMP JUMPDEST PUSH1 0x22 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x104 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xD5 JUMP JUMPDEST SWAP1 DUP9 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP8 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP13 DUP3 DUP3 LT PUSH3 0x2C1 JUMPI POP POP DUP5 GT PUSH3 0x2A8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH3 0xE7 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x29A JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP13 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x287 JUMP JUMPDEST SWAP1 SWAP2 POP DUP6 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP12 DUP7 LT PUSH3 0x324 JUMPI JUMPDEST SWAP2 DUP11 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x314 JUMPI POP POP PUSH3 0xBE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP11 SWAP2 ADD PUSH3 0x304 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x2F6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH3 0xA7 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x24F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0x34F JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x24F JUMPI PUSH1 0x20 SWAP1 PUSH3 0x3B0 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD PUSH3 0x354 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH3 0x34F JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x3D8 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0x3C2 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x790 JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x2EF JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x753 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x719 JUMPI DUP2 PUSH4 0x2515994E EQ PUSH2 0x636 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x5FC JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x2EF JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x59B JUMPI DUP2 PUSH4 0x7A1F1AA9 EQ PUSH2 0x44C JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x2F4 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x2EF JUMPI DUP2 PUSH4 0xA87430BA EQ PUSH2 0x288 JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0x225 JUMPI POP DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xFBFA941F EQ PUSH2 0x146 JUMPI PUSH4 0xFC0C546A EQ PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x142 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x142 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x142 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x197 PUSH2 0x940 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x142 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x142 JUMPI PUSH2 0x1DE PUSH2 0x940 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP4 AND DUP1 SWAP4 SUB PUSH2 0x221 JUMPI SWAP2 PUSH1 0x20 SWAP5 SWAP2 DUP5 SWAP4 AND DUP3 MSTORE PUSH1 0x1 DUP6 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x285 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x285 JUMPI POP PUSH2 0x25E PUSH2 0x940 JUMP JUMPDEST POP MLOAD PUSH32 0xA24E573D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x142 JUMPI PUSH1 0xFF DUP2 PUSH1 0x20 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2DC PUSH2 0x940 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH2 0x968 JUMP JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x142 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x142 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 DUP3 SHR SWAP3 DUP3 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x442 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0x416 JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x3D4 JUMPI POP PUSH1 0x1 EQ PUSH2 0x37C JUMPI JUMPDEST PUSH2 0x378 DUP8 DUP8 PUSH2 0x36E DUP3 DUP13 SUB DUP4 PUSH2 0xA2A JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x8DA JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x3C1 JUMPI POP POP POP DUP3 PUSH2 0x378 SWAP5 PUSH2 0x36E SWAP3 DUP3 ADD ADD SWAP5 DUP7 DUP1 PUSH2 0x35D JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x36E DUP3 PUSH2 0x378 DUP7 DUP1 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x33E JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x597 JUMPI PUSH2 0x45D CALLDATASIZE PUSH2 0x9CA JUMP JUMPDEST SWAP4 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0x56F JUMPI DUP2 AND SWAP3 DUP4 DUP8 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP5 DUP8 KECCAK256 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE AND DUP1 DUP7 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP4 DUP7 KECCAK256 SLOAD SWAP1 DUP6 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x543 JUMPI DUP7 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP4 DUP7 KECCAK256 SSTORE DUP2 DUP6 MSTORE DUP3 DUP6 KECCAK256 SLOAD SWAP4 DUP5 ADD DUP1 SWAP5 GT PUSH2 0x517 JUMPI POP DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP3 KECCAK256 SSTORE DUP1 RETURN JUMPDEST DUP5 PUSH1 0x11 PUSH1 0x24 SWAP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH1 0x24 DUP8 PUSH1 0x11 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST DUP3 DUP6 MLOAD PUSH32 0x4CA8886700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x142 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x5ED PUSH2 0x940 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x142 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x142 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x597 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x597 JUMPI DUP1 MLOAD SWAP2 PUSH32 0xC125563500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0x44 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x710 JUMPI POP PUSH2 0x6E8 JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x20 SWAP1 DUP2 RETURNDATASIZE DUP2 GT PUSH2 0x709 JUMPI JUMPDEST PUSH2 0x6FE DUP2 DUP4 PUSH2 0xA2A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x285 JUMPI DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x6F4 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x285 JUMPI POP PUSH2 0x72A CALLDATASIZE PUSH2 0x9CA JUMP JUMPDEST POP POP POP MLOAD PUSH32 0xA24E573D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x142 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x142 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP3 SWAP2 POP CALLVALUE PUSH2 0x8D6 JUMPI DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x8D6 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 DUP7 SWAP1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x8CC JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0x8A0 JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x860 JUMPI POP PUSH1 0x1 EQ PUSH2 0x807 JUMPI JUMPDEST PUSH2 0x378 DUP7 DUP7 PUSH2 0x36E DUP3 DUP12 SUB DUP4 PUSH2 0xA2A JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x84D JUMPI POP POP POP DUP3 PUSH2 0x378 SWAP5 PUSH2 0x36E SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x7F6 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x830 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x36E DUP3 PUSH2 0x378 CODESIZE PUSH2 0x7F6 JUMP JUMPDEST DUP4 PUSH1 0x22 PUSH1 0x24 SWAP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x7D6 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x92C JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 PUSH1 0x0 PUSH1 0x40 DUP1 SWAP7 SWAP8 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x963 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x963 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x963 JUMPI PUSH2 0x99F PUSH2 0x940 JUMP JUMPDEST POP PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEB60C2C400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x963 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x963 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x963 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA6B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD RETURNDATACOPY 0xD9 SLT 0x22 0xB3 0xEF STOP PREVRANDAO PUSH13 0x364834B028DA6E5227A9A98E8C PUSH9 0x4A4CD46C6ECCCD7864 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"387:1508:12:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;387:1508:12;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;387:1508:12;;;;;;947:14:3;;387:1508:12;;;;;;;2046:13:7;387:1508:12;;;;;;;;;;;;;;;;-1:-1:-1;387:1508:12;;;;;;;;;;;;;;;-1:-1:-1;387:1508:12;;;;;;;;;;-1:-1:-1;387:1508:12;;;;-1:-1:-1;;;;387:1508:12;;;;;;;;;;;;;;;;;;;;2069:17:7;387:1508:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;387:1508:12;;;;;;;;;;;;;;;;;;;;;;;;;;;947:14:3;387:1508:12;;;;;;;;;;;;;;;;;;;;-1:-1:-1;387:1508:12;;;;;;;;;;;;;;-1:-1:-1;387:1508:12;;-1:-1:-1;387:1508:12;;-1:-1:-1;387:1508:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;387:1508:12;;;;;;;;-1:-1:-1;387:1508:12;;-1:-1:-1;387:1508:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;387:1508:12;;;;;;;;;;;;;;;;;;;;-1:-1:-1;387:1508:12;;;-1:-1:-1;387:1508:12;;;;;;;;;;;;-1:-1:-1;387:1508:12;;2069:17:7;387:1508:12;;-1:-1:-1;387:1508:12;;;;;-1:-1:-1;387:1508:12;;;;;;;;;;;;;;;-1:-1:-1;387:1508:12;;-1:-1:-1;387:1508:12;;-1:-1:-1;387:1508:12;;;;;;;;;;-1:-1:-1;387:1508:12;;;;;;;;;;;;;;;;-1:-1:-1;;387:1508:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;387:1508:12;;-1:-1:-1;387:1508:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;387:1508:12;;;;-1:-1:-1;387:1508:12;;;;;;;;;;;;;;;;-1:-1:-1;387:1508:12;;;;;-1:-1:-1;387:1508:12;;;;;;;;;-1:-1:-1;387:1508:12;;;;;;;;;-1:-1:-1;;387:1508:12;;;-1:-1:-1;;;;;387:1508:12;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;387:1508:12;;;;;;;;;;-1:-1:-1;;387:1508:12;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;387:1508:12;;;;;;;;-1:-1:-1;387:1508:12;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":2368,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":2506,"id":null,"parameterSlots":1,"returnSlots":3},"abi_encode_string":{"entryPoint":2266,"id":null,"parameterSlots":2,"returnSlots":1},"external_fun_approve":{"entryPoint":2408,"id":null,"parameterSlots":0,"returnSlots":0},"finalize_allocation":{"entryPoint":2602,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"1222":[{"length":32,"start":286},{"length":32,"start":1144},{"length":32,"start":1718}]},"linkReferences":{},"object":"608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461079057508163095ea7b3146102ef57816318160ddd1461075357816323b872dd146107195781632515994e14610636578163313ce567146105fc57816339509351146102ef57816370a082311461059b5781637a1f1aa91461044c57816395d89b41146102f4578163a457c2d7146102ef578163a87430ba14610288578163a9059cbb1461022557508063dd62ed3e146101a7578063fbfa941f146101465763fc0c546a146100d557600080fd5b3461014257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610142576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5080fd5b50346101425760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610142578060209273ffffffffffffffffffffffffffffffffffffffff610197610940565b1681526005845220549051908152f35b503461014257807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610142576101de610940565b6024359073ffffffffffffffffffffffffffffffffffffffff90818316809303610221579160209491849316825260018552828220908252845220549051908152f35b8480fd5b82843461028557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610285575061025e610940565b50517fa24e573d000000000000000000000000000000000000000000000000000000008152fd5b80fd5b5050346101425760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101425760ff8160209373ffffffffffffffffffffffffffffffffffffffff6102dc610940565b1681526006855220541690519015158152f35b610968565b83833461014257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014257805191809380549160019083821c92828516948515610442575b6020958686108114610416578589529081156103d4575060011461037c575b610378878761036e828c0383610a2a565b51918291826108da565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106103c157505050826103789461036e9282010194868061035d565b80548685018801529286019281016103a3565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168887015250505050151560051b830101925061036e82610378868061035d565b6024846022857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b93607f169361033e565b919050346105975761045d366109ca565b939073ffffffffffffffffffffffffffffffffffffffff90817f000000000000000000000000000000000000000000000000000000000000000016330361056f57811692838752600660205284872060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905516808652600560205283862054908582039182116105435786526005602052838620558185528285205493840180941161051757508352600560205282205580f35b8460116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6024876011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8285517f4ca88867000000000000000000000000000000000000000000000000000000008152fd5b8280fd5b5050346101425760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610142578060209273ffffffffffffffffffffffffffffffffffffffff6105ed610940565b16815280845220549051908152f35b50503461014257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610142576020905160128152f35b919050346105975760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610597578051917fc1255635000000000000000000000000000000000000000000000000000000008352309083015233602483015260208260448173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa90811561071057506106e8575080f35b602090813d8111610709575b6106fe8183610a2a565b810103126102855780f35b503d6106f4565b513d84823e3d90fd5b828434610285575061072a366109ca565b505050517fa24e573d000000000000000000000000000000000000000000000000000000008152fd5b50503461014257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610142576020906002549051908152f35b929150346108d657837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126108d657600354600181811c91869082811680156108cc575b60209586861082146108a057508488529081156108605750600114610807575b610378868661036e828b0383610a2a565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b82841061084d57505050826103789461036e9282010194386107f6565b8054868501880152928601928101610830565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001687860152505050151560051b830101925061036e82610378386107f6565b8360226024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b93607f16936107d6565b8380fd5b60208082528251818301819052939260005b85811061092c575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b8181018301518482016040015282016108ec565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361096357565b600080fd5b346109635760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126109635761099f610940565b5060046040517feb60c2c4000000000000000000000000000000000000000000000000000000008152fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126109635773ffffffffffffffffffffffffffffffffffffffff90600435828116810361096357916024359081168103610963579060443590565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610a6b57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220bd3ed91222b3ef00446c364834b028da6e5227a9a98e8c684a4cd46c6ecccd7864736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x790 JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x2EF JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x753 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x719 JUMPI DUP2 PUSH4 0x2515994E EQ PUSH2 0x636 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x5FC JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x2EF JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x59B JUMPI DUP2 PUSH4 0x7A1F1AA9 EQ PUSH2 0x44C JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x2F4 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x2EF JUMPI DUP2 PUSH4 0xA87430BA EQ PUSH2 0x288 JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0x225 JUMPI POP DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xFBFA941F EQ PUSH2 0x146 JUMPI PUSH4 0xFC0C546A EQ PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x142 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x142 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x142 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x197 PUSH2 0x940 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x142 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x142 JUMPI PUSH2 0x1DE PUSH2 0x940 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP4 AND DUP1 SWAP4 SUB PUSH2 0x221 JUMPI SWAP2 PUSH1 0x20 SWAP5 SWAP2 DUP5 SWAP4 AND DUP3 MSTORE PUSH1 0x1 DUP6 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x285 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x285 JUMPI POP PUSH2 0x25E PUSH2 0x940 JUMP JUMPDEST POP MLOAD PUSH32 0xA24E573D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x142 JUMPI PUSH1 0xFF DUP2 PUSH1 0x20 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2DC PUSH2 0x940 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH2 0x968 JUMP JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x142 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x142 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 DUP3 SHR SWAP3 DUP3 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x442 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0x416 JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x3D4 JUMPI POP PUSH1 0x1 EQ PUSH2 0x37C JUMPI JUMPDEST PUSH2 0x378 DUP8 DUP8 PUSH2 0x36E DUP3 DUP13 SUB DUP4 PUSH2 0xA2A JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x8DA JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x3C1 JUMPI POP POP POP DUP3 PUSH2 0x378 SWAP5 PUSH2 0x36E SWAP3 DUP3 ADD ADD SWAP5 DUP7 DUP1 PUSH2 0x35D JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x36E DUP3 PUSH2 0x378 DUP7 DUP1 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x33E JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x597 JUMPI PUSH2 0x45D CALLDATASIZE PUSH2 0x9CA JUMP JUMPDEST SWAP4 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0x56F JUMPI DUP2 AND SWAP3 DUP4 DUP8 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP5 DUP8 KECCAK256 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE AND DUP1 DUP7 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP4 DUP7 KECCAK256 SLOAD SWAP1 DUP6 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x543 JUMPI DUP7 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP4 DUP7 KECCAK256 SSTORE DUP2 DUP6 MSTORE DUP3 DUP6 KECCAK256 SLOAD SWAP4 DUP5 ADD DUP1 SWAP5 GT PUSH2 0x517 JUMPI POP DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP3 KECCAK256 SSTORE DUP1 RETURN JUMPDEST DUP5 PUSH1 0x11 PUSH1 0x24 SWAP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH1 0x24 DUP8 PUSH1 0x11 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST DUP3 DUP6 MLOAD PUSH32 0x4CA8886700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x142 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x5ED PUSH2 0x940 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x142 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x142 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x597 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x597 JUMPI DUP1 MLOAD SWAP2 PUSH32 0xC125563500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0x44 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x710 JUMPI POP PUSH2 0x6E8 JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x20 SWAP1 DUP2 RETURNDATASIZE DUP2 GT PUSH2 0x709 JUMPI JUMPDEST PUSH2 0x6FE DUP2 DUP4 PUSH2 0xA2A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x285 JUMPI DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x6F4 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x285 JUMPI POP PUSH2 0x72A CALLDATASIZE PUSH2 0x9CA JUMP JUMPDEST POP POP POP MLOAD PUSH32 0xA24E573D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x142 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x142 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP3 SWAP2 POP CALLVALUE PUSH2 0x8D6 JUMPI DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x8D6 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 DUP7 SWAP1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x8CC JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0x8A0 JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x860 JUMPI POP PUSH1 0x1 EQ PUSH2 0x807 JUMPI JUMPDEST PUSH2 0x378 DUP7 DUP7 PUSH2 0x36E DUP3 DUP12 SUB DUP4 PUSH2 0xA2A JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x84D JUMPI POP POP POP DUP3 PUSH2 0x378 SWAP5 PUSH2 0x36E SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x7F6 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x830 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x36E DUP3 PUSH2 0x378 CODESIZE PUSH2 0x7F6 JUMP JUMPDEST DUP4 PUSH1 0x22 PUSH1 0x24 SWAP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x7D6 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x92C JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 PUSH1 0x0 PUSH1 0x40 DUP1 SWAP7 SWAP8 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x963 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x963 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x963 JUMPI PUSH2 0x99F PUSH2 0x940 JUMP JUMPDEST POP PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEB60C2C400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x963 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x963 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x963 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA6B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD RETURNDATACOPY 0xD9 SLT 0x22 0xB3 0xEF STOP PREVRANDAO PUSH13 0x364834B028DA6E5227A9A98E8C PUSH9 0x4A4CD46C6ECCCD7864 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"387:1508:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;524:36:3;387:1508:12;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;525:41;387:1508;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4102:11:7;387:1508:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1238:18;;;;387:1508;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;570:37;387:1508;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;387:1508:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;387:1508:12;;;;;;;;-1:-1:-1;387:1508:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;691:5:3;;;387:1508:12;669:10:3;:28;665:55;;387:1508:12;;;;;;971:5;387:1508;;;;;983:4;387:1508;;;;;;;;;;;1027:6;387:1508;;;;;;;;;;;;;;;;;1027:6;387:1508;;;;;;;;;;;;;;;;;;;;;;;;1027:6;387:1508;;;;;;;;;;;;;;;;;;;;;;;;;;;665:55:3;387:1508:12;;;706:14:3;;;;387:1508:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3186:2:7;387:1508:12;;;;;;;;;;;;;;;;;;;808:63;387:1508;808:63;;853:4;808:63;;;387:1508;860:10;387:1508;;;;;822:5;387:1508;822:5;387:1508;822:5;387:1508;808:63;;;;;;;;;;387:1508;;;808:63;387:1508;808:63;;;;;;;;;;;;:::i;:::-;;;387:1508;;;;;;808:63;;;;;;387:1508;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1238:18;;;;387:1508;;;;;;;;;;;;;;;3342:12:7;387:1508:12;;;;;;;;;;;;;;;;;;;;;2244:5:7;387:1508:12;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;387:1508:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2244:5:7;387:1508:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;387:1508:12;;;;;;;;-1:-1:-1;387:1508:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;387:1508:12;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;1564:17;387:1508;;1564:17;;;;387:1508;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"553600","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"2802","approve(address,uint256)":"264","balanceOf(address)":"2555","decimals()":"281","decreaseAllowance(address,uint256)":"462","increaseAllowance(address,uint256)":"374","ledger(address)":"2709","name()":"infinite","payDividend(uint256)":"infinite","symbol()":"infinite","token()":"infinite","totalSupply()":"2321","transfer(address,uint256)":"496","transferFrom(address,address,uint256)":"357","updateBalances(address,address,uint256)":"infinite","users(address)":"2655"},"internal":{"_updateBalances(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","ledger(address)":"fbfa941f","name()":"06fdde03","payDividend(uint256)":"2515994e","symbol()":"95d89b41","token()":"fc0c546a","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","updateBalances(address,address,uint256)":"7a1f1aa9","users(address)":"a87430ba"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"contract IERC20Plugins\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferDisabled\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ledger\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"payDividend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20Plugins\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateBalances\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"updateBalances(address,address,uint256)\":{\"details\":\"Updates the balances of two addresses in the plugin as a result of any balance changes. Only the Token contract is allowed to call this function.\",\"params\":{\"amount\":\"The amount of tokens transferred\",\"from\":\"The address from which tokens were transferred\",\"to\":\"The address to which tokens were transferred\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DividendDispatcherPlugin.sol\":\"DividendDispatcherPlugin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@1inch/token-plugins/contracts/Plugin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IPlugin } from \\\"./interfaces/IPlugin.sol\\\";\\nimport { IERC20Plugins } from \\\"./interfaces/IERC20Plugins.sol\\\";\\n\\n\\n/// @dev ERC20 extension enabling external smart contract based plugins to track balances of those users who opted-in to these plugins.\\n/// Could be useful for farming / DAO voting and every case where you need to track user's balances without moving tokens to another contract.\\nabstract contract Plugin is IPlugin {\\n    error AccessDenied();\\n\\n    IERC20Plugins public immutable token;\\n\\n    /// @dev Throws an error if the caller is not the token contract\\n    modifier onlyToken {\\n        if (msg.sender != address(token)) revert AccessDenied();\\n        _;\\n    }\\n\\n    /// @dev Creates a new plugin contract, initialized with a reference to the parent token contract.\\n    /// @param token_ The address of the token contract\\n    constructor(IERC20Plugins token_) {\\n        token = token_;\\n    }\\n\\n    /// @dev Updates the balances of two addresses in the plugin as a result of any balance changes.\\n    /// Only the Token contract is allowed to call this function.\\n    /// @param from The address from which tokens were transferred\\n    /// @param to The address to which tokens were transferred\\n    /// @param amount The amount of tokens transferred\\n    function updateBalances(address from, address to, uint256 amount) external onlyToken {\\n        _updateBalances(from, to, amount);\\n    }\\n\\n    /// @dev Updates the balances of two addresses in the plugin as a result of any balance changes.\\n    /// Only the Token contract is allowed to call this function.\\n    /// @param from The address from which tokens were transferred\\n    /// @param to The address to which tokens were transferred\\n    /// @param amount The amount of tokens transferred\\n    function _updateBalances(address from, address to, uint256 amount) internal virtual;\\n}\\n\",\"keccak256\":\"0x71a38b993d17016b6f94e59bb0f1e53be799a886bfa490e2f2f9833dc3a95abb\",\"license\":\"MIT\"},\"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IERC20Plugins is IERC20 {\\n    event PluginAdded(address account, address plugin);\\n    event PluginRemoved(address account, address plugin);\\n\\n    function pluginsCountLimit() external view returns(uint256);\\n    function pluginsCallGasLimit() external view returns(uint256);\\n    function hasPlugin(address account, address plugin) external view returns(bool);\\n    function pluginsCount(address account) external view returns(uint256);\\n    function pluginAt(address account, uint256 index) external view returns(address);\\n    function plugins(address account) external view returns(address[] memory);\\n    function pluginBalanceOf(address plugin, address account) external view returns(uint256);\\n\\n    function addPlugin(address plugin) external;\\n    function removePlugin(address plugin) external;\\n    function removeAllPlugins() external;\\n}\\n\",\"keccak256\":\"0x0f5605f00e8bc32568fde89062c559e95a5baf02063ab81fc30e28a6e0627d5c\",\"license\":\"MIT\"},\"@1inch/token-plugins/contracts/interfaces/IPlugin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20Plugins } from \\\"./IERC20Plugins.sol\\\";\\n\\ninterface IPlugin {\\n    function token() external view returns(IERC20Plugins);\\n    function updateBalances(address from, address to, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0xe9d4625460ec99ee9cac2de5edcad4915ca5a2065dfbe5aca73418cc5691be98\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/DividendDispatcherPlugin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20, ERC20 } from \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport { Plugin } from \\\"@1inch/token-plugins/contracts/Plugin.sol\\\";\\nimport { IERC20Plugins } from \\\"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol\\\";\\nimport { IDividendDispatcherPlugin } from \\\"./interfaces/IDividendDispatcherPlugin.sol\\\";\\n\\ncontract DividendDispatcherPlugin is IDividendDispatcherPlugin, Plugin, ERC20 {\\n  error ApproveDisabled();\\n  error TransferDisabled();\\n\\n  mapping(address => uint256) public ledger;\\n  mapping(address => bool) public users;\\n\\n  constructor(string memory name_, string memory symbol_, IERC20Plugins token_) ERC20(name_, symbol_) Plugin(token_) {}\\n\\n  function payDividend(uint256 value) public virtual {\\n    uint256 balance = IERC20Plugins(token).pluginBalanceOf(address(this), msg.sender);\\n  }\\n\\n  function _updateBalances(address from, address to, uint256 amount) internal override {\\n    users[to] = true;\\n    // Update info\\n    ledger[from] = ledger[from] - amount;\\n    ledger[to] = ledger[to] + amount;\\n  }\\n\\n  // ERC20 overrides\\n  function transfer(address /* to */, uint256 /* amount */) public pure override(IERC20, ERC20) returns (bool) {\\n    revert TransferDisabled();\\n  }\\n\\n  function transferFrom(address /* from */, address /* to */, uint256 /* amount */) public pure override(IERC20, ERC20) returns (bool) {\\n    revert TransferDisabled();\\n  }\\n\\n  function approve(address /* spender */, uint256 /* amount */) public pure override(ERC20, IERC20) returns (bool) {\\n    revert ApproveDisabled();\\n  }\\n\\n  function increaseAllowance(address /* spender */, uint256 /* addedValue */) public pure override returns (bool) {\\n    revert ApproveDisabled();\\n  }\\n\\n  function decreaseAllowance(address /* spender */, uint256 /* subtractedValue */) public pure override returns (bool) {\\n    revert ApproveDisabled();\\n  }\\n}\\n\",\"keccak256\":\"0x0cee12a2605cbac21b86c394a2285d30df8afe0f24bfca61261d3a9d143c85d6\",\"license\":\"MIT\"},\"contracts/interfaces/IDividendDispatcherPlugin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport { IPlugin } from \\\"@1inch/token-plugins/contracts/interfaces/IPlugin.sol\\\";\\n\\ninterface IDividendDispatcherPlugin is IPlugin, IERC20 {\\n  function payDividend(uint256 value) external;\\n}\\n\",\"keccak256\":\"0x260dcceff2075a6405b585d86b58d9cb6f68a1145c0515f31b62cd456f2e17c7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1522,"contract":"contracts/DividendDispatcherPlugin.sol:DividendDispatcherPlugin","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1528,"contract":"contracts/DividendDispatcherPlugin.sol:DividendDispatcherPlugin","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1530,"contract":"contracts/DividendDispatcherPlugin.sol:DividendDispatcherPlugin","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1532,"contract":"contracts/DividendDispatcherPlugin.sol:DividendDispatcherPlugin","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1534,"contract":"contracts/DividendDispatcherPlugin.sol:DividendDispatcherPlugin","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":2334,"contract":"contracts/DividendDispatcherPlugin.sol:DividendDispatcherPlugin","label":"ledger","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":2338,"contract":"contracts/DividendDispatcherPlugin.sol:DividendDispatcherPlugin","label":"users","offset":0,"slot":"6","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/ICompanyStock.sol":{"ICompanyStock":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"plugin","type":"address"}],"name":"PluginAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"plugin","type":"address"}],"name":"PluginRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"plugin","type":"address"}],"name":"addPlugin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"plugin","type":"address"}],"name":"hasPlugin","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"pluginAt","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"plugin","type":"address"},{"internalType":"address","name":"account","type":"address"}],"name":"pluginBalanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"plugins","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pluginsCallGasLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"pluginsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pluginsCountLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"removeAllPlugins","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"plugin","type":"address"}],"name":"removePlugin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addPlugin(address)":"d8867fc8","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address,uint256)":"9dc29fac","hasPlugin(address,address)":"ed6edc82","mint(address,uint256)":"40c10f19","pluginAt(address,uint256)":"1945f729","pluginBalanceOf(address,address)":"c1255635","plugins(address)":"4b12e643","pluginsCallGasLimit()":"7ee688cb","pluginsCount(address)":"61728134","pluginsCountLimit()":"53cea5df","removeAllPlugins()":"8b822d88","removePlugin(address)":"a4d95b64","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"}],\"name\":\"PluginAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"}],\"name\":\"PluginRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"}],\"name\":\"addPlugin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"}],\"name\":\"hasPlugin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"pluginAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"pluginBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"plugins\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pluginsCallGasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"pluginsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pluginsCountLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeAllPlugins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"}],\"name\":\"removePlugin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ICompanyStock.sol\":\"ICompanyStock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IERC20Plugins is IERC20 {\\n    event PluginAdded(address account, address plugin);\\n    event PluginRemoved(address account, address plugin);\\n\\n    function pluginsCountLimit() external view returns(uint256);\\n    function pluginsCallGasLimit() external view returns(uint256);\\n    function hasPlugin(address account, address plugin) external view returns(bool);\\n    function pluginsCount(address account) external view returns(uint256);\\n    function pluginAt(address account, uint256 index) external view returns(address);\\n    function plugins(address account) external view returns(address[] memory);\\n    function pluginBalanceOf(address plugin, address account) external view returns(uint256);\\n\\n    function addPlugin(address plugin) external;\\n    function removePlugin(address plugin) external;\\n    function removeAllPlugins() external;\\n}\\n\",\"keccak256\":\"0x0f5605f00e8bc32568fde89062c559e95a5baf02063ab81fc30e28a6e0627d5c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/interfaces/ICompanyStock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20Plugins } from \\\"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol\\\";\\n\\ninterface ICompanyStock is IERC20Plugins {\\n    function mint(address account, uint256 amount) external; // onlyOwner\\n    function burn(address account, uint256 amount) external; // onlyOwner\\n}\\n\",\"keccak256\":\"0x96502eb5414bf3d8fc94d54cddd4ac8ffa493350855e2d0bbded00fa76ab1e07\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IDividendDispatcherPlugin.sol":{"IDividendDispatcherPlugin":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"payDividend","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20Plugins","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"updateBalances","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","payDividend(uint256)":"2515994e","token()":"fc0c546a","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","updateBalances(address,address,uint256)":"7a1f1aa9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"payDividend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20Plugins\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateBalances\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDividendDispatcherPlugin.sol\":\"IDividendDispatcherPlugin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@1inch/token-plugins/contracts/interfaces/IERC20Plugins.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IERC20Plugins is IERC20 {\\n    event PluginAdded(address account, address plugin);\\n    event PluginRemoved(address account, address plugin);\\n\\n    function pluginsCountLimit() external view returns(uint256);\\n    function pluginsCallGasLimit() external view returns(uint256);\\n    function hasPlugin(address account, address plugin) external view returns(bool);\\n    function pluginsCount(address account) external view returns(uint256);\\n    function pluginAt(address account, uint256 index) external view returns(address);\\n    function plugins(address account) external view returns(address[] memory);\\n    function pluginBalanceOf(address plugin, address account) external view returns(uint256);\\n\\n    function addPlugin(address plugin) external;\\n    function removePlugin(address plugin) external;\\n    function removeAllPlugins() external;\\n}\\n\",\"keccak256\":\"0x0f5605f00e8bc32568fde89062c559e95a5baf02063ab81fc30e28a6e0627d5c\",\"license\":\"MIT\"},\"@1inch/token-plugins/contracts/interfaces/IPlugin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20Plugins } from \\\"./IERC20Plugins.sol\\\";\\n\\ninterface IPlugin {\\n    function token() external view returns(IERC20Plugins);\\n    function updateBalances(address from, address to, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0xe9d4625460ec99ee9cac2de5edcad4915ca5a2065dfbe5aca73418cc5691be98\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/interfaces/IDividendDispatcherPlugin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport { IPlugin } from \\\"@1inch/token-plugins/contracts/interfaces/IPlugin.sol\\\";\\n\\ninterface IDividendDispatcherPlugin is IPlugin, IERC20 {\\n  function payDividend(uint256 value) external;\\n}\\n\",\"keccak256\":\"0x260dcceff2075a6405b585d86b58d9cb6f68a1145c0515f31b62cd456f2e17c7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}